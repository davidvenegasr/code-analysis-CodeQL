JShellInjectionConfigurationfloat|double|int|boolean|short|byte|char|longClassValue$ClassValueMapClassValue$IdentityClassValue$EntryClassValue$Entry<?>ClassValue$VersionClassValue$Version<?>ClassValue$Entry<>ClassValue$Entry<T>ClassValue$Version<T>ClassValue$Version<>ModuleLayer$ControllerStackWalker$ExtendedOptionStackWalker$OptionThread$StateThreadLocal$ThreadLocalMap<nulltype>.*/([^/]*?)(?:\.([^.]*))?xmlface_detectiondjl-demo-0.150DownloadsdavidUsersAndroidManifestmainborderresactivity_doodlelayoutactivity_maincolorsdimesstringsstylesfilepathsmxnet_android_templatemxnet-androidic_launcher_backgroundic_launcher_foregrounddrawable-v24ic_launchermipmap-anydpi-v26ic_launcher_roundquickdraw_recognitionpytorch_androidstyle_transfer_cycleganthemesvalues-nightctr-predictionapache-beamlog4j2inferentiaawslogbackcanaryhybridhuggingfacejavademodjllibmulti-engineexamplequarkusextensionextension-examplevisualization-vueiolanginternaljdkObjectInputFilter$FilterInfoObjectInputFilter$StatusObjectInputStream$GetFieldObjectOutputStream$PutFieldObjectStreamClass$ClassDataSlotconcurrentutilreflectMap$EntryWeakHashMap$EntryStackWalker$StackFrameThread$UncaughtExceptionHandlerannotationBoundMethodHandle$Specializer$FactoryClassSpecializer$FactoryClassSpecializer$SpeciesDataBoundMethodHandle$SpecializerBoundMethodHandle$SpeciesDataLambdaForm$BasicTypeLambdaForm$HiddenLambdaForm$KindLambdaForm$NameLambdaForm$NamedFunctionMemberName$FactoryMethodHandle$PolymorphicSignatureMethodHandleImpl$ArrayAccessMethodHandleImpl$IntrinsicMethodHandleImpl$LoopClausesMethodType$ConcurrentWeakInternSetVarHandle$AccessDescriptorVarHandle$AccessModeVarHandle$AccessTypeVarHandle$TypesAndInvokersModuleDescriptor$BuilderModuleDescriptor$Exports$ModifierModuleDescriptor$ExportsModuleDescriptor$ModifierModuleDescriptor$Opens$ModifierModuleDescriptor$OpensModuleDescriptor$ProvidesModuleDescriptor$Requires$ModifierModuleDescriptor$RequiresModuleDescriptor$VersionCleaner$CleanablemathnetInetAddress$InetAddressHolderProxy$TypeniochannelsattributefileFileChannel$MapModespiDirectoryStream$FilterWatchEvent$KindWatchEvent$ModifiersecurityProtectionDomain$KeyProvider$ServicecertAttributedCharacterIterator$AttributeFormat$FieldFormat$FieldDelegatetimetemporalDateTimeFormatterBuilder$CompositePrinterParserDateTimeFormatterBuilder$DateTimePrinterParserZoneOffsetTransitionRule$TimeDefinitionLocale$CategoryLocale$FilteringModeLocale$IsoCountryCodeLocale$LanguageRangePrimitiveIterator$OfDoublePrimitiveIterator$OfIntPrimitiveIterator$OfLongSpliterator$OfDoubleSpliterator$OfPrimitiveSpliterator$OfIntSpliterator$OfLongConcurrentHashMap$CollectionViewConcurrentHashMap$KeySetViewConcurrentHashMap$NodeCollector$CharacteristicsDoubleStream$BuilderIntStream$BuilderLongStream$BuilderStream$BuilderauthjavaxmiscServicesCatalog$ServiceProviderConstantPool$Tagvmapiguardian-api-1.1.0fc9dff4bb36d627bdc553de77e1f17efd790876corgapiguardianfiles-2modules-2cachesgradleAPI$Statusjunit-jupiter-api-5.7.2f4b4079732a9c537983324cfa4e46655f21d2c565.7org.junitjupiterjunitjunit-platform-commons-1.7.234adfea6c13fc4a996cf38cdad80800ce850d1981.7platformcommonsopentest4j-1.2.028c11eb91f9b6d8e200631d46e20a7f407f2a046sunchgenericstreevisitorlocaleInternalLocaleBuilder$CaseInsensitiveCharInternalLocaleBuilder$CaseInsensitiveStringp0p1p2p3p4p5p6p7p8p9p10p11p12p13p14p15p16p17p18p19+=-=*=/=%=&=|=^=<<=>>=>>>= *  /  %  +  -  &  |  ^  <  >  <<  >>  &&  ||  <=  >=  ==  !=  >>> /*  */;null-...+...~...!...{...}break...++...--++...--......[]? ...assertTrue(...)someLibraryMethod(...){ ... }try ...<Expr>;...|......&......[...]if (...)continuevar ...;(...)......->......::...throw ...this(...)yield ...return ...assert ...super(...)while (...)catch (...)...?...:...switch (...)<Label>: ...for (... : ...)...instanceof...for (...;...;...)do ... while (...)synchronized (...)thissuperLibrary classUnderTestnew Library(...)import Libraryimport Library.*import static Library.*import Objectimport Object.*import static Object.*import Testimport Test.*import static Test.*import Assertionsimport Assertions.*import static Assertions.*import LibraryTestimport LibraryTest.*import static LibraryTest.*import Stringimport String.*import static String.*import Closeableimport Closeable.*import static Closeable.*import AutoCloseableimport AutoCloseable.*import static AutoCloseable.*import IOExceptionimport IOException.*import static IOException.*import DataInputimport DataInput.*import static DataInput.*import Cloneableimport Cloneable.*import static Cloneable.*import Serializableimport Serializable.*import static Serializable.*import DataOutputimport DataOutput.*import static DataOutput.*import Fileimport File.*import static File.*import Comparableimport Comparable.*import static Comparable.*import Comparable<File>import Comparable<File>.*import static Comparable<File>.*import Pathimport Path.*import static Path.*import FileFilterimport FileFilter.*import static FileFilter.*import FilenameFilterimport FilenameFilter.*import static FilenameFilter.*import URIimport URI.*import static URI.*import URLimport URL.*import static URL.*import Deprecatedimport Deprecated.*import static Deprecated.*import MalformedURLExceptionimport MalformedURLException.*import static MalformedURLException.*import FileDescriptorimport FileDescriptor.*import static FileDescriptor.*import PhantomCleanableimport PhantomCleanable.*import static PhantomCleanable.*import PhantomCleanable<FileDescriptor>import PhantomCleanable<FileDescriptor>.*import static PhantomCleanable<FileDescriptor>.*import PhantomReferenceimport PhantomReference.*import static PhantomReference.*import PhantomReference<FileDescriptor>import PhantomReference<FileDescriptor>.*import static PhantomReference<FileDescriptor>.*import Referenceimport Reference.*import static Reference.*import Reference<FileDescriptor>import Reference<FileDescriptor>.*import static Reference<FileDescriptor>.*import Cleanableimport Cleanable.*import static Cleanable.*import SyncFailedExceptionimport SyncFailedException.*import static SyncFailedException.*import FunctionalInterfaceimport FunctionalInterface.*import static FunctionalInterface.*import FileNotFoundExceptionimport FileNotFoundException.*import static FileNotFoundException.*import FilterOutputStreamimport FilterOutputStream.*import static FilterOutputStream.*import OutputStreamimport OutputStream.*import static OutputStream.*import Flushableimport Flushable.*import static Flushable.*import Exceptionimport Exception.*import static Exception.*import Throwableimport Throwable.*import static Throwable.*import InputStreamimport InputStream.*import static InputStream.*import InvalidClassExceptionimport InvalidClassException.*import static InvalidClassException.*import ObjectStreamExceptionimport ObjectStreamException.*import static ObjectStreamException.*import InvalidObjectExceptionimport InvalidObjectException.*import static InvalidObjectException.*import NotActiveExceptionimport NotActiveException.*import static NotActiveException.*import ObjectInputimport ObjectInput.*import static ObjectInput.*import ClassNotFoundExceptionimport ClassNotFoundException.*import static ClassNotFoundException.*import FilterInfoimport FilterInfo.*import static FilterInfo.*import ObjectInputFilterimport ObjectInputFilter.*import static ObjectInputFilter.*import Classimport Class.*import static Class.*import Class<>import Class<>.*import static Class<>.*import GenericDeclarationimport GenericDeclaration.*import static GenericDeclaration.*import Typeimport Type.*import static Type.*import AnnotatedElementimport AnnotatedElement.*import static AnnotatedElement.*import Class<?>import Class<?>.*import static Class<?>.*import Statusimport Status.*import static Status.*import Enumimport Enum.*import static Enum.*import Enum<Status>import Enum<Status>.*import static Enum<Status>.*import Comparable<Status>import Comparable<Status>.*import static Comparable<Status>.*import Enum<>import Enum<>.*import static Enum<>.*import Comparable<>import Comparable<>.*import static Comparable<>.*import Enum<T>import Enum<T>.*import static Enum<T>.*import Comparable<T>import Comparable<T>.*import static Comparable<T>.*import Class<T>import Class<T>.*import static Class<T>.*import Class<E>import Class<E>.*import static Class<E>.*import Class<Status>import Class<Status>.*import static Class<Status>.*import CloneNotSupportedExceptionimport CloneNotSupportedException.*import static CloneNotSupportedException.*import GetFieldimport GetField.*import static GetField.*import ObjectInputStreamimport ObjectInputStream.*import static ObjectInputStream.*import ObjectStreamClassimport ObjectStreamClass.*import static ObjectStreamClass.*import ObjectStreamConstantsimport ObjectStreamConstants.*import static ObjectStreamConstants.*import StreamCorruptedExceptionimport StreamCorruptedException.*import static StreamCorruptedException.*import SecurityExceptionimport SecurityException.*import static SecurityException.*import ObjectInputValidationimport ObjectInputValidation.*import static ObjectInputValidation.*import ObjectOutputimport ObjectOutput.*import static ObjectOutput.*import PutFieldimport PutField.*import static PutField.*import ObjectOutputStreamimport ObjectOutputStream.*import static ObjectOutputStream.*import ClassDataSlotimport ClassDataSlot.*import static ClassDataSlot.*import ReferenceQueueimport ReferenceQueue.*import static ReferenceQueue.*import ReferenceQueue<Class<?>>import ReferenceQueue<Class<?>>.*import static ReferenceQueue<Class<?>>.*import ConcurrentMapimport ConcurrentMap.*import static ConcurrentMap.*import WeakReferenceimport WeakReference.*import static WeakReference.*import WeakReference<Class<?>>import WeakReference<Class<?>>.*import static WeakReference<Class<?>>.*import Reference<Class<?>>import Reference<Class<?>>.*import static Reference<Class<?>>.*import ConcurrentMap<? extends WeakReference<Class<?>>,?>import ConcurrentMap<? extends WeakReference<Class<?>>,?>.*import static ConcurrentMap<? extends WeakReference<Class<?>>,?>.*import Mapimport Map.*import static Map.*import Map<? extends WeakReference<Class<?>>,?>import Map<? extends WeakReference<Class<?>>,?>.*import static Map<? extends WeakReference<Class<?>>,?>.*import UnsupportedOperationExceptionimport UnsupportedOperationException.*import static UnsupportedOperationException.*import InstantiationExceptionimport InstantiationException.*import static InstantiationException.*import InvocationTargetExceptionimport InvocationTargetException.*import static InvocationTargetException.*import ObjectStreamFieldimport ObjectStreamField.*import static ObjectStreamField.*import CallerSensitiveimport CallerSensitive.*import static CallerSensitive.*import SerializablePermissionimport SerializablePermission.*import static SerializablePermission.*import Comparable<Object>import Comparable<Object>.*import static Comparable<Object>.*import Fieldimport Field.*import static Field.*import StringBuilderimport StringBuilder.*import static StringBuilder.*import OptionalDataExceptionimport OptionalDataException.*import static OptionalDataException.*import PrintStreamimport PrintStream.*import static PrintStream.*import Appendableimport Appendable.*import static Appendable.*import CharSequenceimport CharSequence.*import static CharSequence.*import Localeimport Locale.*import static Locale.*import Charsetimport Charset.*import static Charset.*import UnsupportedEncodingExceptionimport UnsupportedEncodingException.*import static UnsupportedEncodingException.*import PrintWriterimport PrintWriter.*import static PrintWriter.*import Writerimport Writer.*import static Writer.*import Readerimport Reader.*import static Reader.*import Readableimport Readable.*import static Readable.*import CharBufferimport CharBuffer.*import static CharBuffer.*import BasicPermissionimport BasicPermission.*import static BasicPermission.*import AbstractStringBuilderimport AbstractStringBuilder.*import static AbstractStringBuilder.*import IntStreamimport IntStream.*import static IntStream.*import StringBufferimport StringBuffer.*import static StringBuffer.*import ArrayIndexOutOfBoundsExceptionimport ArrayIndexOutOfBoundsException.*import static ArrayIndexOutOfBoundsException.*import IndexOutOfBoundsExceptionimport IndexOutOfBoundsException.*import static IndexOutOfBoundsException.*import AssertionErrorimport AssertionError.*import static AssertionError.*import Errorimport Error.*import static Error.*import Booleanimport Boolean.*import static Boolean.*import Comparable<Boolean>import Comparable<Boolean>.*import static Comparable<Boolean>.*import HotSpotIntrinsicCandidateimport HotSpotIntrinsicCandidate.*import static HotSpotIntrinsicCandidate.*import Class<Boolean>import Class<Boolean>.*import static Class<Boolean>.*import Byteimport Byte.*import static Byte.*import Numberimport Number.*import static Number.*import Comparable<Byte>import Comparable<Byte>.*import static Comparable<Byte>.*import NumberFormatExceptionimport NumberFormatException.*import static NumberFormatException.*import Class<Byte>import Class<Byte>.*import static Class<Byte>.*import Characterimport Character.*import static Character.*import Comparable<Character>import Comparable<Character>.*import static Comparable<Character>.*import Class<Character>import Class<Character>.*import static Class<Character>.*import AnnotatedTypeimport AnnotatedType.*import static AnnotatedType.*import Map<>import Map<>.*import static Map<>.*import Annotationimport Annotation.*import static Annotation.*import Class<? extends Annotation>import Class<? extends Annotation>.*import static Class<? extends Annotation>.*import Map<Class<? extends Annotation>,Annotation>import Map<Class<? extends Annotation>,Annotation>.*import static Map<Class<? extends Annotation>,Annotation>.*import AnnotationTypeimport AnnotationType.*import static AnnotationType.*import Class<A>import Class<A>.*import static Class<A>.*import Class<? extends U>import Class<? extends U>.*import static Class<? extends U>.*import Class<U>import Class<U>.*import static Class<U>.*import Map<String,T>import Map<String,T>.*import static Map<String,T>.*import ConstantPoolimport ConstantPool.*import static ConstantPool.*import Executableimport Executable.*import static Executable.*import ProtectionDomainimport ProtectionDomain.*import static ProtectionDomain.*import Constructorimport Constructor.*import static Constructor.*import Constructor<>import Constructor<>.*import static Constructor<>.*import Constructor<T>import Constructor<T>.*import static Constructor<T>.*import NoSuchMethodExceptionimport NoSuchMethodException.*import static NoSuchMethodException.*import Listimport List.*import static List.*import List<>import List<>.*import static List<>.*import Collectionimport Collection.*import static Collection.*import Collection<>import Collection<>.*import static Collection<>.*import Iterableimport Iterable.*import static Iterable.*import Iterable<>import Iterable<>.*import static Iterable<>.*import Methodimport Method.*import static Method.*import List<Method>import List<Method>.*import static List<Method>.*import Collection<Method>import Collection<Method>.*import static Collection<Method>.*import Iterable<Method>import Iterable<Method>.*import static Iterable<Method>.*import NoSuchFieldExceptionimport NoSuchFieldException.*import static NoSuchFieldException.*import Constructor<?>import Constructor<?>.*import static Constructor<?>.*import Packageimport Package.*import static Package.*import Class<? super T>import Class<? super T>.*import static Class<? super T>.*import TypeVariableimport TypeVariable.*import static TypeVariable.*import TypeVariable<>import TypeVariable<>.*import static TypeVariable<>.*import TypeVariable<Class>import TypeVariable<Class>.*import static TypeVariable<Class>.*import Moduleimport Module.*import static Module.*import ClassLoaderimport ClassLoader.*import static ClassLoader.*import ForceInlineimport ForceInline.*import static ForceInline.*import IllegalAccessExceptionimport IllegalAccessException.*import static IllegalAccessException.*import ClassValueMapimport ClassValueMap.*import static ClassValueMap.*import ClassFormatErrorimport ClassFormatError.*import static ClassFormatError.*import LinkageErrorimport LinkageError.*import static LinkageError.*import ConcurrentHashMapimport ConcurrentHashMap.*import static ConcurrentHashMap.*import ConcurrentHashMap<>import ConcurrentHashMap<>.*import static ConcurrentHashMap<>.*import AbstractMapimport AbstractMap.*import static AbstractMap.*import AbstractMap<>import AbstractMap<>.*import static AbstractMap<>.*import ConcurrentMap<>import ConcurrentMap<>.*import static ConcurrentMap<>.*import ConcurrentHashMap<?,?>import ConcurrentHashMap<?,?>.*import static ConcurrentHashMap<?,?>.*import AbstractMap<?,?>import AbstractMap<?,?>.*import static AbstractMap<?,?>.*import Map<?,?>import Map<?,?>.*import static Map<?,?>.*import ConcurrentMap<?,?>import ConcurrentMap<?,?>.*import static ConcurrentMap<?,?>.*import Streamimport Stream.*import static Stream.*import Stream<>import Stream<>.*import static Stream<>.*import BaseStreamimport BaseStream.*import static BaseStream.*import BaseStream<>import BaseStream<>.*import static BaseStream<>.*import Stream<Package>import Stream<Package>.*import static Stream<Package>.*import BaseStream<Package,Stream<Package>>import BaseStream<Package,Stream<Package>>.*import static BaseStream<Package,Stream<Package>>.*import Enumerationimport Enumeration.*import static Enumeration.*import Enumeration<>import Enumeration<>.*import static Enumeration<>.*import Enumeration<URL>import Enumeration<URL>.*import static Enumeration<URL>.*import Stream<URL>import Stream<URL>.*import static Stream<URL>.*import BaseStream<URL,Stream<URL>>import BaseStream<URL,Stream<URL>>.*import static BaseStream<URL,Stream<URL>>.*import ByteBufferimport ByteBuffer.*import static ByteBuffer.*import Map<String,Boolean>import Map<String,Boolean>.*import static Map<String,Boolean>.*import ReflectiveOperationExceptionimport ReflectiveOperationException.*import static ReflectiveOperationException.*import WeakHashMapimport WeakHashMap.*import static WeakHashMap.*import Identityimport Identity.*import static Identity.*import Entryimport Entry.*import static Entry.*import Entry<?>import Entry<?>.*import static Entry<?>.*import Versionimport Version.*import static Version.*import Version<?>import Version<?>.*import static Version<?>.*import ClassValueimport ClassValue.*import static ClassValue.*import WeakReference<Version<?>>import WeakReference<Version<?>>.*import static WeakReference<Version<?>>.*import Reference<Version<?>>import Reference<Version<?>>.*import static Reference<Version<?>>.*import WeakHashMap<Identity,Entry<?>>import WeakHashMap<Identity,Entry<?>>.*import static WeakHashMap<Identity,Entry<?>>.*import AbstractMap<Identity,Entry<?>>import AbstractMap<Identity,Entry<?>>.*import static AbstractMap<Identity,Entry<?>>.*import Map<Identity,Entry<?>>import Map<Identity,Entry<?>>.*import static Map<Identity,Entry<?>>.*import Map<K,V>import Map<K,V>.*import static Map<K,V>.*import Map<? extends K,? extends V>import Map<? extends K,? extends V>.*import static Map<? extends K,? extends V>.*import Entry<>import Entry<>.*import static Entry<>.*import Entry<K,V>import Entry<K,V>.*import static Entry<K,V>.*import Entry<? extends K,? extends V>import Entry<? extends K,? extends V>.*import static Entry<? extends K,? extends V>.*import BiFunctionimport BiFunction.*import static BiFunction.*import BiFunction<? super V,? super V,? extends V>import BiFunction<? super V,? super V,? extends V>.*import static BiFunction<? super V,? super V,? extends V>.*import BiFunction<? super Entry<?>,? super Entry<?>,? extends Entry<?>>import BiFunction<? super Entry<?>,? super Entry<?>,? extends Entry<?>>.*import static BiFunction<? super Entry<?>,? super Entry<?>,? extends Entry<?>>.*import WeakReference<>import WeakReference<>.*import static WeakReference<>.*import Reference<>import Reference<>.*import static Reference<>.*import BiFunction<? super K,? super V,? extends V>import BiFunction<? super K,? super V,? extends V>.*import static BiFunction<? super K,? super V,? extends V>.*import BiFunction<? super Identity,? super Entry<?>,? extends Entry<?>>import BiFunction<? super Identity,? super Entry<?>,? extends Entry<?>>.*import static BiFunction<? super Identity,? super Entry<?>,? extends Entry<?>>.*import Functionimport Function.*import static Function.*import Function<? super K,? extends V>import Function<? super K,? extends V>.*import static Function<? super K,? extends V>.*import Function<? super Identity,? extends Entry<?>>import Function<? super Identity,? extends Entry<?>>.*import static Function<? super Identity,? extends Entry<?>>.*import BiConsumerimport BiConsumer.*import static BiConsumer.*import BiConsumer<? super K,? super V>import BiConsumer<? super K,? super V>.*import static BiConsumer<? super K,? super V>.*import BiConsumer<? super Identity,? super Entry<?>>import BiConsumer<? super Identity,? super Entry<?>>.*import static BiConsumer<? super Identity,? super Entry<?>>.*import Setimport Set.*import static Set.*import Set<>import Set<>.*import static Set<>.*import Set<Entry<K,V>>import Set<Entry<K,V>>.*import static Set<Entry<K,V>>.*import Collection<Entry<K,V>>import Collection<Entry<K,V>>.*import static Collection<Entry<K,V>>.*import Iterable<Entry<K,V>>import Iterable<Entry<K,V>>.*import static Iterable<Entry<K,V>>.*import Entry<Identity,Entry<?>>import Entry<Identity,Entry<?>>.*import static Entry<Identity,Entry<?>>.*import Set<Entry<Identity,Entry<?>>>import Set<Entry<Identity,Entry<?>>>.*import static Set<Entry<Identity,Entry<?>>>.*import Collection<Entry<Identity,Entry<?>>>import Collection<Entry<Identity,Entry<?>>>.*import static Collection<Entry<Identity,Entry<?>>>.*import Iterable<Entry<Identity,Entry<?>>>import Iterable<Entry<Identity,Entry<?>>>.*import static Iterable<Entry<Identity,Entry<?>>>.*import Collection<V>import Collection<V>.*import static Collection<V>.*import Iterable<V>import Iterable<V>.*import static Iterable<V>.*import Collection<Entry<?>>import Collection<Entry<?>>.*import static Collection<Entry<?>>.*import Iterable<Entry<?>>import Iterable<Entry<?>>.*import static Iterable<Entry<?>>.*import Set<K>import Set<K>.*import static Set<K>.*import Collection<K>import Collection<K>.*import static Collection<K>.*import Iterable<K>import Iterable<K>.*import static Iterable<K>.*import Set<Identity>import Set<Identity>.*import static Set<Identity>.*import Collection<Identity>import Collection<Identity>.*import static Collection<Identity>.*import Iterable<Identity>import Iterable<Identity>.*import static Iterable<Identity>.*import Map<? extends Identity,? extends Entry<?>>import Map<? extends Identity,? extends Entry<?>>.*import static Map<? extends Identity,? extends Entry<?>>.*import WeakReference<Object>import WeakReference<Object>.*import static WeakReference<Object>.*import Reference<Object>import Reference<Object>.*import static Reference<Object>.*import ClassValue<>import ClassValue<>.*import static ClassValue<>.*import Entry<T>import Entry<T>.*import static Entry<T>.*import Version<T>import Version<T>.*import static Version<T>.*import WeakReference<Version<T>>import WeakReference<Version<T>>.*import static WeakReference<Version<T>>.*import Reference<Version<T>>import Reference<Version<T>>.*import static Reference<Version<T>>.*import ClassValue<T>import ClassValue<T>.*import static ClassValue<T>.*import ClassValue<?>import ClassValue<?>.*import static ClassValue<?>.*import ReferenceQueue<? super T>import ReferenceQueue<? super T>.*import static ReferenceQueue<? super T>.*import ReferenceQueue<? super Version<T>>import ReferenceQueue<? super Version<T>>.*import static ReferenceQueue<? super Version<T>>.*import Version<>import Version<>.*import static Version<>.*import WeakReference<Version>import WeakReference<Version>.*import static WeakReference<Version>.*import Reference<Version>import Reference<Version>.*import static Reference<Version>.*import Documentedimport Documented.*import static Documented.*import Retentionimport Retention.*import static Retention.*import RetentionPolicyimport RetentionPolicy.*import static RetentionPolicy.*import Targetimport Target.*import static Target.*import ElementTypeimport ElementType.*import static ElementType.*import Doubleimport Double.*import static Double.*import Comparable<Double>import Comparable<Double>.*import static Comparable<Double>.*import Class<Double>import Class<Double>.*import static Class<Double>.*import Comparable<E>import Comparable<E>.*import static Comparable<E>.*import Floatimport Float.*import static Float.*import Comparable<Float>import Comparable<Float>.*import static Comparable<Float>.*import Class<Float>import Class<Float>.*import static Class<Float>.*import IllegalArgumentExceptionimport IllegalArgumentException.*import static IllegalArgumentException.*import RuntimeExceptionimport RuntimeException.*import static RuntimeException.*import Integerimport Integer.*import static Integer.*import Comparable<Integer>import Comparable<Integer>.*import static Comparable<Integer>.*import Class<Integer>import Class<Integer>.*import static Class<Integer>.*import InternalErrorimport InternalError.*import static InternalError.*import VirtualMachineErrorimport VirtualMachineError.*import static VirtualMachineError.*import InterruptedExceptionimport InterruptedException.*import static InterruptedException.*import Spliteratorimport Spliterator.*import static Spliterator.*import Spliterator<>import Spliterator<>.*import static Spliterator<>.*import Spliterator<T>import Spliterator<T>.*import static Spliterator<T>.*import Consumerimport Consumer.*import static Consumer.*import Consumer<? super T>import Consumer<? super T>.*import static Consumer<? super T>.*import Iteratorimport Iterator.*import static Iterator.*import Iterator<>import Iterator<>.*import static Iterator<>.*import Iterator<T>import Iterator<T>.*import static Iterator<T>.*import Longimport Long.*import static Long.*import Comparable<Long>import Comparable<Long>.*import static Comparable<Long>.*import Class<Long>import Class<Long>.*import static Class<Long>.*import Configurationimport Configuration.*import static Configuration.*import Function<String,ClassLoader>import Function<String,ClassLoader>.*import static Function<String,ClassLoader>.*import ModuleLayerimport ModuleLayer.*import static ModuleLayer.*import Map<String,Module>import Map<String,Module>.*import static Map<String,Module>.*import Set<String>import Set<String>.*import static Set<String>.*import Collection<String>import Collection<String>.*import static Collection<String>.*import Iterable<String>import Iterable<String>.*import static Iterable<String>.*import Iterator<String>import Iterator<String>.*import static Iterator<String>.*import ModuleDescriptorimport ModuleDescriptor.*import static ModuleDescriptor.*import Controllerimport Controller.*import static Controller.*import Stream<ModuleLayer>import Stream<ModuleLayer>.*import static Stream<ModuleLayer>.*import BaseStream<ModuleLayer,Stream<ModuleLayer>>import BaseStream<ModuleLayer,Stream<ModuleLayer>>.*import static BaseStream<ModuleLayer,Stream<ModuleLayer>>.*import ServicesCatalogimport ServicesCatalog.*import static ServicesCatalog.*import Optionalimport Optional.*import static Optional.*import Optional<>import Optional<>.*import static Optional<>.*import Optional<Module>import Optional<Module>.*import static Optional<Module>.*import Set<Module>import Set<Module>.*import static Set<Module>.*import Collection<Module>import Collection<Module>.*import static Collection<Module>.*import Iterable<Module>import Iterable<Module>.*import static Iterable<Module>.*import List<ModuleLayer>import List<ModuleLayer>.*import static List<ModuleLayer>.*import Collection<ModuleLayer>import Collection<ModuleLayer>.*import static Collection<ModuleLayer>.*import Iterable<ModuleLayer>import Iterable<ModuleLayer>.*import static Iterable<ModuleLayer>.*import NamedPackageimport NamedPackage.*import static NamedPackage.*import Runnableimport Runnable.*import static Runnable.*import SafeVarargsimport SafeVarargs.*import static SafeVarargs.*import Shortimport Short.*import static Short.*import Comparable<Short>import Comparable<Short>.*import static Comparable<Short>.*import Class<Short>import Class<Short>.*import static Class<Short>.*import StackFrameInfoimport StackFrameInfo.*import static StackFrameInfo.*import StackFrameimport StackFrame.*import static StackFrame.*import StackTraceElementimport StackTraceElement.*import static StackTraceElement.*import MethodTypeimport MethodType.*import static MethodType.*import StackWalkerimport StackWalker.*import static StackWalker.*import ExtendedOptionimport ExtendedOption.*import static ExtendedOption.*import Enum<ExtendedOption>import Enum<ExtendedOption>.*import static Enum<ExtendedOption>.*import Comparable<ExtendedOption>import Comparable<ExtendedOption>.*import static Comparable<ExtendedOption>.*import Class<ExtendedOption>import Class<ExtendedOption>.*import static Class<ExtendedOption>.*import Optionimport Option.*import static Option.*import Enum<Option>import Enum<Option>.*import static Enum<Option>.*import Comparable<Option>import Comparable<Option>.*import static Comparable<Option>.*import Class<Option>import Class<Option>.*import static Class<Option>.*import Set<Option>import Set<Option>.*import static Set<Option>.*import Collection<Option>import Collection<Option>.*import static Collection<Option>.*import Iterable<Option>import Iterable<Option>.*import static Iterable<Option>.*import Consumer<? super StackFrame>import Consumer<? super StackFrame>.*import static Consumer<? super StackFrame>.*import Function<>import Function<>.*import static Function<>.*import Stream<StackFrame>import Stream<StackFrame>.*import static Stream<StackFrame>.*import BaseStream<StackFrame,Stream<StackFrame>>import BaseStream<StackFrame,Stream<StackFrame>>.*import static BaseStream<StackFrame,Stream<StackFrame>>.*import Function<? super Stream<StackFrame>,? extends T>import Function<? super Stream<StackFrame>,? extends T>.*import static Function<? super Stream<StackFrame>,? extends T>.*import EnumSetimport EnumSet.*import static EnumSet.*import EnumSet<Option>import EnumSet<Option>.*import static EnumSet<Option>.*import AbstractSetimport AbstractSet.*import static AbstractSet.*import AbstractSet<Option>import AbstractSet<Option>.*import static AbstractSet<Option>.*import AbstractCollectionimport AbstractCollection.*import static AbstractCollection.*import AbstractCollection<Option>import AbstractCollection<Option>.*import static AbstractCollection<Option>.*import Comparable<String>import Comparable<String>.*import static Comparable<String>.*import Voidimport Void.*import static Void.*import Stream<String>import Stream<String>.*import static Stream<String>.*import BaseStream<String,Stream<String>>import BaseStream<String,Stream<String>>.*import static BaseStream<String,Stream<String>>.*import Iterable<? extends CharSequence>import Iterable<? extends CharSequence>.*import static Iterable<? extends CharSequence>.*import Comparatorimport Comparator.*import static Comparator.*import Comparator<String>import Comparator<String>.*import static Comparator<String>.*import Comparable<StringBuffer>import Comparable<StringBuffer>.*import static Comparable<StringBuffer>.*import Comparable<StringBuilder>import Comparable<StringBuilder>.*import static Comparable<StringBuilder>.*import Stateimport State.*import static State.*import Enum<State>import Enum<State>.*import static Enum<State>.*import Comparable<State>import Comparable<State>.*import static Comparable<State>.*import Class<State>import Class<State>.*import static Class<State>.*import Threadimport Thread.*import static Thread.*import UncaughtExceptionHandlerimport UncaughtExceptionHandler.*import static UncaughtExceptionHandler.*import Map<Thread,StackTraceElement[]>import Map<Thread,StackTraceElement[]>.*import static Map<Thread,StackTraceElement[]>.*import ThreadGroupimport ThreadGroup.*import static ThreadGroup.*import AccessControlContextimport AccessControlContext.*import static AccessControlContext.*import Interruptibleimport Interruptible.*import static Interruptible.*import Contendedimport Contended.*import static Contended.*import ThreadLocalMapimport ThreadLocalMap.*import static ThreadLocalMap.*import ThreadLocalimport ThreadLocal.*import static ThreadLocal.*import ThreadLocal<?>import ThreadLocal<?>.*import static ThreadLocal<?>.*import Supplierimport Supplier.*import static Supplier.*import Supplier<>import Supplier<>.*import static Supplier<>.*import ThreadLocal<>import ThreadLocal<>.*import static ThreadLocal<>.*import ThreadLocal<S>import ThreadLocal<S>.*import static ThreadLocal<S>.*import Supplier<? extends S>import Supplier<? extends S>.*import static Supplier<? extends S>.*import TypeNotPresentExceptionimport TypeNotPresentException.*import static TypeNotPresentException.*import Class<Void>import Class<Void>.*import static Class<Void>.*import Enum<ElementType>import Enum<ElementType>.*import static Enum<ElementType>.*import Comparable<ElementType>import Comparable<ElementType>.*import static Comparable<ElementType>.*import Class<ElementType>import Class<ElementType>.*import static Class<ElementType>.*import Inheritedimport Inherited.*import static Inherited.*import Enum<RetentionPolicy>import Enum<RetentionPolicy>.*import static Enum<RetentionPolicy>.*import Comparable<RetentionPolicy>import Comparable<RetentionPolicy>.*import static Comparable<RetentionPolicy>.*import Class<RetentionPolicy>import Class<RetentionPolicy>.*import static Class<RetentionPolicy>.*import Factoryimport Factory.*import static Factory.*import BoundMethodHandleimport BoundMethodHandle.*import static BoundMethodHandle.*import SpeciesDataimport SpeciesData.*import static SpeciesData.*import Factory<>import Factory<>.*import static Factory<>.*import ClassSpecializerimport ClassSpecializer.*import static ClassSpecializer.*import ClassSpecializer<BoundMethodHandle,String,SpeciesData>import ClassSpecializer<BoundMethodHandle,String,SpeciesData>.*import static ClassSpecializer<BoundMethodHandle,String,SpeciesData>.*import Class<? extends T>import Class<? extends T>.*import static Class<? extends T>.*import List<Class<?>>import List<Class<?>>.*import static List<Class<?>>.*import Collection<Class<?>>import Collection<Class<?>>.*import static Collection<Class<?>>.*import Iterable<Class<?>>import Iterable<Class<?>>.*import static Iterable<Class<?>>.*import MethodHandleimport MethodHandle.*import static MethodHandle.*import Class<? extends BoundMethodHandle>import Class<? extends BoundMethodHandle>.*import static Class<? extends BoundMethodHandle>.*import SpeciesData<>import SpeciesData<>.*import static SpeciesData<>.*import ClassSpecializer<>import ClassSpecializer<>.*import static ClassSpecializer<>.*import List<MethodHandle>import List<MethodHandle>.*import static List<MethodHandle>.*import Collection<MethodHandle>import Collection<MethodHandle>.*import static Collection<MethodHandle>.*import Iterable<MethodHandle>import Iterable<MethodHandle>.*import static Iterable<MethodHandle>.*import NamedFunctionimport NamedFunction.*import static NamedFunction.*import List<NamedFunction>import List<NamedFunction>.*import static List<NamedFunction>.*import Collection<NamedFunction>import Collection<NamedFunction>.*import static Collection<NamedFunction>.*import Iterable<NamedFunction>import Iterable<NamedFunction>.*import static Iterable<NamedFunction>.*import Specializerimport Specializer.*import static Specializer.*import Class<K>import Class<K>.*import static Class<K>.*import Class<S>import Class<S>.*import static Class<S>.*import MemberNameimport MemberName.*import static MemberName.*import List<MemberName>import List<MemberName>.*import static List<MemberName>.*import Collection<MemberName>import Collection<MemberName>.*import static Collection<MemberName>.*import Iterable<MemberName>import Iterable<MemberName>.*import static Iterable<MemberName>.*import Class<BoundMethodHandle>import Class<BoundMethodHandle>.*import static Class<BoundMethodHandle>.*import Class<String>import Class<String>.*import static Class<String>.*import Class<SpeciesData>import Class<SpeciesData>.*import static Class<SpeciesData>.*import List<X>import List<X>.*import static List<X>.*import Collection<X>import Collection<X>.*import static Collection<X>.*import Iterable<X>import Iterable<X>.*import static Iterable<X>.*import LambdaFormimport LambdaForm.*import static LambdaForm.*import LambdaFormEditorimport LambdaFormEditor.*import static LambdaFormEditor.*import BasicTypeimport BasicType.*import static BasicType.*import CallSiteimport CallSite.*import static CallSite.*import Invokersimport Invokers.*import static Invokers.*import DontInlineimport DontInline.*import static DontInline.*import WrongMethodTypeExceptionimport WrongMethodTypeException.*import static WrongMethodTypeException.*import VarHandleimport VarHandle.*import static VarHandle.*import AccessDescriptorimport AccessDescriptor.*import static AccessDescriptor.*import AccessModeimport AccessMode.*import static AccessMode.*import Enum<BasicType>import Enum<BasicType>.*import static Enum<BasicType>.*import Comparable<BasicType>import Comparable<BasicType>.*import static Comparable<BasicType>.*import Class<BasicType>import Class<BasicType>.*import static Class<BasicType>.*import Wrapperimport Wrapper.*import static Wrapper.*import Stableimport Stable.*import static Stable.*import Hiddenimport Hidden.*import static Hidden.*import Kindimport Kind.*import static Kind.*import Enum<Kind>import Enum<Kind>.*import static Enum<Kind>.*import Comparable<Kind>import Comparable<Kind>.*import static Comparable<Kind>.*import Class<Kind>import Class<Kind>.*import static Class<Kind>.*import Nameimport Name.*import static Name.*import Intrinsicimport Intrinsic.*import static Intrinsic.*import Class<NoSuchMemberException>import Class<NoSuchMemberException>.*import static Class<NoSuchMemberException>.*import Memberimport Member.*import static Member.*import PolymorphicSignatureimport PolymorphicSignature.*import static PolymorphicSignature.*import List<?>import List<?>.*import static List<?>.*import Collection<?>import Collection<?>.*import static Collection<?>.*import Iterable<?>import Iterable<?>.*import static Iterable<?>.*import ArrayAccessimport ArrayAccess.*import static ArrayAccess.*import Enum<ArrayAccess>import Enum<ArrayAccess>.*import static Enum<ArrayAccess>.*import Comparable<ArrayAccess>import Comparable<ArrayAccess>.*import static Comparable<ArrayAccess>.*import Class<ArrayAccess>import Class<ArrayAccess>.*import static Class<ArrayAccess>.*import MethodHandleImplimport MethodHandleImpl.*import static MethodHandleImpl.*import Enum<Intrinsic>import Enum<Intrinsic>.*import static Enum<Intrinsic>.*import Comparable<Intrinsic>import Comparable<Intrinsic>.*import static Comparable<Intrinsic>.*import Class<Intrinsic>import Class<Intrinsic>.*import static Class<Intrinsic>.*import LoopClausesimport LoopClauses.*import static LoopClauses.*import Iterator<?>import Iterator<?>.*import static Iterator<?>.*import Emptyimport Empty.*import static Empty.*import Class<? extends Throwable>import Class<? extends Throwable>.*import static Class<? extends Throwable>.*import ConcurrentWeakInternSetimport ConcurrentWeakInternSet.*import static ConcurrentWeakInternSet.*import MethodTypeFormimport MethodTypeForm.*import static MethodTypeForm.*import ConcurrentWeakInternSet<MethodType>import ConcurrentWeakInternSet<MethodType>.*import static ConcurrentWeakInternSet<MethodType>.*import SoftReferenceimport SoftReference.*import static SoftReference.*import SoftReference<LambdaForm>import SoftReference<LambdaForm>.*import static SoftReference<LambdaForm>.*import Reference<LambdaForm>import Reference<LambdaForm>.*import static Reference<LambdaForm>.*import SoftReference<MethodHandle>import SoftReference<MethodHandle>.*import static SoftReference<MethodHandle>.*import Reference<MethodHandle>import Reference<MethodHandle>.*import static Reference<MethodHandle>.*import VarFormimport VarForm.*import static VarForm.*import Enum<AccessMode>import Enum<AccessMode>.*import static Enum<AccessMode>.*import Comparable<AccessMode>import Comparable<AccessMode>.*import static Comparable<AccessMode>.*import Class<AccessMode>import Class<AccessMode>.*import static Class<AccessMode>.*import AccessTypeimport AccessType.*import static AccessType.*import Map<String,AccessMode>import Map<String,AccessMode>.*import static Map<String,AccessMode>.*import Enum<AccessType>import Enum<AccessType>.*import static Enum<AccessType>.*import Comparable<AccessType>import Comparable<AccessType>.*import static Comparable<AccessType>.*import Class<AccessType>import Class<AccessType>.*import static Class<AccessType>.*import TypesAndInvokersimport TypesAndInvokers.*import static TypesAndInvokers.*import List<Integer>import List<Integer>.*import static List<Integer>.*import Collection<Integer>import Collection<Integer>.*import static Collection<Integer>.*import Iterable<Integer>import Iterable<Integer>.*import static Iterable<Integer>.*import BiFunction<String,List<Integer>,ArrayIndexOutOfBoundsException>import BiFunction<String,List<Integer>,ArrayIndexOutOfBoundsException>.*import static BiFunction<String,List<Integer>,ArrayIndexOutOfBoundsException>.*import Stream<Configuration>import Stream<Configuration>.*import static Stream<Configuration>.*import BaseStream<Configuration,Stream<Configuration>>import BaseStream<Configuration,Stream<Configuration>>.*import static BaseStream<Configuration,Stream<Configuration>>.*import ResolvedModuleimport ResolvedModule.*import static ResolvedModule.*import Set<ResolvedModule>import Set<ResolvedModule>.*import static Set<ResolvedModule>.*import Collection<ResolvedModule>import Collection<ResolvedModule>.*import static Collection<ResolvedModule>.*import Iterable<ResolvedModule>import Iterable<ResolvedModule>.*import static Iterable<ResolvedModule>.*import Set<ModuleDescriptor>import Set<ModuleDescriptor>.*import static Set<ModuleDescriptor>.*import Collection<ModuleDescriptor>import Collection<ModuleDescriptor>.*import static Collection<ModuleDescriptor>.*import Iterable<ModuleDescriptor>import Iterable<ModuleDescriptor>.*import static Iterable<ModuleDescriptor>.*import Optional<ResolvedModule>import Optional<ResolvedModule>.*import static Optional<ResolvedModule>.*import List<Configuration>import List<Configuration>.*import static List<Configuration>.*import Collection<Configuration>import Collection<Configuration>.*import static Collection<Configuration>.*import Iterable<Configuration>import Iterable<Configuration>.*import static Iterable<Configuration>.*import ModuleFinderimport ModuleFinder.*import static ModuleFinder.*import Map<String,Set<String>>import Map<String,Set<String>>.*import static Map<String,Set<String>>.*import Builderimport Builder.*import static Builder.*import List<String>import List<String>.*import static List<String>.*import Providesimport Provides.*import static Provides.*import Modifierimport Modifier.*import static Modifier.*import Set<Modifier>import Set<Modifier>.*import static Set<Modifier>.*import Collection<Modifier>import Collection<Modifier>.*import static Collection<Modifier>.*import Iterable<Modifier>import Iterable<Modifier>.*import static Iterable<Modifier>.*import Opensimport Opens.*import static Opens.*import Exportsimport Exports.*import static Exports.*import Requiresimport Requires.*import static Requires.*import Map<String,Provides>import Map<String,Provides>.*import static Map<String,Provides>.*import Map<String,Opens>import Map<String,Opens>.*import static Map<String,Opens>.*import Map<String,Exports>import Map<String,Exports>.*import static Map<String,Exports>.*import Map<String,Requires>import Map<String,Requires>.*import static Map<String,Requires>.*import Enum<Modifier>import Enum<Modifier>.*import static Enum<Modifier>.*import Comparable<Modifier>import Comparable<Modifier>.*import static Comparable<Modifier>.*import Class<Modifier>import Class<Modifier>.*import static Class<Modifier>.*import Comparable<Exports>import Comparable<Exports>.*import static Comparable<Exports>.*import Comparable<Opens>import Comparable<Opens>.*import static Comparable<Opens>.*import Comparable<Provides>import Comparable<Provides>.*import static Comparable<Provides>.*import Comparable<Requires>import Comparable<Requires>.*import static Comparable<Requires>.*import Optional<String>import Optional<String>.*import static Optional<String>.*import Optional<Version>import Optional<Version>.*import static Optional<Version>.*import Comparable<Version>import Comparable<Version>.*import static Comparable<Version>.*import Comparable<ModuleDescriptor>import Comparable<ModuleDescriptor>.*import static Comparable<ModuleDescriptor>.*import Supplier<Set<String>>import Supplier<Set<String>>.*import static Supplier<Set<String>>.*import Set<Provides>import Set<Provides>.*import static Set<Provides>.*import Collection<Provides>import Collection<Provides>.*import static Collection<Provides>.*import Iterable<Provides>import Iterable<Provides>.*import static Iterable<Provides>.*import Set<Opens>import Set<Opens>.*import static Set<Opens>.*import Collection<Opens>import Collection<Opens>.*import static Collection<Opens>.*import Iterable<Opens>import Iterable<Opens>.*import static Iterable<Opens>.*import Set<Exports>import Set<Exports>.*import static Set<Exports>.*import Collection<Exports>import Collection<Exports>.*import static Collection<Exports>.*import Iterable<Exports>import Iterable<Exports>.*import static Iterable<Exports>.*import Set<Requires>import Set<Requires>.*import static Set<Requires>.*import Collection<Requires>import Collection<Requires>.*import static Collection<Requires>.*import Iterable<Requires>import Iterable<Requires>.*import static Iterable<Requires>.*import ModuleReferenceimport ModuleReference.*import static ModuleReference.*import Set<ModuleReference>import Set<ModuleReference>.*import static Set<ModuleReference>.*import Collection<ModuleReference>import Collection<ModuleReference>.*import static Collection<ModuleReference>.*import Iterable<ModuleReference>import Iterable<ModuleReference>.*import static Iterable<ModuleReference>.*import Optional<ModuleReference>import Optional<ModuleReference>.*import static Optional<ModuleReference>.*import ModuleReaderimport ModuleReader.*import static ModuleReader.*import Optional<ByteBuffer>import Optional<ByteBuffer>.*import static Optional<ByteBuffer>.*import Optional<InputStream>import Optional<InputStream>.*import static Optional<InputStream>.*import Optional<URI>import Optional<URI>.*import static Optional<URI>.*import Cleanerimport Cleaner.*import static Cleaner.*import ThreadFactoryimport ThreadFactory.*import static ThreadFactory.*import CleanerImplimport CleanerImpl.*import static CleanerImpl.*import Reference<T>import Reference<T>.*import static Reference<T>.*import Reference<? extends T>import Reference<? extends T>.*import static Reference<? extends T>.*import Consumer<? super Reference<? extends T>>import Consumer<? super Reference<? extends T>>.*import static Consumer<? super Reference<? extends T>>.*import ReferenceQueue<Object>import ReferenceQueue<Object>.*import static ReferenceQueue<Object>.*import AccessibleObjectimport AccessibleObject.*import static AccessibleObject.*import ReflectionFactoryimport ReflectionFactory.*import static ReflectionFactory.*import ConstructorAccessorimport ConstructorAccessor.*import static ConstructorAccessor.*import TypeVariable<Constructor>import TypeVariable<Constructor>.*import static TypeVariable<Constructor>.*import ConstructorRepositoryimport ConstructorRepository.*import static ConstructorRepository.*import Parameterimport Parameter.*import static Parameter.*import TypeVariable<?>import TypeVariable<?>.*import static TypeVariable<?>.*import MethodAccessorimport MethodAccessor.*import static MethodAccessor.*import TypeVariable<Method>import TypeVariable<Method>.*import static TypeVariable<Method>.*import MethodRepositoryimport MethodRepository.*import static MethodRepository.*import ParameterizedTypeimport ParameterizedType.*import static ParameterizedType.*import WildcardTypeimport WildcardType.*import static WildcardType.*import BigIntegerimport BigInteger.*import static BigInteger.*import Comparable<BigInteger>import Comparable<BigInteger>.*import static Comparable<BigInteger>.*import Randomimport Random.*import static Random.*import ContentHandlerimport ContentHandler.*import static ContentHandler.*import URLConnectionimport URLConnection.*import static URLConnection.*import ContentHandlerFactoryimport ContentHandlerFactory.*import static ContentHandlerFactory.*import FileNameMapimport FileNameMap.*import static FileNameMap.*import InetAddressHolderimport InetAddressHolder.*import static InetAddressHolder.*import InetAddressimport InetAddress.*import static InetAddress.*import InetAddressImplimport InetAddressImpl.*import static InetAddressImpl.*import UnknownHostExceptionimport UnknownHostException.*import static UnknownHostException.*import NetworkInterfaceimport NetworkInterface.*import static NetworkInterface.*import InterfaceAddressimport InterfaceAddress.*import static InterfaceAddress.*import SocketExceptionimport SocketException.*import static SocketException.*import Stream<NetworkInterface>import Stream<NetworkInterface>.*import static Stream<NetworkInterface>.*import BaseStream<NetworkInterface,Stream<NetworkInterface>>import BaseStream<NetworkInterface,Stream<NetworkInterface>>.*import static BaseStream<NetworkInterface,Stream<NetworkInterface>>.*import Enumeration<NetworkInterface>import Enumeration<NetworkInterface>.*import static Enumeration<NetworkInterface>.*import List<InterfaceAddress>import List<InterfaceAddress>.*import static List<InterfaceAddress>.*import Collection<InterfaceAddress>import Collection<InterfaceAddress>.*import static Collection<InterfaceAddress>.*import Iterable<InterfaceAddress>import Iterable<InterfaceAddress>.*import static Iterable<InterfaceAddress>.*import Stream<InetAddress>import Stream<InetAddress>.*import static Stream<InetAddress>.*import BaseStream<InetAddress,Stream<InetAddress>>import BaseStream<InetAddress,Stream<InetAddress>>.*import static BaseStream<InetAddress,Stream<InetAddress>>.*import Enumeration<InetAddress>import Enumeration<InetAddress>.*import static Enumeration<InetAddress>.*import Enum<Type>import Enum<Type>.*import static Enum<Type>.*import Comparable<Type>import Comparable<Type>.*import static Comparable<Type>.*import Class<Type>import Class<Type>.*import static Class<Type>.*import Proxyimport Proxy.*import static Proxy.*import SocketAddressimport SocketAddress.*import static SocketAddress.*import Comparable<URI>import Comparable<URI>.*import static Comparable<URI>.*import URISyntaxExceptionimport URISyntaxException.*import static URISyntaxException.*import URLStreamHandlerimport URLStreamHandler.*import static URLStreamHandler.*import URLStreamHandlerFactoryimport URLStreamHandlerFactory.*import static URLStreamHandlerFactory.*import Hashtableimport Hashtable.*import static Hashtable.*import Hashtable<String,URLStreamHandler>import Hashtable<String,URLStreamHandler>.*import static Hashtable<String,URLStreamHandler>.*import Dictionaryimport Dictionary.*import static Dictionary.*import Dictionary<String,URLStreamHandler>import Dictionary<String,URLStreamHandler>.*import static Dictionary<String,URLStreamHandler>.*import Map<String,URLStreamHandler>import Map<String,URLStreamHandler>.*import static Map<String,URLStreamHandler>.*import Map<String,List<String>>import Map<String,List<String>>.*import static Map<String,List<String>>.*import Permissionimport Permission.*import static Permission.*import Bufferimport Buffer.*import static Buffer.*import Unsafeimport Unsafe.*import static Unsafe.*import Comparable<ByteBuffer>import Comparable<ByteBuffer>.*import static Comparable<ByteBuffer>.*import DoubleBufferimport DoubleBuffer.*import static DoubleBuffer.*import FloatBufferimport FloatBuffer.*import static FloatBuffer.*import LongBufferimport LongBuffer.*import static LongBuffer.*import IntBufferimport IntBuffer.*import static IntBuffer.*import ShortBufferimport ShortBuffer.*import static ShortBuffer.*import ByteOrderimport ByteOrder.*import static ByteOrder.*import Comparable<CharBuffer>import Comparable<CharBuffer>.*import static Comparable<CharBuffer>.*import Comparable<DoubleBuffer>import Comparable<DoubleBuffer>.*import static Comparable<DoubleBuffer>.*import Comparable<FloatBuffer>import Comparable<FloatBuffer>.*import static Comparable<FloatBuffer>.*import Comparable<IntBuffer>import Comparable<IntBuffer>.*import static Comparable<IntBuffer>.*import Comparable<LongBuffer>import Comparable<LongBuffer>.*import static Comparable<LongBuffer>.*import MappedByteBufferimport MappedByteBuffer.*import static MappedByteBuffer.*import Comparable<ShortBuffer>import Comparable<ShortBuffer>.*import static Comparable<ShortBuffer>.*import AsynchronousChannelimport AsynchronousChannel.*import static AsynchronousChannel.*import Channelimport Channel.*import static Channel.*import AsynchronousCloseExceptionimport AsynchronousCloseException.*import static AsynchronousCloseException.*import ClosedChannelExceptionimport ClosedChannelException.*import static ClosedChannelException.*import AsynchronousFileChannelimport AsynchronousFileChannel.*import static AsynchronousFileChannel.*import Futureimport Future.*import static Future.*import Future<>import Future<>.*import static Future<>.*import Future<Integer>import Future<Integer>.*import static Future<Integer>.*import CompletionHandlerimport CompletionHandler.*import static CompletionHandler.*import CompletionHandler<>import CompletionHandler<>.*import static CompletionHandler<>.*import CompletionHandler<Integer,? super A>import CompletionHandler<Integer,? super A>.*import static CompletionHandler<Integer,? super A>.*import FileLockimport FileLock.*import static FileLock.*import Future<FileLock>import Future<FileLock>.*import static Future<FileLock>.*import CompletionHandler<FileLock,? super A>import CompletionHandler<FileLock,? super A>.*import static CompletionHandler<FileLock,? super A>.*import OpenOptionimport OpenOption.*import static OpenOption.*import Set<? extends OpenOption>import Set<? extends OpenOption>.*import static Set<? extends OpenOption>.*import Collection<? extends OpenOption>import Collection<? extends OpenOption>.*import static Collection<? extends OpenOption>.*import Iterable<? extends OpenOption>import Iterable<? extends OpenOption>.*import static Iterable<? extends OpenOption>.*import ExecutorServiceimport ExecutorService.*import static ExecutorService.*import FileAttributeimport FileAttribute.*import static FileAttribute.*import FileAttribute<?>import FileAttribute<?>.*import static FileAttribute<?>.*import ByteChannelimport ByteChannel.*import static ByteChannel.*import ReadableByteChannelimport ReadableByteChannel.*import static ReadableByteChannel.*import WritableByteChannelimport WritableByteChannel.*import static WritableByteChannel.*import MapModeimport MapMode.*import static MapMode.*import FileChannelimport FileChannel.*import static FileChannel.*import AbstractInterruptibleChannelimport AbstractInterruptibleChannel.*import static AbstractInterruptibleChannel.*import SeekableByteChannelimport SeekableByteChannel.*import static SeekableByteChannel.*import GatheringByteChannelimport GatheringByteChannel.*import static GatheringByteChannel.*import ScatteringByteChannelimport ScatteringByteChannel.*import static ScatteringByteChannel.*import InterruptibleChannelimport InterruptibleChannel.*import static InterruptibleChannel.*import CharacterCodingExceptionimport CharacterCodingException.*import static CharacterCodingException.*import Comparable<Charset>import Comparable<Charset>.*import static Comparable<Charset>.*import CharsetEncoderimport CharsetEncoder.*import static CharsetEncoder.*import CharsetDecoderimport CharsetDecoder.*import static CharsetDecoder.*import SortedMapimport SortedMap.*import static SortedMap.*import SortedMap<>import SortedMap<>.*import static SortedMap<>.*import SortedMap<String,Charset>import SortedMap<String,Charset>.*import static SortedMap<String,Charset>.*import Map<String,Charset>import Map<String,Charset>.*import static Map<String,Charset>.*import CoderResultimport CoderResult.*import static CoderResult.*import CodingErrorActionimport CodingErrorAction.*import static CodingErrorAction.*import CopyOptionimport CopyOption.*import static CopyOption.*import Filterimport Filter.*import static Filter.*import DirectoryStreamimport DirectoryStream.*import static DirectoryStream.*import Iterable<T>import Iterable<T>.*import static Iterable<T>.*import FileStoreimport FileStore.*import static FileStore.*import FileStoreAttributeViewimport FileStoreAttributeView.*import static FileStoreAttributeView.*import Class<V>import Class<V>.*import static Class<V>.*import FileAttributeViewimport FileAttributeView.*import static FileAttributeView.*import Class<? extends FileAttributeView>import Class<? extends FileAttributeView>.*import static Class<? extends FileAttributeView>.*import FileSystemimport FileSystem.*import static FileSystem.*import WatchServiceimport WatchService.*import static WatchService.*import UserPrincipalLookupServiceimport UserPrincipalLookupService.*import static UserPrincipalLookupService.*import PathMatcherimport PathMatcher.*import static PathMatcher.*import Iterable<FileStore>import Iterable<FileStore>.*import static Iterable<FileStore>.*import Iterable<Path>import Iterable<Path>.*import static Iterable<Path>.*import FileSystemProviderimport FileSystemProvider.*import static FileSystemProvider.*import LinkOptionimport LinkOption.*import static LinkOption.*import Enum<LinkOption>import Enum<LinkOption>.*import static Enum<LinkOption>.*import Comparable<LinkOption>import Comparable<LinkOption>.*import static Comparable<LinkOption>.*import Class<LinkOption>import Class<LinkOption>.*import static Class<LinkOption>.*import Comparable<Path>import Comparable<Path>.*import static Comparable<Path>.*import Spliterator<Path>import Spliterator<Path>.*import static Spliterator<Path>.*import Consumer<? super Path>import Consumer<? super Path>.*import static Consumer<? super Path>.*import Iterator<Path>import Iterator<Path>.*import static Iterator<Path>.*import Watchableimport Watchable.*import static Watchable.*import Kind<?>import Kind<?>.*import static Kind<?>.*import WatchEventimport WatchEvent.*import static WatchEvent.*import WatchKeyimport WatchKey.*import static WatchKey.*import Kind<>import Kind<>.*import static Kind<>.*import Kind<T>import Kind<T>.*import static Kind<T>.*import WatchEvent<?>import WatchEvent<?>.*import static WatchEvent<?>.*import List<WatchEvent<?>>import List<WatchEvent<?>>.*import static List<WatchEvent<?>>.*import Collection<WatchEvent<?>>import Collection<WatchEvent<?>>.*import static Collection<WatchEvent<?>>.*import Iterable<WatchEvent<?>>import Iterable<WatchEvent<?>>.*import static Iterable<WatchEvent<?>>.*import TimeUnitimport TimeUnit.*import static TimeUnit.*import AttributeViewimport AttributeView.*import static AttributeView.*import BasicFileAttributesimport BasicFileAttributes.*import static BasicFileAttributes.*import FileTimeimport FileTime.*import static FileTime.*import Comparable<FileTime>import Comparable<FileTime>.*import static Comparable<FileTime>.*import Instantimport Instant.*import static Instant.*import GroupPrincipalimport GroupPrincipal.*import static GroupPrincipal.*import UserPrincipalimport UserPrincipal.*import static UserPrincipal.*import Principalimport Principal.*import static Principal.*import Map<String,Object>import Map<String,Object>.*import static Map<String,Object>.*import Filter<? super Path>import Filter<? super Path>.*import static Filter<? super Path>.*import DirectoryStream<>import DirectoryStream<>.*import static DirectoryStream<>.*import DirectoryStream<Path>import DirectoryStream<Path>.*import static DirectoryStream<Path>.*import Map<String,?>import Map<String,?>.*import static Map<String,?>.*import List<FileSystemProvider>import List<FileSystemProvider>.*import static List<FileSystemProvider>.*import Collection<FileSystemProvider>import Collection<FileSystemProvider>.*import static Collection<FileSystemProvider>.*import Iterable<FileSystemProvider>import Iterable<FileSystemProvider>.*import static Iterable<FileSystemProvider>.*import AccessControlExceptionimport AccessControlException.*import static AccessControlException.*import DomainCombinerimport DomainCombiner.*import static DomainCombiner.*import Debugimport Debug.*import static Debug.*import PermissionCollectionimport PermissionCollection.*import static PermissionCollection.*import CodeSignerimport CodeSigner.*import static CodeSigner.*import Timestampimport Timestamp.*import static Timestamp.*import CertPathimport CertPath.*import static CertPath.*import CodeSourceimport CodeSource.*import static CodeSource.*import Certificateimport Certificate.*import static Certificate.*import GeneralSecurityExceptionimport GeneralSecurityException.*import static GeneralSecurityException.*import Guardimport Guard.*import static Guard.*import InvalidKeyExceptionimport InvalidKeyException.*import static InvalidKeyException.*import KeyExceptionimport KeyException.*import static KeyException.*import Keyimport Key.*import static Key.*import NoSuchAlgorithmExceptionimport NoSuchAlgorithmException.*import static NoSuchAlgorithmException.*import NoSuchProviderExceptionimport NoSuchProviderException.*import static NoSuchProviderException.*import Stream<Permission>import Stream<Permission>.*import static Stream<Permission>.*import BaseStream<Permission,Stream<Permission>>import BaseStream<Permission,Stream<Permission>>.*import static BaseStream<Permission,Stream<Permission>>.*import Enumeration<Permission>import Enumeration<Permission>.*import static Enumeration<Permission>.*import Subjectimport Subject.*import static Subject.*import PrivilegedActionimport PrivilegedAction.*import static PrivilegedAction.*import PrivilegedActionExceptionimport PrivilegedActionException.*import static PrivilegedActionException.*import PrivilegedExceptionActionimport PrivilegedExceptionAction.*import static PrivilegedExceptionAction.*import Serviceimport Service.*import static Service.*import Providerimport Provider.*import static Provider.*import Map<String,String>import Map<String,String>.*import static Map<String,String>.*import Propertiesimport Properties.*import static Properties.*import Set<Service>import Set<Service>.*import static Set<Service>.*import Collection<Service>import Collection<Service>.*import static Collection<Service>.*import Iterable<Service>import Iterable<Service>.*import static Iterable<Service>.*import Enumeration<Object>import Enumeration<Object>.*import static Enumeration<Object>.*import BiConsumer<? super Object,? super Object>import BiConsumer<? super Object,? super Object>.*import static BiConsumer<? super Object,? super Object>.*import BiFunction<? super Object,? super Object,? extends Object>import BiFunction<? super Object,? super Object,? extends Object>.*import static BiFunction<? super Object,? super Object,? extends Object>.*import Function<? super Object,? extends Object>import Function<? super Object,? extends Object>.*import static Function<? super Object,? extends Object>.*import Collection<Object>import Collection<Object>.*import static Collection<Object>.*import Iterable<Object>import Iterable<Object>.*import static Iterable<Object>.*import Set<Object>import Set<Object>.*import static Set<Object>.*import Entry<Object,Object>import Entry<Object,Object>.*import static Entry<Object,Object>.*import Set<Entry<Object,Object>>import Set<Entry<Object,Object>>.*import static Set<Entry<Object,Object>>.*import Collection<Entry<Object,Object>>import Collection<Entry<Object,Object>>.*import static Collection<Entry<Object,Object>>.*import Iterable<Entry<Object,Object>>import Iterable<Entry<Object,Object>>.*import static Iterable<Entry<Object,Object>>.*import PublicKeyimport PublicKey.*import static PublicKey.*import SignatureExceptionimport SignatureException.*import static SignatureException.*import Dateimport Date.*import static Date.*import List<? extends Certificate>import List<? extends Certificate>.*import static List<? extends Certificate>.*import Collection<? extends Certificate>import Collection<? extends Certificate>.*import static Collection<? extends Certificate>.*import Iterable<? extends Certificate>import Iterable<? extends Certificate>.*import static Iterable<? extends Certificate>.*import CertificateEncodingExceptionimport CertificateEncodingException.*import static CertificateEncodingException.*import CertificateExceptionimport CertificateException.*import static CertificateException.*import Attributeimport Attribute.*import static Attribute.*import AttributedCharacterIteratorimport AttributedCharacterIterator.*import static AttributedCharacterIterator.*import CharacterIteratorimport CharacterIterator.*import static CharacterIterator.*import Set<Attribute>import Set<Attribute>.*import static Set<Attribute>.*import Collection<Attribute>import Collection<Attribute>.*import static Collection<Attribute>.*import Iterable<Attribute>import Iterable<Attribute>.*import static Iterable<Attribute>.*import Map<Attribute,Object>import Map<Attribute,Object>.*import static Map<Attribute,Object>.*import Set<? extends Attribute>import Set<? extends Attribute>.*import static Set<? extends Attribute>.*import Collection<? extends Attribute>import Collection<? extends Attribute>.*import static Collection<? extends Attribute>.*import Iterable<? extends Attribute>import Iterable<? extends Attribute>.*import static Iterable<? extends Attribute>.*import FieldPositionimport FieldPosition.*import static FieldPosition.*import FieldDelegateimport FieldDelegate.*import static FieldDelegate.*import Formatimport Format.*import static Format.*import ParseExceptionimport ParseException.*import static ParseException.*import ParsePositionimport ParsePosition.*import static ParsePosition.*import Clockimport Clock.*import static Clock.*import ZoneIdimport ZoneId.*import static ZoneId.*import Durationimport Duration.*import static Duration.*import DayOfWeekimport DayOfWeek.*import static DayOfWeek.*import Enum<DayOfWeek>import Enum<DayOfWeek>.*import static Enum<DayOfWeek>.*import Comparable<DayOfWeek>import Comparable<DayOfWeek>.*import static Comparable<DayOfWeek>.*import Class<DayOfWeek>import Class<DayOfWeek>.*import static Class<DayOfWeek>.*import TemporalAccessorimport TemporalAccessor.*import static TemporalAccessor.*import TemporalAdjusterimport TemporalAdjuster.*import static TemporalAdjuster.*import Temporalimport Temporal.*import static Temporal.*import TemporalQueryimport TemporalQuery.*import static TemporalQuery.*import TemporalQuery<>import TemporalQuery<>.*import static TemporalQuery<>.*import TemporalQuery<R>import TemporalQuery<R>.*import static TemporalQuery<R>.*import TemporalFieldimport TemporalField.*import static TemporalField.*import ValueRangeimport ValueRange.*import static ValueRange.*import TextStyleimport TextStyle.*import static TextStyle.*import TemporalAmountimport TemporalAmount.*import static TemporalAmount.*import Comparable<Duration>import Comparable<Duration>.*import static Comparable<Duration>.*import TemporalUnitimport TemporalUnit.*import static TemporalUnit.*import List<TemporalUnit>import List<TemporalUnit>.*import static List<TemporalUnit>.*import Collection<TemporalUnit>import Collection<TemporalUnit>.*import static Collection<TemporalUnit>.*import Iterable<TemporalUnit>import Iterable<TemporalUnit>.*import static Iterable<TemporalUnit>.*import Comparable<Instant>import Comparable<Instant>.*import static Comparable<Instant>.*import ZonedDateTimeimport ZonedDateTime.*import static ZonedDateTime.*import ZoneOffsetimport ZoneOffset.*import static ZoneOffset.*import OffsetDateTimeimport OffsetDateTime.*import static OffsetDateTime.*import LocalDateimport LocalDate.*import static LocalDate.*import ChronoLocalDateimport ChronoLocalDate.*import static ChronoLocalDate.*import LocalTimeimport LocalTime.*import static LocalTime.*import LocalDateTimeimport LocalDateTime.*import static LocalDateTime.*import OffsetTimeimport OffsetTime.*import static OffsetTime.*import DateTimeFormatterimport DateTimeFormatter.*import static DateTimeFormatter.*import Periodimport Period.*import static Period.*import Stream<LocalDate>import Stream<LocalDate>.*import static Stream<LocalDate>.*import BaseStream<LocalDate,Stream<LocalDate>>import BaseStream<LocalDate,Stream<LocalDate>>.*import static BaseStream<LocalDate,Stream<LocalDate>>.*import Monthimport Month.*import static Month.*import IsoEraimport IsoEra.*import static IsoEra.*import IsoChronologyimport IsoChronology.*import static IsoChronology.*import ChronoLocalDateTimeimport ChronoLocalDateTime.*import static ChronoLocalDateTime.*import ChronoLocalDateTime<LocalDate>import ChronoLocalDateTime<LocalDate>.*import static ChronoLocalDateTime<LocalDate>.*import ChronoLocalDateTime<?>import ChronoLocalDateTime<?>.*import static ChronoLocalDateTime<?>.*import Comparable<ChronoLocalDateTime<?>>import Comparable<ChronoLocalDateTime<?>>.*import static Comparable<ChronoLocalDateTime<?>>.*import ChronoZonedDateTimeimport ChronoZonedDateTime.*import static ChronoZonedDateTime.*import ChronoZonedDateTime<>import ChronoZonedDateTime<>.*import static ChronoZonedDateTime<>.*import ChronoZonedDateTime<D>import ChronoZonedDateTime<D>.*import static ChronoZonedDateTime<D>.*import ChronoZonedDateTime<?>import ChronoZonedDateTime<?>.*import static ChronoZonedDateTime<?>.*import Comparable<ChronoZonedDateTime<?>>import Comparable<ChronoZonedDateTime<?>>.*import static Comparable<ChronoZonedDateTime<?>>.*import ChronoZonedDateTime<LocalDate>import ChronoZonedDateTime<LocalDate>.*import static ChronoZonedDateTime<LocalDate>.*import ChronoLocalDateTime<>import ChronoLocalDateTime<>.*import static ChronoLocalDateTime<>.*import Chronologyimport Chronology.*import static Chronology.*import Comparator<>import Comparator<>.*import static Comparator<>.*import Comparator<ChronoLocalDateTime<?>>import Comparator<ChronoLocalDateTime<?>>.*import static Comparator<ChronoLocalDateTime<?>>.*import Comparable<LocalTime>import Comparable<LocalTime>.*import static Comparable<LocalTime>.*import Enum<Month>import Enum<Month>.*import static Enum<Month>.*import Comparable<Month>import Comparable<Month>.*import static Comparable<Month>.*import Class<Month>import Class<Month>.*import static Class<Month>.*import Comparable<OffsetDateTime>import Comparable<OffsetDateTime>.*import static Comparable<OffsetDateTime>.*import Comparator<OffsetDateTime>import Comparator<OffsetDateTime>.*import static Comparator<OffsetDateTime>.*import Comparable<OffsetTime>import Comparable<OffsetTime>.*import static Comparable<OffsetTime>.*import ChronoPeriodimport ChronoPeriod.*import static ChronoPeriod.*import ZoneRulesimport ZoneRules.*import static ZoneRules.*import Comparable<ZoneOffset>import Comparable<ZoneOffset>.*import static Comparable<ZoneOffset>.*import ChronoLocalDateTime<D>import ChronoLocalDateTime<D>.*import static ChronoLocalDateTime<D>.*import Comparator<ChronoZonedDateTime<?>>import Comparator<ChronoZonedDateTime<?>>.*import static Comparator<ChronoZonedDateTime<?>>.*import AbstractChronologyimport AbstractChronology.*import static AbstractChronology.*import Map<TemporalField,Long>import Map<TemporalField,Long>.*import static Map<TemporalField,Long>.*import ChronoFieldimport ChronoField.*import static ChronoField.*import ResolverStyleimport ResolverStyle.*import static ResolverStyle.*import Set<Chronology>import Set<Chronology>.*import static Set<Chronology>.*import Collection<Chronology>import Collection<Chronology>.*import static Collection<Chronology>.*import Iterable<Chronology>import Iterable<Chronology>.*import static Iterable<Chronology>.*import Comparable<ChronoLocalDate>import Comparable<ChronoLocalDate>.*import static Comparable<ChronoLocalDate>.*import Eraimport Era.*import static Era.*import Comparator<ChronoLocalDate>import Comparator<ChronoLocalDate>.*import static Comparator<ChronoLocalDate>.*import Comparable<Chronology>import Comparable<Chronology>.*import static Comparable<Chronology>.*import List<Era>import List<Era>.*import static List<Era>.*import Collection<Era>import Collection<Era>.*import static Collection<Era>.*import Iterable<Era>import Iterable<Era>.*import static Iterable<Era>.*import ChronoZonedDateTime<? extends ChronoLocalDate>import ChronoZonedDateTime<? extends ChronoLocalDate>.*import static ChronoZonedDateTime<? extends ChronoLocalDate>.*import ChronoLocalDateTime<? extends ChronoLocalDate>import ChronoLocalDateTime<? extends ChronoLocalDate>.*import static ChronoLocalDateTime<? extends ChronoLocalDate>.*import Enum<IsoEra>import Enum<IsoEra>.*import static Enum<IsoEra>.*import Comparable<IsoEra>import Comparable<IsoEra>.*import static Comparable<IsoEra>.*import Class<IsoEra>import Class<IsoEra>.*import static Class<IsoEra>.*import TemporalQuery<?>import TemporalQuery<?>.*import static TemporalQuery<?>.*import CompositePrinterParserimport CompositePrinterParser.*import static CompositePrinterParser.*import TemporalQuery<T>import TemporalQuery<T>.*import static TemporalQuery<T>.*import Set<TemporalField>import Set<TemporalField>.*import static Set<TemporalField>.*import Collection<TemporalField>import Collection<TemporalField>.*import static Collection<TemporalField>.*import Iterable<TemporalField>import Iterable<TemporalField>.*import static Iterable<TemporalField>.*import DecimalStyleimport DecimalStyle.*import static DecimalStyle.*import TemporalQuery<Boolean>import TemporalQuery<Boolean>.*import static TemporalQuery<Boolean>.*import TemporalQuery<Period>import TemporalQuery<Period>.*import static TemporalQuery<Period>.*import FormatStyleimport FormatStyle.*import static FormatStyle.*import DateTimePrinterParserimport DateTimePrinterParser.*import static DateTimePrinterParser.*import DateTimeFormatterBuilderimport DateTimeFormatterBuilder.*import static DateTimeFormatterBuilder.*import DateTimeParseContextimport DateTimeParseContext.*import static DateTimeParseContext.*import DateTimePrintContextimport DateTimePrintContext.*import static DateTimePrintContext.*import List<DateTimePrinterParser>import List<DateTimePrinterParser>.*import static List<DateTimePrinterParser>.*import Collection<DateTimePrinterParser>import Collection<DateTimePrinterParser>.*import static Collection<DateTimePrinterParser>.*import Iterable<DateTimePrinterParser>import Iterable<DateTimePrinterParser>.*import static Iterable<DateTimePrinterParser>.*import Set<ZoneId>import Set<ZoneId>.*import static Set<ZoneId>.*import Collection<ZoneId>import Collection<ZoneId>.*import static Collection<ZoneId>.*import Iterable<ZoneId>import Iterable<ZoneId>.*import static Iterable<ZoneId>.*import Map<Long,String>import Map<Long,String>.*import static Map<Long,String>.*import SignStyleimport SignStyle.*import static SignStyle.*import Consumer<Chronology>import Consumer<Chronology>.*import static Consumer<Chronology>.*import Parsedimport Parsed.*import static Parsed.*import Set<Locale>import Set<Locale>.*import static Set<Locale>.*import Collection<Locale>import Collection<Locale>.*import static Collection<Locale>.*import Iterable<Locale>import Iterable<Locale>.*import static Iterable<Locale>.*import Enum<FormatStyle>import Enum<FormatStyle>.*import static Enum<FormatStyle>.*import Comparable<FormatStyle>import Comparable<FormatStyle>.*import static Comparable<FormatStyle>.*import Class<FormatStyle>import Class<FormatStyle>.*import static Class<FormatStyle>.*import Enum<ResolverStyle>import Enum<ResolverStyle>.*import static Enum<ResolverStyle>.*import Comparable<ResolverStyle>import Comparable<ResolverStyle>.*import static Comparable<ResolverStyle>.*import Class<ResolverStyle>import Class<ResolverStyle>.*import static Class<ResolverStyle>.*import Enum<SignStyle>import Enum<SignStyle>.*import static Enum<SignStyle>.*import Comparable<SignStyle>import Comparable<SignStyle>.*import static Comparable<SignStyle>.*import Class<SignStyle>import Class<SignStyle>.*import static Class<SignStyle>.*import Enum<TextStyle>import Enum<TextStyle>.*import static Enum<TextStyle>.*import Comparable<TextStyle>import Comparable<TextStyle>.*import static Comparable<TextStyle>.*import Class<TextStyle>import Class<TextStyle>.*import static Class<TextStyle>.*import Enum<ChronoField>import Enum<ChronoField>.*import static Enum<ChronoField>.*import Comparable<ChronoField>import Comparable<ChronoField>.*import static Comparable<ChronoField>.*import Class<ChronoField>import Class<ChronoField>.*import static Class<ChronoField>.*import ChronoUnitimport ChronoUnit.*import static ChronoUnit.*import Enum<ChronoUnit>import Enum<ChronoUnit>.*import static Enum<ChronoUnit>.*import Comparable<ChronoUnit>import Comparable<ChronoUnit>.*import static Comparable<ChronoUnit>.*import Class<ChronoUnit>import Class<ChronoUnit>.*import static Class<ChronoUnit>.*import ZoneOffsetTransitionimport ZoneOffsetTransition.*import static ZoneOffsetTransition.*import Comparable<ZoneOffsetTransition>import Comparable<ZoneOffsetTransition>.*import static Comparable<ZoneOffsetTransition>.*import List<ZoneOffset>import List<ZoneOffset>.*import static List<ZoneOffset>.*import Collection<ZoneOffset>import Collection<ZoneOffset>.*import static Collection<ZoneOffset>.*import Iterable<ZoneOffset>import Iterable<ZoneOffset>.*import static Iterable<ZoneOffset>.*import TimeDefinitionimport TimeDefinition.*import static TimeDefinition.*import Enum<TimeDefinition>import Enum<TimeDefinition>.*import static Enum<TimeDefinition>.*import Comparable<TimeDefinition>import Comparable<TimeDefinition>.*import static Comparable<TimeDefinition>.*import Class<TimeDefinition>import Class<TimeDefinition>.*import static Class<TimeDefinition>.*import ZoneOffsetTransitionRuleimport ZoneOffsetTransitionRule.*import static ZoneOffsetTransitionRule.*import List<ZoneOffsetTransitionRule>import List<ZoneOffsetTransitionRule>.*import static List<ZoneOffsetTransitionRule>.*import Collection<ZoneOffsetTransitionRule>import Collection<ZoneOffsetTransitionRule>.*import static Collection<ZoneOffsetTransitionRule>.*import Iterable<ZoneOffsetTransitionRule>import Iterable<ZoneOffsetTransitionRule>.*import static Iterable<ZoneOffsetTransitionRule>.*import List<ZoneOffsetTransition>import List<ZoneOffsetTransition>.*import static List<ZoneOffsetTransition>.*import Collection<ZoneOffsetTransition>import Collection<ZoneOffsetTransition>.*import static Collection<ZoneOffsetTransition>.*import Iterable<ZoneOffsetTransition>import Iterable<ZoneOffsetTransition>.*import static Iterable<ZoneOffsetTransition>.*import Collection<E>import Collection<E>.*import static Collection<E>.*import Iterable<E>import Iterable<E>.*import static Iterable<E>.*import Spliterator<E>import Spliterator<E>.*import static Spliterator<E>.*import Consumer<? super E>import Consumer<? super E>.*import static Consumer<? super E>.*import Iterator<E>import Iterator<E>.*import static Iterator<E>.*import Stream<E>import Stream<E>.*import static Stream<E>.*import BaseStream<E,Stream<E>>import BaseStream<E,Stream<E>>.*import static BaseStream<E,Stream<E>>.*import Predicateimport Predicate.*import static Predicate.*import Predicate<? super E>import Predicate<? super E>.*import static Predicate<? super E>.*import Collection<? extends E>import Collection<? extends E>.*import static Collection<? extends E>.*import Iterable<? extends E>import Iterable<? extends E>.*import static Iterable<? extends E>.*import IntFunctionimport IntFunction.*import static IntFunction.*import IntFunction<>import IntFunction<>.*import static IntFunction<>.*import IntFunction<T[]>import IntFunction<T[]>.*import static IntFunction<T[]>.*import AbstractCollection<E>import AbstractCollection<E>.*import static AbstractCollection<E>.*import Set<E>import Set<E>.*import static Set<E>.*import ToDoubleFunctionimport ToDoubleFunction.*import static ToDoubleFunction.*import ToDoubleFunction<>import ToDoubleFunction<>.*import static ToDoubleFunction<>.*import Comparator<T>import Comparator<T>.*import static Comparator<T>.*import ToDoubleFunction<? super T>import ToDoubleFunction<? super T>.*import static ToDoubleFunction<? super T>.*import ToLongFunctionimport ToLongFunction.*import static ToLongFunction.*import ToLongFunction<>import ToLongFunction<>.*import static ToLongFunction<>.*import ToLongFunction<? super T>import ToLongFunction<? super T>.*import static ToLongFunction<? super T>.*import ToIntFunctionimport ToIntFunction.*import static ToIntFunction.*import ToIntFunction<>import ToIntFunction<>.*import static ToIntFunction<>.*import ToIntFunction<? super T>import ToIntFunction<? super T>.*import static ToIntFunction<? super T>.*import Comparable<? super U>import Comparable<? super U>.*import static Comparable<? super U>.*import Function<? super T,? extends U>import Function<? super T,? extends U>.*import static Function<? super T,? extends U>.*import Comparator<? super U>import Comparator<? super U>.*import static Comparator<? super U>.*import Comparator<? super T>import Comparator<? super T>.*import static Comparator<? super T>.*import Comparable<? super T>import Comparable<? super T>.*import static Comparable<? super T>.*import Comparable<Date>import Comparable<Date>.*import static Comparable<Date>.*import Enumeration<V>import Enumeration<V>.*import static Enumeration<V>.*import Enumeration<K>import Enumeration<K>.*import static Enumeration<K>.*import DoubleSummaryStatisticsimport DoubleSummaryStatistics.*import static DoubleSummaryStatistics.*import DoubleConsumerimport DoubleConsumer.*import static DoubleConsumer.*import AbstractSet<E>import AbstractSet<E>.*import static AbstractSet<E>.*import Enum<E>import Enum<E>.*import static Enum<E>.*import EnumSet<>import EnumSet<>.*import static EnumSet<>.*import AbstractSet<>import AbstractSet<>.*import static AbstractSet<>.*import AbstractCollection<>import AbstractCollection<>.*import static AbstractCollection<>.*import EnumSet<E>import EnumSet<E>.*import static EnumSet<E>.*import Enum<?>import Enum<?>.*import static Enum<?>.*import Comparable<?>import Comparable<?>.*import static Comparable<?>.*import Dictionary<K,V>import Dictionary<K,V>.*import static Dictionary<K,V>.*import Hashtable<>import Hashtable<>.*import static Hashtable<>.*import Dictionary<>import Dictionary<>.*import static Dictionary<>.*import Hashtable<?,?>import Hashtable<?,?>.*import static Hashtable<?,?>.*import Dictionary<?,?>import Dictionary<?,?>.*import static Dictionary<?,?>.*import IntSummaryStatisticsimport IntSummaryStatistics.*import static IntSummaryStatistics.*import IntConsumerimport IntConsumer.*import static IntConsumer.*import InvalidPropertiesFormatExceptionimport InvalidPropertiesFormatException.*import static InvalidPropertiesFormatException.*import List<E>import List<E>.*import static List<E>.*import ListIteratorimport ListIterator.*import static ListIterator.*import ListIterator<>import ListIterator<>.*import static ListIterator<>.*import ListIterator<E>import ListIterator<E>.*import static ListIterator<E>.*import Comparator<? super E>import Comparator<? super E>.*import static Comparator<? super E>.*import UnaryOperatorimport UnaryOperator.*import static UnaryOperator.*import UnaryOperator<E>import UnaryOperator<E>.*import static UnaryOperator<E>.*import Function<E,E>import Function<E,E>.*import static Function<E,E>.*import Categoryimport Category.*import static Category.*import Enum<Category>import Enum<Category>.*import static Enum<Category>.*import Comparable<Category>import Comparable<Category>.*import static Comparable<Category>.*import Class<Category>import Class<Category>.*import static Class<Category>.*import FilteringModeimport FilteringMode.*import static FilteringMode.*import Enum<FilteringMode>import Enum<FilteringMode>.*import static Enum<FilteringMode>.*import Comparable<FilteringMode>import Comparable<FilteringMode>.*import static Comparable<FilteringMode>.*import Class<FilteringMode>import Class<FilteringMode>.*import static Class<FilteringMode>.*import IsoCountryCodeimport IsoCountryCode.*import static IsoCountryCode.*import Enum<IsoCountryCode>import Enum<IsoCountryCode>.*import static Enum<IsoCountryCode>.*import Comparable<IsoCountryCode>import Comparable<IsoCountryCode>.*import static Comparable<IsoCountryCode>.*import Class<IsoCountryCode>import Class<IsoCountryCode>.*import static Class<IsoCountryCode>.*import LanguageRangeimport LanguageRange.*import static LanguageRange.*import List<LanguageRange>import List<LanguageRange>.*import static List<LanguageRange>.*import Collection<LanguageRange>import Collection<LanguageRange>.*import static Collection<LanguageRange>.*import Iterable<LanguageRange>import Iterable<LanguageRange>.*import static Iterable<LanguageRange>.*import List<Locale>import List<Locale>.*import static List<Locale>.*import MissingResourceExceptionimport MissingResourceException.*import static MissingResourceException.*import LocaleExtensionsimport LocaleExtensions.*import static LocaleExtensions.*import BaseLocaleimport BaseLocale.*import static BaseLocale.*import Set<Character>import Set<Character>.*import static Set<Character>.*import Collection<Character>import Collection<Character>.*import static Collection<Character>.*import Iterable<Character>import Iterable<Character>.*import static Iterable<Character>.*import LongSummaryStatisticsimport LongSummaryStatistics.*import static LongSummaryStatistics.*import LongConsumerimport LongConsumer.*import static LongConsumer.*import Comparator<Entry<K,V>>import Comparator<Entry<K,V>>.*import static Comparator<Entry<K,V>>.*import Comparator<? super V>import Comparator<? super V>.*import static Comparator<? super V>.*import Comparator<? super K>import Comparator<? super K>.*import static Comparator<? super K>.*import Comparable<? super V>import Comparable<? super V>.*import static Comparable<? super V>.*import Comparable<? super K>import Comparable<? super K>.*import static Comparable<? super K>.*import Supplier<? extends X>import Supplier<? extends X>.*import static Supplier<? extends X>.*import Supplier<? extends T>import Supplier<? extends T>.*import static Supplier<? extends T>.*import Stream<T>import Stream<T>.*import static Stream<T>.*import BaseStream<T,Stream<T>>import BaseStream<T,Stream<T>>.*import static BaseStream<T,Stream<T>>.*import Optional<? extends T>import Optional<? extends T>.*import static Optional<? extends T>.*import Supplier<? extends Optional<? extends T>>import Supplier<? extends Optional<? extends T>>.*import static Supplier<? extends Optional<? extends T>>.*import Optional<U>import Optional<U>.*import static Optional<U>.*import Optional<? extends U>import Optional<? extends U>.*import static Optional<? extends U>.*import Function<? super T,? extends Optional<? extends U>>import Function<? super T,? extends Optional<? extends U>>.*import static Function<? super T,? extends Optional<? extends U>>.*import Predicate<? super T>import Predicate<? super T>.*import static Predicate<? super T>.*import Optional<T>import Optional<T>.*import static Optional<T>.*import OptionalDoubleimport OptionalDouble.*import static OptionalDouble.*import DoubleSupplierimport DoubleSupplier.*import static DoubleSupplier.*import DoubleStreamimport DoubleStream.*import static DoubleStream.*import OptionalIntimport OptionalInt.*import static OptionalInt.*import IntSupplierimport IntSupplier.*import static IntSupplier.*import OptionalLongimport OptionalLong.*import static OptionalLong.*import LongSupplierimport LongSupplier.*import static LongSupplier.*import LongStreamimport LongStream.*import static LongStream.*import OfDoubleimport OfDouble.*import static OfDouble.*import PrimitiveIteratorimport PrimitiveIterator.*import static PrimitiveIterator.*import PrimitiveIterator<Double,DoubleConsumer>import PrimitiveIterator<Double,DoubleConsumer>.*import static PrimitiveIterator<Double,DoubleConsumer>.*import Iterator<Double>import Iterator<Double>.*import static Iterator<Double>.*import Consumer<? super Double>import Consumer<? super Double>.*import static Consumer<? super Double>.*import OfIntimport OfInt.*import static OfInt.*import PrimitiveIterator<Integer,IntConsumer>import PrimitiveIterator<Integer,IntConsumer>.*import static PrimitiveIterator<Integer,IntConsumer>.*import Iterator<Integer>import Iterator<Integer>.*import static Iterator<Integer>.*import Consumer<? super Integer>import Consumer<? super Integer>.*import static Consumer<? super Integer>.*import OfLongimport OfLong.*import static OfLong.*import PrimitiveIterator<Long,LongConsumer>import PrimitiveIterator<Long,LongConsumer>.*import static PrimitiveIterator<Long,LongConsumer>.*import Iterator<Long>import Iterator<Long>.*import static Iterator<Long>.*import Consumer<? super Long>import Consumer<? super Long>.*import static Consumer<? super Long>.*import Hashtable<Object,Object>import Hashtable<Object,Object>.*import static Hashtable<Object,Object>.*import Dictionary<Object,Object>import Dictionary<Object,Object>.*import static Dictionary<Object,Object>.*import Map<Object,Object>import Map<Object,Object>.*import static Map<Object,Object>.*import Map<? extends Object,? extends Object>import Map<? extends Object,? extends Object>.*import static Map<? extends Object,? extends Object>.*import BiFunction<? super Object,? super Object,?>import BiFunction<? super Object,? super Object,?>.*import static BiFunction<? super Object,? super Object,?>.*import Function<? super Object,?>import Function<? super Object,?>.*import static Function<? super Object,?>.*import Enumeration<?>import Enumeration<?>.*import static Enumeration<?>.*import OfPrimitiveimport OfPrimitive.*import static OfPrimitive.*import OfPrimitive<Double,DoubleConsumer,OfDouble>import OfPrimitive<Double,DoubleConsumer,OfDouble>.*import static OfPrimitive<Double,DoubleConsumer,OfDouble>.*import Spliterator<Double>import Spliterator<Double>.*import static Spliterator<Double>.*import Comparator<? super Double>import Comparator<? super Double>.*import static Comparator<? super Double>.*import OfPrimitive<>import OfPrimitive<>.*import static OfPrimitive<>.*import OfPrimitive<Integer,IntConsumer,OfInt>import OfPrimitive<Integer,IntConsumer,OfInt>.*import static OfPrimitive<Integer,IntConsumer,OfInt>.*import Spliterator<Integer>import Spliterator<Integer>.*import static Spliterator<Integer>.*import Comparator<? super Integer>import Comparator<? super Integer>.*import static Comparator<? super Integer>.*import OfPrimitive<Long,LongConsumer,OfLong>import OfPrimitive<Long,LongConsumer,OfLong>.*import static OfPrimitive<Long,LongConsumer,OfLong>.*import Spliterator<Long>import Spliterator<Long>.*import static Spliterator<Long>.*import Comparator<? super Long>import Comparator<? super Long>.*import static Comparator<? super Long>.*import ReferenceQueue<? super Object>import ReferenceQueue<? super Object>.*import static ReferenceQueue<? super Object>.*import AbstractMap<K,V>import AbstractMap<K,V>.*import static AbstractMap<K,V>.*import Callableimport Callable.*import static Callable.*import CollectionViewimport CollectionView.*import static CollectionView.*import ConcurrentHashMap<K,V>import ConcurrentHashMap<K,V>.*import static ConcurrentHashMap<K,V>.*import ConcurrentMap<K,V>import ConcurrentMap<K,V>.*import static ConcurrentMap<K,V>.*import KeySetViewimport KeySetView.*import static KeySetView.*import CollectionView<K,V,K>import CollectionView<K,V,K>.*import static CollectionView<K,V,K>.*import Spliterator<K>import Spliterator<K>.*import static Spliterator<K>.*import Consumer<? super K>import Consumer<? super K>.*import static Consumer<? super K>.*import Iterator<K>import Iterator<K>.*import static Iterator<K>.*import Stream<K>import Stream<K>.*import static Stream<K>.*import BaseStream<K,Stream<K>>import BaseStream<K,Stream<K>>.*import static BaseStream<K,Stream<K>>.*import Predicate<? super K>import Predicate<? super K>.*import static Predicate<? super K>.*import Collection<? extends K>import Collection<? extends K>.*import static Collection<? extends K>.*import Iterable<? extends K>import Iterable<? extends K>.*import static Iterable<? extends K>.*import Nodeimport Node.*import static Node.*import Node<>import Node<>.*import static Node<>.*import ToIntFunction<Entry<K,V>>import ToIntFunction<Entry<K,V>>.*import static ToIntFunction<Entry<K,V>>.*import IntBinaryOperatorimport IntBinaryOperator.*import static IntBinaryOperator.*import ToLongFunction<Entry<K,V>>import ToLongFunction<Entry<K,V>>.*import static ToLongFunction<Entry<K,V>>.*import LongBinaryOperatorimport LongBinaryOperator.*import static LongBinaryOperator.*import ToDoubleFunction<Entry<K,V>>import ToDoubleFunction<Entry<K,V>>.*import static ToDoubleFunction<Entry<K,V>>.*import DoubleBinaryOperatorimport DoubleBinaryOperator.*import static DoubleBinaryOperator.*import BiFunction<>import BiFunction<>.*import static BiFunction<>.*import Function<Entry<K,V>,? extends U>import Function<Entry<K,V>,? extends U>.*import static Function<Entry<K,V>,? extends U>.*import BiFunction<? super U,? super U,? extends U>import BiFunction<? super U,? super U,? extends U>.*import static BiFunction<? super U,? super U,? extends U>.*import BiFunction<Entry<K,V>,Entry<K,V>,? extends Entry<K,V>>import BiFunction<Entry<K,V>,Entry<K,V>,? extends Entry<K,V>>.*import static BiFunction<Entry<K,V>,Entry<K,V>,? extends Entry<K,V>>.*import Consumer<>import Consumer<>.*import static Consumer<>.*import Consumer<? super U>import Consumer<? super U>.*import static Consumer<? super U>.*import Consumer<? super Entry<K,V>>import Consumer<? super Entry<K,V>>.*import static Consumer<? super Entry<K,V>>.*import ToIntFunction<? super V>import ToIntFunction<? super V>.*import static ToIntFunction<? super V>.*import ToLongFunction<? super V>import ToLongFunction<? super V>.*import static ToLongFunction<? super V>.*import ToDoubleFunction<? super V>import ToDoubleFunction<? super V>.*import static ToDoubleFunction<? super V>.*import Function<? super V,? extends U>import Function<? super V,? extends U>.*import static Function<? super V,? extends U>.*import Consumer<? super V>import Consumer<? super V>.*import static Consumer<? super V>.*import ToIntFunction<? super K>import ToIntFunction<? super K>.*import static ToIntFunction<? super K>.*import ToLongFunction<? super K>import ToLongFunction<? super K>.*import static ToLongFunction<? super K>.*import ToDoubleFunction<? super K>import ToDoubleFunction<? super K>.*import static ToDoubleFunction<? super K>.*import Function<? super K,? extends U>import Function<? super K,? extends U>.*import static Function<? super K,? extends U>.*import BiFunction<? super K,? super K,? extends K>import BiFunction<? super K,? super K,? extends K>.*import static BiFunction<? super K,? super K,? extends K>.*import ToIntBiFunctionimport ToIntBiFunction.*import static ToIntBiFunction.*import ToIntBiFunction<? super K,? super V>import ToIntBiFunction<? super K,? super V>.*import static ToIntBiFunction<? super K,? super V>.*import ToLongBiFunctionimport ToLongBiFunction.*import static ToLongBiFunction.*import ToLongBiFunction<? super K,? super V>import ToLongBiFunction<? super K,? super V>.*import static ToLongBiFunction<? super K,? super V>.*import ToDoubleBiFunctionimport ToDoubleBiFunction.*import static ToDoubleBiFunction.*import ToDoubleBiFunction<? super K,? super V>import ToDoubleBiFunction<? super K,? super V>.*import static ToDoubleBiFunction<? super K,? super V>.*import BiFunction<? super K,? super V,? extends U>import BiFunction<? super K,? super V,? extends U>.*import static BiFunction<? super K,? super V,? extends U>.*import Node<K,V>import Node<K,V>.*import static Node<K,V>.*import KeySetView<>import KeySetView<>.*import static KeySetView<>.*import CollectionView<>import CollectionView<>.*import static CollectionView<>.*import KeySetView<K,V>import KeySetView<K,V>.*import static KeySetView<K,V>.*import KeySetView<K,Boolean>import KeySetView<K,Boolean>.*import static KeySetView<K,Boolean>.*import CollectionView<K,Boolean,K>import CollectionView<K,Boolean,K>.*import static CollectionView<K,Boolean,K>.*import Predicate<? super V>import Predicate<? super V>.*import static Predicate<? super V>.*import Predicate<? super Entry<K,V>>import Predicate<? super Entry<K,V>>.*import static Predicate<? super Entry<K,V>>.*import ExecutionExceptionimport ExecutionException.*import static ExecutionException.*import Executorimport Executor.*import static Executor.*import Callable<T>import Callable<T>.*import static Callable<T>.*import Collection<? extends Callable<T>>import Collection<? extends Callable<T>>.*import static Collection<? extends Callable<T>>.*import Iterable<? extends Callable<T>>import Iterable<? extends Callable<T>>.*import static Iterable<? extends Callable<T>>.*import TimeoutExceptionimport TimeoutException.*import static TimeoutException.*import Future<T>import Future<T>.*import static Future<T>.*import List<Future<T>>import List<Future<T>>.*import static List<Future<T>>.*import Collection<Future<T>>import Collection<Future<T>>.*import static Collection<Future<T>>.*import Iterable<Future<T>>import Iterable<Future<T>>.*import static Iterable<Future<T>>.*import Future<?>import Future<?>.*import static Future<?>.*import Callable<>import Callable<>.*import static Callable<>.*import List<Runnable>import List<Runnable>.*import static List<Runnable>.*import Collection<Runnable>import Collection<Runnable>.*import static Collection<Runnable>.*import Iterable<Runnable>import Iterable<Runnable>.*import static Iterable<Runnable>.*import Enum<TimeUnit>import Enum<TimeUnit>.*import static Enum<TimeUnit>.*import Comparable<TimeUnit>import Comparable<TimeUnit>.*import static Comparable<TimeUnit>.*import Class<TimeUnit>import Class<TimeUnit>.*import static Class<TimeUnit>.*import BiConsumer<? super T,? super U>import BiConsumer<? super T,? super U>.*import static BiConsumer<? super T,? super U>.*import BiConsumer<>import BiConsumer<>.*import static BiConsumer<>.*import BiFunction<T,U,V>import BiFunction<T,U,V>.*import static BiFunction<T,U,V>.*import Function<? super R,? extends V>import Function<? super R,? extends V>.*import static Function<? super R,? extends V>.*import BinaryOperatorimport BinaryOperator.*import static BinaryOperator.*import BiFunction<T,T,T>import BiFunction<T,T,T>.*import static BiFunction<T,T,T>.*import BiFunction<T,T,V>import BiFunction<T,T,V>.*import static BiFunction<T,T,V>.*import Function<? super T,? extends V>import Function<? super T,? extends V>.*import static Function<? super T,? extends V>.*import BinaryOperator<>import BinaryOperator<>.*import static BinaryOperator<>.*import BinaryOperator<T>import BinaryOperator<T>.*import static BinaryOperator<T>.*import BooleanSupplierimport BooleanSupplier.*import static BooleanSupplier.*import DoubleFunctionimport DoubleFunction.*import static DoubleFunction.*import DoublePredicateimport DoublePredicate.*import static DoublePredicate.*import DoubleToIntFunctionimport DoubleToIntFunction.*import static DoubleToIntFunction.*import DoubleToLongFunctionimport DoubleToLongFunction.*import static DoubleToLongFunction.*import DoubleUnaryOperatorimport DoubleUnaryOperator.*import static DoubleUnaryOperator.*import Function<T,T>import Function<T,T>.*import static Function<T,T>.*import Function<T,V>import Function<T,V>.*import static Function<T,V>.*import Function<V,R>import Function<V,R>.*import static Function<V,R>.*import Function<? super V,? extends T>import Function<? super V,? extends T>.*import static Function<? super V,? extends T>.*import IntPredicateimport IntPredicate.*import static IntPredicate.*import IntToDoubleFunctionimport IntToDoubleFunction.*import static IntToDoubleFunction.*import IntToLongFunctionimport IntToLongFunction.*import static IntToLongFunction.*import IntUnaryOperatorimport IntUnaryOperator.*import static IntUnaryOperator.*import LongFunctionimport LongFunction.*import static LongFunction.*import LongPredicateimport LongPredicate.*import static LongPredicate.*import LongToDoubleFunctionimport LongToDoubleFunction.*import static LongToDoubleFunction.*import LongToIntFunctionimport LongToIntFunction.*import static LongToIntFunction.*import LongUnaryOperatorimport LongUnaryOperator.*import static LongUnaryOperator.*import ObjDoubleConsumerimport ObjDoubleConsumer.*import static ObjDoubleConsumer.*import ObjIntConsumerimport ObjIntConsumer.*import static ObjIntConsumer.*import ObjLongConsumerimport ObjLongConsumer.*import static ObjLongConsumer.*import Predicate<>import Predicate<>.*import static Predicate<>.*import Predicate<T>import Predicate<T>.*import static Predicate<T>.*import Function<V,T>import Function<V,T>.*import static Function<V,T>.*import UnaryOperator<>import UnaryOperator<>.*import static UnaryOperator<>.*import UnaryOperator<T>import UnaryOperator<T>.*import static UnaryOperator<T>.*import Characteristicsimport Characteristics.*import static Characteristics.*import Enum<Characteristics>import Enum<Characteristics>.*import static Enum<Characteristics>.*import Comparable<Characteristics>import Comparable<Characteristics>.*import static Comparable<Characteristics>.*import Class<Characteristics>import Class<Characteristics>.*import static Class<Characteristics>.*import Collectorimport Collector.*import static Collector.*import Collector<>import Collector<>.*import static Collector<>.*import Collector<T,A,R>import Collector<T,A,R>.*import static Collector<T,A,R>.*import Supplier<A>import Supplier<A>.*import static Supplier<A>.*import BiConsumer<A,T>import BiConsumer<A,T>.*import static BiConsumer<A,T>.*import BinaryOperator<A>import BinaryOperator<A>.*import static BinaryOperator<A>.*import BiFunction<A,A,A>import BiFunction<A,A,A>.*import static BiFunction<A,A,A>.*import Function<A,R>import Function<A,R>.*import static Function<A,R>.*import Collector<T,R,R>import Collector<T,R,R>.*import static Collector<T,R,R>.*import Supplier<R>import Supplier<R>.*import static Supplier<R>.*import BiConsumer<R,T>import BiConsumer<R,T>.*import static BiConsumer<R,T>.*import BinaryOperator<R>import BinaryOperator<R>.*import static BinaryOperator<R>.*import BiFunction<R,R,R>import BiFunction<R,R,R>.*import static BiFunction<R,R,R>.*import Set<Characteristics>import Set<Characteristics>.*import static Set<Characteristics>.*import Collection<Characteristics>import Collection<Characteristics>.*import static Collection<Characteristics>.*import Iterable<Characteristics>import Iterable<Characteristics>.*import static Iterable<Characteristics>.*import BaseStream<Double,DoubleStream>import BaseStream<Double,DoubleStream>.*import static BaseStream<Double,DoubleStream>.*import Stream<Double>import Stream<Double>.*import static Stream<Double>.*import BaseStream<Double,Stream<Double>>import BaseStream<Double,Stream<Double>>.*import static BaseStream<Double,Stream<Double>>.*import ObjDoubleConsumer<>import ObjDoubleConsumer<>.*import static ObjDoubleConsumer<>.*import ObjDoubleConsumer<R>import ObjDoubleConsumer<R>.*import static ObjDoubleConsumer<R>.*import BiConsumer<R,R>import BiConsumer<R,R>.*import static BiConsumer<R,R>.*import DoubleFunction<? extends DoubleStream>import DoubleFunction<? extends DoubleStream>.*import static DoubleFunction<? extends DoubleStream>.*import DoubleFunction<>import DoubleFunction<>.*import static DoubleFunction<>.*import Stream<U>import Stream<U>.*import static Stream<U>.*import BaseStream<U,Stream<U>>import BaseStream<U,Stream<U>>.*import static BaseStream<U,Stream<U>>.*import DoubleFunction<? extends U>import DoubleFunction<? extends U>.*import static DoubleFunction<? extends U>.*import BaseStream<Integer,IntStream>import BaseStream<Integer,IntStream>.*import static BaseStream<Integer,IntStream>.*import Stream<Integer>import Stream<Integer>.*import static Stream<Integer>.*import BaseStream<Integer,Stream<Integer>>import BaseStream<Integer,Stream<Integer>>.*import static BaseStream<Integer,Stream<Integer>>.*import ObjIntConsumer<>import ObjIntConsumer<>.*import static ObjIntConsumer<>.*import ObjIntConsumer<R>import ObjIntConsumer<R>.*import static ObjIntConsumer<R>.*import IntFunction<? extends IntStream>import IntFunction<? extends IntStream>.*import static IntFunction<? extends IntStream>.*import IntFunction<? extends U>import IntFunction<? extends U>.*import static IntFunction<? extends U>.*import BaseStream<Long,LongStream>import BaseStream<Long,LongStream>.*import static BaseStream<Long,LongStream>.*import Stream<Long>import Stream<Long>.*import static Stream<Long>.*import BaseStream<Long,Stream<Long>>import BaseStream<Long,Stream<Long>>.*import static BaseStream<Long,Stream<Long>>.*import ObjLongConsumer<>import ObjLongConsumer<>.*import static ObjLongConsumer<>.*import ObjLongConsumer<R>import ObjLongConsumer<R>.*import static ObjLongConsumer<R>.*import LongFunction<? extends LongStream>import LongFunction<? extends LongStream>.*import static LongFunction<? extends LongStream>.*import LongFunction<>import LongFunction<>.*import static LongFunction<>.*import LongFunction<? extends U>import LongFunction<? extends U>.*import static LongFunction<? extends U>.*import Consumer<T>import Consumer<T>.*import static Consumer<T>.*import Builder<>import Builder<>.*import static Builder<>.*import BaseStream<T,Stream>import BaseStream<T,Stream>.*import static BaseStream<T,Stream>.*import Stream<? extends T>import Stream<? extends T>.*import static Stream<? extends T>.*import BaseStream<? extends T,Stream<? extends T>>import BaseStream<? extends T,Stream<? extends T>>.*import static BaseStream<? extends T,Stream<? extends T>>.*import Builder<T>import Builder<T>.*import static Builder<T>.*import Collector<? super T,A,R>import Collector<? super T,A,R>.*import static Collector<? super T,A,R>.*import BiConsumer<R,? super T>import BiConsumer<R,? super T>.*import static BiConsumer<R,? super T>.*import BiFunction<U,? super T,U>import BiFunction<U,? super T,U>.*import static BiFunction<U,? super T,U>.*import BinaryOperator<U>import BinaryOperator<U>.*import static BinaryOperator<U>.*import BiFunction<U,U,U>import BiFunction<U,U,U>.*import static BiFunction<U,U,U>.*import IntFunction<A[]>import IntFunction<A[]>.*import static IntFunction<A[]>.*import Function<? super T,? extends DoubleStream>import Function<? super T,? extends DoubleStream>.*import static Function<? super T,? extends DoubleStream>.*import Function<? super T,? extends LongStream>import Function<? super T,? extends LongStream>.*import static Function<? super T,? extends LongStream>.*import Function<? super T,? extends IntStream>import Function<? super T,? extends IntStream>.*import static Function<? super T,? extends IntStream>.*import Stream<R>import Stream<R>.*import static Stream<R>.*import BaseStream<R,Stream<R>>import BaseStream<R,Stream<R>>.*import static BaseStream<R,Stream<R>>.*import Stream<? extends R>import Stream<? extends R>.*import static Stream<? extends R>.*import BaseStream<? extends R,Stream<? extends R>>import BaseStream<? extends R,Stream<? extends R>>.*import static BaseStream<? extends R,Stream<? extends R>>.*import Function<? super T,? extends Stream<? extends R>>import Function<? super T,? extends Stream<? extends R>>.*import static Function<? super T,? extends Stream<? extends R>>.*import Function<? super T,? extends R>import Function<? super T,? extends R>.*import static Function<? super T,? extends R>.*import Set<T>import Set<T>.*import static Set<T>.*import Collection<T>import Collection<T>.*import static Collection<T>.*import Set<Principal>import Set<Principal>.*import static Set<Principal>.*import Collection<Principal>import Collection<Principal>.*import static Collection<Principal>.*import Iterable<Principal>import Iterable<Principal>.*import static Iterable<Principal>.*import PrivilegedExceptionAction<>import PrivilegedExceptionAction<>.*import static PrivilegedExceptionAction<>.*import PrivilegedExceptionAction<T>import PrivilegedExceptionAction<T>.*import static PrivilegedExceptionAction<T>.*import PrivilegedAction<>import PrivilegedAction<>.*import static PrivilegedAction<>.*import PrivilegedAction<T>import PrivilegedAction<T>.*import static PrivilegedAction<T>.*import Set<? extends Principal>import Set<? extends Principal>.*import static Set<? extends Principal>.*import Collection<? extends Principal>import Collection<? extends Principal>.*import static Collection<? extends Principal>.*import Iterable<? extends Principal>import Iterable<? extends Principal>.*import static Iterable<? extends Principal>.*import Set<?>import Set<?>.*import static Set<?>.*import ServiceProviderimport ServiceProvider.*import static ServiceProvider.*import List<ServiceProvider>import List<ServiceProvider>.*import static List<ServiceProvider>.*import Collection<ServiceProvider>import Collection<ServiceProvider>.*import static Collection<ServiceProvider>.*import Iterable<ServiceProvider>import Iterable<ServiceProvider>.*import static Iterable<ServiceProvider>.*import Function<Cleaner,CleanerImpl>import Function<Cleaner,CleanerImpl>.*import static Function<Cleaner,CleanerImpl>.*import SoftCleanableimport SoftCleanable.*import static SoftCleanable.*import SoftCleanable<?>import SoftCleanable<?>.*import static SoftCleanable<?>.*import SoftReference<?>import SoftReference<?>.*import static SoftReference<?>.*import Reference<?>import Reference<?>.*import static Reference<?>.*import WeakCleanableimport WeakCleanable.*import static WeakCleanable.*import WeakCleanable<?>import WeakCleanable<?>.*import static WeakCleanable<?>.*import WeakReference<?>import WeakReference<?>.*import static WeakReference<?>.*import PhantomCleanable<?>import PhantomCleanable<?>.*import static PhantomCleanable<?>.*import PhantomReference<?>import PhantomReference<?>.*import static PhantomReference<?>.*import PhantomReference<T>import PhantomReference<T>.*import static PhantomReference<T>.*import SoftReference<T>import SoftReference<T>.*import static SoftReference<T>.*import WeakReference<T>import WeakReference<T>.*import static WeakReference<T>.*import Tagimport Tag.*import static Tag.*import Enum<Tag>import Enum<Tag>.*import static Enum<Tag>.*import Comparable<Tag>import Comparable<Tag>.*import static Comparable<Tag>.*import Class<Tag>import Class<Tag>.*import static Class<Tag>.*import FieldAccessorimport FieldAccessor.*import static FieldAccessor.*import LangReflectAccessimport LangReflectAccess.*import static LangReflectAccess.*import Constructor<OptionalDataException>import Constructor<OptionalDataException>.*import static Constructor<OptionalDataException>.*import APIimport API.*import static API.*import ThrowingSupplierimport ThrowingSupplier.*import static ThrowingSupplier.*import ThrowingSupplier<>import ThrowingSupplier<>.*import static ThrowingSupplier<>.*import ThrowingSupplier<T>import ThrowingSupplier<T>.*import static ThrowingSupplier<T>.*import Supplier<String>import Supplier<String>.*import static Supplier<String>.*import Stream<Executable>import Stream<Executable>.*import static Stream<Executable>.*import BaseStream<Executable,Stream<Executable>>import BaseStream<Executable,Stream<Executable>>.*import static BaseStream<Executable,Stream<Executable>>.*import MultipleFailuresErrorimport MultipleFailuresError.*import static MultipleFailuresError.*import Collection<Executable>import Collection<Executable>.*import static Collection<Executable>.*import Iterable<Executable>import Iterable<Executable>.*import static Iterable<Executable>.*import Testableimport Testable.*import static Testable.*import List<Throwable>import List<Throwable>.*import static List<Throwable>.*import Collection<Throwable>import Collection<Throwable>.*import static Collection<Throwable>.*import Iterable<Throwable>import Iterable<Throwable>.*import static Iterable<Throwable>.*import List<? extends Throwable>import List<? extends Throwable>.*import static List<? extends Throwable>.*import Collection<? extends Throwable>import Collection<? extends Throwable>.*import static Collection<? extends Throwable>.*import Iterable<? extends Throwable>import Iterable<? extends Throwable>.*import static Iterable<? extends Throwable>.*import Enum<Wrapper>import Enum<Wrapper>.*import static Enum<Wrapper>.*import Comparable<Wrapper>import Comparable<Wrapper>.*import static Comparable<Wrapper>.*import Class<Wrapper>import Class<Wrapper>.*import static Class<Wrapper>.*import Map<String,Method>import Map<String,Method>.*import static Map<String,Method>.*import Map<String,Class<?>>import Map<String,Class<?>>.*import static Map<String,Class<?>>.*import GenericsFactoryimport GenericsFactory.*import static GenericsFactory.*import FieldTypeSignatureimport FieldTypeSignature.*import static FieldTypeSignature.*import AbstractRepositoryimport AbstractRepository.*import static AbstractRepository.*import Treeimport Tree.*import static Tree.*import Reifierimport Reifier.*import static Reifier.*import GenericDeclRepositoryimport GenericDeclRepository.*import static GenericDeclRepository.*import MethodTypeSignatureimport MethodTypeSignature.*import static MethodTypeSignature.*import GenericDeclRepository<MethodTypeSignature>import GenericDeclRepository<MethodTypeSignature>.*import static GenericDeclRepository<MethodTypeSignature>.*import AbstractRepository<MethodTypeSignature>import AbstractRepository<MethodTypeSignature>.*import static AbstractRepository<MethodTypeSignature>.*import AbstractRepository<S>import AbstractRepository<S>.*import static AbstractRepository<S>.*import Signatureimport Signature.*import static Signature.*import ArrayTypeSignatureimport ArrayTypeSignature.*import static ArrayTypeSignature.*import TypeTreeVisitorimport TypeTreeVisitor.*import static TypeTreeVisitor.*import TypeTreeVisitor<?>import TypeTreeVisitor<?>.*import static TypeTreeVisitor<?>.*import TypeSignatureimport TypeSignature.*import static TypeSignature.*import BaseTypeimport BaseType.*import static BaseType.*import BooleanSignatureimport BooleanSignature.*import static BooleanSignature.*import BottomSignatureimport BottomSignature.*import static BottomSignature.*import ByteSignatureimport ByteSignature.*import static ByteSignature.*import CharSignatureimport CharSignature.*import static CharSignature.*import ClassSignatureimport ClassSignature.*import static ClassSignature.*import Visitorimport Visitor.*import static Visitor.*import Visitor<?>import Visitor<?>.*import static Visitor<?>.*import ClassTypeSignatureimport ClassTypeSignature.*import static ClassTypeSignature.*import FormalTypeParameterimport FormalTypeParameter.*import static FormalTypeParameter.*import SimpleClassTypeSignatureimport SimpleClassTypeSignature.*import static SimpleClassTypeSignature.*import List<SimpleClassTypeSignature>import List<SimpleClassTypeSignature>.*import static List<SimpleClassTypeSignature>.*import Collection<SimpleClassTypeSignature>import Collection<SimpleClassTypeSignature>.*import static Collection<SimpleClassTypeSignature>.*import Iterable<SimpleClassTypeSignature>import Iterable<SimpleClassTypeSignature>.*import static Iterable<SimpleClassTypeSignature>.*import DoubleSignatureimport DoubleSignature.*import static DoubleSignature.*import TypeArgumentimport TypeArgument.*import static TypeArgument.*import FloatSignatureimport FloatSignature.*import static FloatSignature.*import TypeTreeimport TypeTree.*import static TypeTree.*import IntSignatureimport IntSignature.*import static IntSignature.*import LongSignatureimport LongSignature.*import static LongSignature.*import ReturnTypeimport ReturnType.*import static ReturnType.*import ShortSignatureimport ShortSignature.*import static ShortSignature.*import TypeVariableSignatureimport TypeVariableSignature.*import static TypeVariableSignature.*import VoidDescriptorimport VoidDescriptor.*import static VoidDescriptor.*import Wildcardimport Wildcard.*import static Wildcard.*import TypeTreeVisitor<Type>import TypeTreeVisitor<Type>.*import static TypeTreeVisitor<Type>.*import TypeTreeVisitor<T>import TypeTreeVisitor<T>.*import static TypeTreeVisitor<T>.*import Extensionimport Extension.*import static Extension.*import CaseInsensitiveCharimport CaseInsensitiveChar.*import static CaseInsensitiveChar.*import InternalLocaleBuilderimport InternalLocaleBuilder.*import static InternalLocaleBuilder.*import CaseInsensitiveStringimport CaseInsensitiveString.*import static CaseInsensitiveString.*import LocaleSyntaxExceptionimport LocaleSyntaxException.*import static LocaleSyntaxException.*import LanguageTagimport LanguageTag.*import static LanguageTag.*import ParseStatusimport ParseStatus.*import static ParseStatus.*import Map<CaseInsensitiveChar,String>import Map<CaseInsensitiveChar,String>.*import static Map<CaseInsensitiveChar,String>.*import Set<CaseInsensitiveString>import Set<CaseInsensitiveString>.*import static Set<CaseInsensitiveString>.*import Collection<CaseInsensitiveString>import Collection<CaseInsensitiveString>.*import static Collection<CaseInsensitiveString>.*import Iterable<CaseInsensitiveString>import Iterable<CaseInsensitiveString>.*import static Iterable<CaseInsensitiveString>.*import Map<CaseInsensitiveString,String>import Map<CaseInsensitiveString,String>.*import static Map<CaseInsensitiveString,String>.*import djl.demo.*import java.io.*import java.lang.*import jdk.internal.ref.*import java.lang.ref.*import java.util.concurrent.*import java.util.*import java.lang.reflect.*import java.util.stream.*import java.util.function.*import java.lang.annotation.*import java.lang.invoke.*import java.lang.module.*import java.math.*import java.net.*import java.nio.*import java.nio.channels.*import java.nio.file.attribute.*import java.nio.channels.spi.*import java.nio.charset.*import java.nio.file.*import java.nio.file.spi.*import java.security.*import java.security.cert.*import java.text.*import java.time.*import java.time.temporal.*import java.time.chrono.*import java.time.format.*import java.time.zone.*import javax.security.auth.*import jdk.internal.*import jdk.internal.misc.*import jdk.internal.module.*import jdk.internal.reflect.*import jdk.internal.vm.annotation.*import org.apiguardian.api.*import org.junit.jupiter.api.*import org.junit.jupiter.api.function.*import org.junit.platform.commons.annotation.*import org.opentest4j.*import sun.invoke.empty.*import sun.invoke.util.*import sun.nio.ch.*import sun.reflect.annotation.*import sun.reflect.generics.factory.*import sun.reflect.generics.repository.*import sun.reflect.generics.tree.*import sun.reflect.generics.visitor.*import sun.security.util.*import sun.util.locale.*import java.net.spi.*import java.nio.charset.spi.*import java.security.acl.*import java.security.interfaces.*import java.security.spec.*import java.text.spi.*import java.util.concurrent.atomic.*import java.util.concurrent.locks.*import java.util.jar.*import java.util.regex.*import java.util.spi.*import java.util.zip.*import javax.crypto.*import javax.crypto.interfaces.*import javax.crypto.spec.*import javax.net.*import javax.net.ssl.*import javax.security.auth.callback.*import javax.security.auth.login.*import javax.security.auth.spi.*import javax.security.auth.x500.*import javax.security.cert.*import com.sun.crypto.provider.*import com.sun.security.ntlm.*import jdk.internal.event.*import jdk.internal.jimage.*import jdk.internal.jimage.decompressor.*import jdk.internal.jmod.*import jdk.internal.loader.*import jdk.internal.logger.*import jdk.internal.org.objectweb.asm.*import jdk.internal.org.objectweb.asm.commons.*import jdk.internal.org.objectweb.asm.signature.*import jdk.internal.org.objectweb.asm.tree.*import jdk.internal.org.objectweb.asm.util.*import jdk.internal.org.xml.sax.*import jdk.internal.org.xml.sax.helpers.*import jdk.internal.perf.*import jdk.internal.platform.*import jdk.internal.util.jar.*import jdk.internal.util.xml.*import jdk.internal.util.xml.impl.*import jdk.internal.vm.*import sun.net.*import sun.net.dns.*import sun.net.ext.*import sun.net.util.*import sun.net.www.*import sun.net.www.protocol.http.*import sun.nio.cs.*import sun.nio.fs.*import sun.reflect.generics.reflectiveObjects.*import sun.reflect.misc.*import sun.security.action.*import sun.security.internal.interfaces.*import sun.security.internal.spec.*import sun.security.jca.*import sun.security.pkcs.*import sun.security.provider.*import sun.security.provider.certpath.*import sun.security.rsa.*import sun.security.ssl.*import sun.security.timestamp.*import sun.security.tools.*import sun.security.util.math.*import sun.security.util.math.intpoly.*import sun.security.validator.*import sun.security.x509.*import sun.util.cldr.*import sun.util.locale.provider.*import sun.util.logging.*import sun.util.resources.*/* This Java source file was generated by the Gradle 'init' task. */(),()(boolean,String)(int)(byte[],int,int)(byte[])(String)(double)(float)(long)(boolean)(Object)(File)(String,String)(String,String,File)(boolean,boolean)(FileFilter)(FilenameFilter)(URI)(File,String)(Closeable)(PhantomCleanable)(OutputStream)(Throwable)(String,Throwable)(Status)(Class,String)(Enum)(String,int)(FilterInfo)(String,Object)(String,double)(String,float)(String,long)(String,short)(String,char)(String,byte)(String,boolean)(ObjectInputFilter)(String[])(ObjectStreamClass)(ObjectInputValidation,int)(InputStream)(ObjectOutput)(Class)(ObjectStreamClass,boolean)(ReferenceQueue,ConcurrentMap)(Object,Object[])(Object,byte[])(Object,ObjectInputStream)(Object,ObjectOutputStream)(String,Class)(ObjectOutputStream)(ObjectInputStream)(ObjectStreamClass,Class,ClassNotFoundException,ObjectStreamClass)(Class,ClassNotFoundException,ObjectStreamClass)(Class,boolean)(Field,boolean,boolean)(StringBuilder,Class)(String,String,boolean)(String,Class,boolean)(char)(CharSequence,int,int)(CharSequence)(Locale,String,Object[])(String,Object[])(char[])(File,Charset)(String,Charset)(OutputStream,boolean,Charset)(OutputStream,boolean,String)(OutputStream,boolean)(String,int,int)(char[],int,int)(Writer,boolean)(Writer)(CharBuffer)(byte[],int,byte)(int,double)(int,float)(int,long)(int,int)(int,char)(int,boolean)(int,CharSequence,int,int)(int,CharSequence)(int,char[])(int,String)(int,Object)(int,char[],int,int)(int,int,String)(AbstractStringBuilder)(StringBuffer)(int,int,char[],int)(Boolean)(Byte)(byte)(byte,byte)(CharSequence,CharSequence)(Character)(char,char)(char,int)(char[],int,int,int,int)(int,char[],int)(char[],int)(CharSequence,int)(AnnotationType,AnnotationType)(Executable)(Class[])(String,Class[])(Object[])(Module,String)(String,boolean,ClassLoader)(Class,String,boolean)(String,String,String,String,String,String,String,URL)(String,Module)(ClassLoader,Class)(ClassLoader)(Class,Object[])(ClassLoader,String,ByteBuffer,int,int,ProtectionDomain,String)(ClassLoader,String,byte[],int,int,ProtectionDomain,String)(String,ByteBuffer,ProtectionDomain)(String,byte[],int,int,ProtectionDomain)(String,byte[],int,int)(String,ClassLoader)(Map)(Object,Object)(Entry[])(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object)(Object,Object,Object,Object,Object,Object,Object,Object)(Object,Object,Object,Object,Object,Object)(Object,Object,Object,Object)(Object,Object,BiFunction)(Identity,Entry,BiFunction)(Object,BiFunction)(Identity,BiFunction)(Object,Function)(Identity,Function)(Identity,Entry)(Object,Object,Object)(Identity,Entry,Entry)(BiFunction)(BiConsumer)(Object,Entry)(Entry[],ClassValue)(Entry[],int)(ClassValue,Object)(ClassValue)(ClassValue,Entry)(Object,ReferenceQueue)(Version,ReferenceQueue)(Version)(Version,Object)(Entry)(Class,Object)(Double)(double,double)(String,Throwable,boolean,boolean)(Float)(float,float)(Integer)(String,Integer)(CharSequence,int,int,int)(int,int,byte[])(int,int,byte[],int,int)(int,int,char[],int,int)(Consumer)(Long)(long,long)(long,int)(String,Long)(long,int,byte[])(long,int,byte[],int,int)(Configuration,Function,ModuleLayer)(Iterator)(Module)(ClassLoader,ModuleDescriptor)(ModuleLayer,ClassLoader,ModuleDescriptor,URI)(Module,String,Module)(Module,Module)(ModuleLayer)(Configuration,List,Function)(Configuration,List,ClassLoader)(Configuration,Function)(Configuration,ClassLoader)(String,String,String,String,String,String,String,URL,ClassLoader)(URL)(Short)(short)(short,short)(StackWalker)(StackFrameInfo)(Throwable,int)(String,String,String,String,String,String,int)(String,String,String,int)(ExtendedOption)(Option)(Set,ExtendedOption)(Function)(Set,int)(Set)(int,int,int)(byte[],byte)(AbstractStringBuilder,Void)(char[],int,int,Void)(Locale)(CharSequence,Iterable)(CharSequence,CharSequence[])(byte[],byte,int,String,int)(boolean,int,String,int,int)(int,String,int,int)(Charset)(int,int,byte[],int)(StringBuilder)(byte[],Charset)(byte[],String)(byte[],int,int,Charset)(byte[],int,int,String)(byte[],int)(byte[],int,int,int)(int[],int,int)(State)(Thread,Throwable)(UncaughtExceptionHandler)(Thread[])(ThreadGroup,Runnable,String,long,boolean)(ThreadGroup,Runnable,String,long)(ThreadGroup,Runnable,String)(Runnable,String)(ThreadGroup,String)(ThreadGroup,Runnable)(Runnable,AccessControlContext)(Runnable)(Interruptible)(PrintStream,int)(Thread)(ThreadGroup[],boolean)(ThreadGroup[])(Thread[],boolean)(ThreadGroup)(ThreadLocal,Object)(ThreadLocalMap)(Thread,Object)(Supplier)(StackTraceElement[])(PrintWriter)(PrintStream)(ElementType)(RetentionPolicy)(Class,List)(Class,int)(Class,SpeciesData,boolean)(SpeciesData,Class)(List,List)(String,SpeciesData)(SpeciesData)(MethodType)(Class,Class[])(Class,Class,Class,MethodType,MemberName,String,List)(MemberName,int,List,List)(MemberName,int)(Specializer,String)(MethodType,LambdaForm,double)(MethodType,LambdaForm,float)(MethodType,LambdaForm,long)(MethodType,LambdaForm,int)(MethodType,LambdaForm,Object)(MethodType,LambdaForm)(LambdaForm)(MethodHandle)(MethodType,LambdaForm,BasicType,Object)(MethodHandle,String,MethodType,Object,Class)(MethodHandle,MethodHandle)(MethodType,MethodHandle)(CallSite)(MethodType,boolean)(MethodHandle,MethodType)(MethodType,MethodType)(VarHandle,AccessDescriptor)(AccessMode,MethodType)(MethodType,boolean,int)(String,MethodType,Object[])(AccessMode)(BasicType)(BasicType[])(Wrapper)(Kind)(Name)(Name[],Name[],int,int)(Name,Name)(int,BasicType)(NamedFunction,Object[])(MemberName,Object[])(MethodType,Object[])(MethodHandle,Object[])(MemberName)(Method)(MemberName,MethodHandle,Intrinsic)(MemberName,MethodHandle)(MethodHandle,Intrinsic)(int,MethodType)(String,Object,Object[])(Name,Object[])(LambdaForm,String)(Name[],Name[],Name,boolean)(Name[],Name[],Name)(int,Name[],boolean,Kind)(int,Name[],boolean)(int,Name[],Kind)(int,Name[])(int,Name[],int,boolean,MethodHandle,Kind)(int,Name[],int,boolean,MethodHandle)(int,Name[],int,Kind)(int,Name[],int)(int[],BasicType[],Name[],int)(int,BasicType[])(int,int[])(int,boolean,MethodType,int[])(int,boolean,MethodType)(BasicType,boolean)(int,MethodHandle)(int,Class,int)(BoundMethodHandle,int,double)(BoundMethodHandle,int,float)(BoundMethodHandle,int,long)(BoundMethodHandle,int,int)(BoundMethodHandle,int,Object)(Class,boolean,Class)(Class,boolean,String,Class,Class)(Class,Class)(Class,boolean,String,MethodType,Class)(byte,MemberName,Class)(byte,MemberName,Class,Class)(Class,String,Object,int,Class)(byte,Class,String,Object)(Class,String,MethodType,byte)(Class,String,Class,byte)(String,MethodType,int)(String,MethodType)(Field,boolean)(Field)(Constructor)(Method,boolean)(MemberName,boolean)(Class,int,int)(List)(ArrayAccess)(Intrinsic)(MethodHandle[][])(MethodHandle,MethodHandle,Object[])(MethodHandle,MethodHandle,Class,List)(Iterable)(BasicType[],LoopClauses,Object[])(Class,List,List,List,List,List)(MethodType,LambdaForm,Intrinsic)(MethodHandle,MemberName,boolean)(MethodHandle,Class)(MethodHandle,Class,MethodHandle,Object[])(MethodHandle,Class,MethodHandle)(MethodHandle,MethodHandle,MethodHandle)(boolean,int[])(boolean,MethodHandle,MethodHandle)(MethodHandle,MethodHandle,int,boolean)(Object,int)(MethodHandle,Class,int,int)(Class,Class,boolean,boolean)(MethodHandle,MethodType,boolean)(MethodType,MethodType,boolean,boolean)(MethodHandle,MethodType,boolean,boolean)(Class,ArrayAccess)(int,List)(int,int,Class[])(int,Class[])(int,Class)(Class,Class[],boolean)(Class,MethodType)(Class,Class,Class[])(MethodTypeForm)(Class[],int)(MethodType,int,int)(int,LambdaForm)(Class,Class,Class,Class[])(int,VarForm)(AccessType)(VarForm)(ResolvedModule)(ModuleFinder,List,ModuleFinder,Collection)(ModuleFinder,Collection,PrintStream)(ModuleFinder,ModuleFinder,Collection)(ModuleFinder,Map)(String,List)(Provides)(String,Set)(Set,String)(Set,String,Set)(Opens)(Exports)(Set,String,String)(Set,String,Version)(Requires)(String,boolean,Set)(Modifier)(ModuleDescriptor)(ByteBuffer)(ByteBuffer,Supplier)(InputStream,Supplier)(String,Version,Set,Set,Set,Set,Set,Set,Set,String,int,boolean)(ModuleFinder[])(Path[])(ModuleDescriptor,URI)(Configuration,ModuleReference)(Object,Runnable)(ThreadFactory)(Reference)(Class,Class,Class,int)(AccessibleObject[],boolean)(ConstructorAccessor)(Class,Class[],Class[],int,int,String,byte[],byte[])(Type)(Class[],byte[])(int,boolean,Class[],Class[])(StringBuilder,int,boolean)(Class[],Class[])(Object,double)(Object,float)(Object,long)(Object,short)(Object,char)(Object,byte)(Object,boolean)(Class,String,Class,int,int,String,byte[])(Throwable,String)(MethodAccessor)(Class,String,Class[],Class,Class[],int,int,String,byte[],byte[],byte[])(String,int,Executable,int)(BigInteger)(int[])(int[],int,int,int)(int[],int[],int,int,int)(BigInteger,BigInteger)(int[],int)(int,Random)(int,int,Random)(int,byte[])(int,byte[],int,int)(URLConnection,Class[])(URLConnection)(String,InetAddress)(String,byte[])(NetworkInterface,int,int)(InetAddress,int,NetworkInterface,int)(InetAddress)(String,int,InetAddress[])(Type,SocketAddress)(String,String,String)(String,String,String,String)(String,String,String,String,String)(String,String,String,int,String,String,String)(String,String,int)(URLStreamHandler)(URLStreamHandlerFactory)(Proxy)(String,String,int,String,String,String,String,String)(String,String,int,String,String)(URL,String,URLStreamHandler)(URL,String)(String,String,int,String,URLStreamHandler)(String,String,int,String)(ContentHandlerFactory)(FileNameMap)(URL,String,String,int,String,String)(URL,String,String,int,String,String,String,String,String)(URL,URL)(URL,String,int,int)(URL,Proxy)(int,int,int,int)(int,short)(ByteOrder)(int,byte)(int,int,int,int,byte[],int)(int,int,int,int,char[],int)(DoubleBuffer)(double[])(double[],int,int)(int,int,int,int,double[],int)(FloatBuffer)(float[])(float[],int,int)(int,int,int,int,float[],int)(IntBuffer)(int,int,int,int,int[],int)(LongBuffer)(long[])(long[],int,int)(int,int,int,int,long[],int)(int,int,int,int,FileDescriptor)(ShortBuffer)(short[])(short[],int,int)(int,int,int,int,short[],int)(ByteBuffer,long)(ByteBuffer,long,Object,CompletionHandler)(long,long,boolean)(Object,CompletionHandler)(long,long,boolean,Object,CompletionHandler)(Path,OpenOption[])(Path,Set,ExecutorService,FileAttribute[])(Throwable,Object)(MapMode,long,long)(ReadableByteChannel,long,long)(long,long,WritableByteChannel)(ByteBuffer[])(ByteBuffer[],int,int)(Path,Set,FileAttribute[])(AsynchronousFileChannel,long,long,boolean)(FileChannel,long,long,boolean)(String,String[])(ByteBuffer,CharBuffer)(ByteBuffer,CharBuffer,boolean)(CodingErrorAction)(Charset,float,float)(CharBuffer,ByteBuffer)(CharBuffer,ByteBuffer,boolean)(Charset,float,float,byte[])(LinkOption)(Path)(WatchService,Kind[])(WatchService,Kind[],Modifier[])(LinkOption[])(long,TimeUnit)(FileTime)(TimeUnit)(Instant)(Path,String,Object,LinkOption[])(Path,String,LinkOption[])(Path,Class,LinkOption[])(Path,AccessMode[])(Path,Path)(Path,Path,CopyOption[])(Path,Path,FileAttribute[])(Path,FileAttribute[])(Path,Filter)(Path,Map)(URI,Map)(Permission)(ProtectionDomain[],AccessControlContext)(ProtectionDomain[],boolean)(ProtectionDomain,DomainCombiner,AccessControlContext,AccessControlContext,Permission[])(AccessControlContext,DomainCombiner,boolean)(AccessControlContext,DomainCombiner)(ProtectionDomain[])(String,Permission)(CertPath,Timestamp)(CodeSource,boolean)(CodeSource)(URL,CodeSigner[])(URL,Certificate[])(ProtectionDomain[],ProtectionDomain[])(Subject)(Exception)(CodeSource,PermissionCollection,ClassLoader,Principal[])(CodeSource,PermissionCollection)(Provider,String,String,String,List,Map)(Service)(String,double,String)(Date,CertPath)(PublicKey,Provider)(PublicKey,String)(PublicKey)(Attribute)(Field,int)(int,Field,Object,int,int,StringBuffer)(Field,Object,int,int,StringBuffer)(AttributedCharacterIterator,Attribute,Object)(String,Attribute,Object)(AttributedCharacterIterator[])(String,ParsePosition)(Object,StringBuffer,FieldPosition)(ZoneId)(Clock,Duration)(Instant,ZoneId)(DayOfWeek)(Temporal)(TemporalQuery)(TemporalField)(TextStyle,Locale)(TemporalAccessor)(Duration)(DataInput)(DataOutput)(TemporalUnit)(long,TemporalUnit)(Temporal,Temporal)(TemporalAmount)(ZoneOffset)(Temporal,TemporalUnit)(TemporalField,long)(TemporalAdjuster)(Clock)(ChronoLocalDate)(LocalDate)(LocalTime,ZoneOffset)(OffsetTime)(LocalTime)(DateTimeFormatter)(LocalDate,Period)(CharSequence,DateTimeFormatter)(int,Month,int)(ChronoLocalDateTime)(long,int,ZoneOffset)(LocalDate,LocalTime)(int,int,int,int,int,int,int)(int,int,int,int,int,int)(int,int,int,int,int)(int,Month,int,int,int,int,int)(int,Month,int,int,int,int)(int,Month,int,int,int)(LocalDate,ZoneOffset)(Month)(OffsetDateTime)(ObjectInput)(int,int,int,int,int,int,int,ZoneOffset)(LocalDateTime,ZoneOffset)(LocalDate,LocalTime,ZoneOffset)(int,int,int,int,ZoneOffset)(LocalDate,LocalDate)(String,ZoneOffset)(String,Map)(ChronoZonedDateTime)(LocalDateTime,ZoneOffset,ZoneId)(LocalDateTime,ZoneId,ZoneOffset)(int,int,int,int,int,int,int,ZoneId)(LocalDateTime,ZoneId)(LocalDate,LocalTime,ZoneId)(Chronology)(Map,ChronoField,long)(ChronoLocalDate,long,long,long)(Map,ResolverStyle)(Chronology,String)(ChronoLocalDate,ChronoLocalDate)(Era,int,int,int,int,int,int,ZoneOffset)(int,int,int,int,int,int,ZoneOffset)(ChronoField)(Era,int)(Era,int,int)(Era,int,int,int)(IsoEra)(CharSequence,ParsePosition)(CharSequence,TemporalQuery[])(CharSequence,TemporalQuery)(TemporalAccessor,Appendable)(TemporalField[])(ResolverStyle)(DecimalStyle)(CompositePrinterParser,Locale,DecimalStyle,ResolverStyle,Set,Chronology,ZoneId)(FormatStyle,FormatStyle)(FormatStyle)(String,Locale)(DateTimeParseContext,CharSequence,int)(DateTimePrintContext,StringBuilder)(DateTimePrinterParser[],boolean)(List,boolean)(ResolverStyle,Chronology)(TextStyle)(TextStyle,Set)(TemporalField,Map)(TemporalField,TextStyle)(TemporalField,int,int,boolean)(TemporalField,int,int,ChronoLocalDate)(TemporalField,int,int,int)(TemporalField,int,int,SignStyle)(TemporalField,int)(FormatStyle,FormatStyle,Chronology,Locale)(TemporalField,long,int,int)(ResolverStyle,Set)(CharSequence,int,CharSequence,int,int)(TemporalAccessor,DateTimeFormatter)(SignStyle)(boolean,boolean,boolean)(Temporal,long)(ChronoUnit)(Map,TemporalAccessor,ResolverStyle)(long,TemporalField)(long,long,long,long)(long,long,long)(ZoneOffsetTransition)(long,ZoneOffset,ZoneOffset)(LocalDateTime,ZoneOffset,ZoneOffset)(TimeDefinition)(Month,int,DayOfWeek,LocalTime,boolean,TimeDefinition,ZoneOffset,ZoneOffset,ZoneOffset)(LocalDateTime)(ZoneOffset,ZoneOffset,List,List,List)(Collection)(Predicate)(IntFunction)(Object,Object,Object,Object,Object,Object,Object,Object,Object)(Object,Object,Object,Object,Object,Object,Object)(Object,Object,Object,Object,Object)(ToDoubleFunction)(ToLongFunction)(ToIntFunction)(Function,Comparator)(Comparator)(Date)(DoubleSummaryStatistics)(long,double,double,double)(Enum,Enum)(Enum,Enum[])(Enum,Enum,Enum,Enum,Enum)(Enum,Enum,Enum,Enum)(Enum,Enum,Enum)(EnumSet)(Class,Enum[])(ObjectOutputStream,int,float)(Void)(IntSummaryStatistics)(long,int,int,long)(UnaryOperator)(int,Collection)(Category)(FilteringMode)(IsoCountryCode)(List,Map)(List,Collection)(List,Collection,FilteringMode)(Category,Locale)(BaseLocale,LocaleExtensions)(String,String,String,String,LocaleExtensions)(LongSummaryStatistics)(String,String,String,Throwable)(Consumer,Runnable)(DoubleSupplier)(DoubleConsumer,Runnable)(DoubleConsumer)(IntSupplier)(IntConsumer,Runnable)(IntConsumer)(LongSupplier)(LongConsumer,Runnable)(LongConsumer)(OutputStream,String,Charset)(OutputStream,String,String)(OutputStream,String)(Writer,String)(Reader)(Properties)(long,double,double)(long,int,int)(Object,Object,ReferenceQueue,int,Entry)(ConcurrentHashMap)(ConcurrentHashMap,Object)(int,Object,Object,Node)(int,Object,Object)(long,ToIntFunction,int,IntBinaryOperator)(long,ToLongFunction,long,LongBinaryOperator)(long,ToDoubleFunction,double,DoubleBinaryOperator)(long,Function,BiFunction)(long,BiFunction)(long,Function)(long,Function,Consumer)(long,Consumer)(long,ToIntBiFunction,int,IntBinaryOperator)(long,ToLongBiFunction,long,LongBinaryOperator)(long,ToDoubleBiFunction,double,DoubleBinaryOperator)(long,BiFunction,BiFunction)(long,BiFunction,Consumer)(long,BiConsumer)(Node)(Node[],Node)(Object,Object,boolean)(int,float,int)(Node[],int,Node)(Node[],int,Node,Node)(Node[],int)(Class,Object,Object)(Collection,long,TimeUnit)(Runnable,Object)(Callable)(Thread,long)(DoublePredicate)(DoubleUnaryOperator)(IntPredicate)(IntUnaryOperator)(LongPredicate)(LongUnaryOperator)(Characteristics)(Supplier,BiConsumer,BinaryOperator,Function,Characteristics[])(Supplier,BiConsumer,BinaryOperator,Characteristics[])(DoubleStream,DoubleStream)(double,DoublePredicate,DoubleUnaryOperator)(double,DoubleUnaryOperator)(Supplier,ObjDoubleConsumer,BiConsumer)(DoubleBinaryOperator)(double,DoubleBinaryOperator)(DoubleFunction)(DoubleToLongFunction)(DoubleToIntFunction)(IntStream,IntStream)(int,IntPredicate,IntUnaryOperator)(int,IntUnaryOperator)(Supplier,ObjIntConsumer,BiConsumer)(IntBinaryOperator)(int,IntBinaryOperator)(IntToDoubleFunction)(IntToLongFunction)(LongStream,LongStream)(long,LongPredicate,LongUnaryOperator)(long,LongUnaryOperator)(Supplier,ObjLongConsumer,BiConsumer)(LongBinaryOperator)(long,LongBinaryOperator)(LongFunction)(LongToDoubleFunction)(LongToIntFunction)(Stream,Stream)(Object,Predicate,UnaryOperator)(Object,UnaryOperator)(Collector)(Supplier,BiConsumer,BiConsumer)(Object,BiFunction,BinaryOperator)(BinaryOperator)(Object,BinaryOperator)(Subject,PrivilegedExceptionAction,AccessControlContext)(Subject,PrivilegedAction,AccessControlContext)(Subject,PrivilegedExceptionAction)(Subject,PrivilegedAction)(AccessControlContext)(boolean,Set,Set,Set)(Object,long,char,boolean)(Object,long,char)(Object,long,short,boolean)(Object,long,short)(Object,long,int,boolean)(Object,long,int)(Object,long,long,boolean)(Object,long,long)(Object,long,boolean)(Object,long,byte)(Object,long,double)(Object,long,float)(Object,long,Object)(double[],int)(boolean,long)(Object,long,long,long)(Object,long,double,double)(Object,long,float,float)(Object,long,boolean,boolean)(Object,long,char,char)(Object,long,short,short)(Object,long,byte,byte)(Object,long,int,int)(Object,long,Object,Object)(Class,byte[],Object[])(String,byte[],int,int,ClassLoader,ProtectionDomain)(Object,long,Object,long,long,long)(Object,long,Object,long,long)(long,long,byte)(Object,long,long,byte)(long,double)(long,float)(long,char)(long,short)(long,byte)(Module,Class,Class)(Cleaner,ThreadFactory)(Cleaner)(Object,Cleaner)(Tag)(AccessibleObject)(Constructor,ConstructorAccessor)(Method,MethodAccessor)(Class,Constructor)(LangReflectAccess)(Duration,ThrowingSupplier,Supplier)(Duration,ThrowingSupplier,String)(Duration,ThrowingSupplier)(Duration,Executable,Supplier)(Duration,Executable,String)(Duration,Executable)(ThrowingSupplier,Supplier)(ThrowingSupplier,String)(ThrowingSupplier)(Executable,Supplier)(Executable,String)(Class,Executable,Supplier)(Class,Executable,String)(Class,Executable)(String,Stream)(Stream)(String,Collection)(String,Executable[])(Executable[])(Object,Object,Supplier)(Object,Object,String)(Character,Character,Supplier)(Character,char,Supplier)(char,Character,Supplier)(char,char,Supplier)(Character,Character,String)(Character,char,String)(char,Character,String)(char,char,String)(Character,Character)(Character,char)(char,Character)(double,double,double,Supplier)(double,double,double,String)(double,double,double)(Double,Double,Supplier)(Double,double,Supplier)(double,Double,Supplier)(double,double,Supplier)(Double,Double,String)(Double,double,String)(double,Double,String)(double,double,String)(Double,Double)(Double,double)(double,Double)(float,float,float,Supplier)(float,float,float,String)(float,float,float)(Float,Float,Supplier)(Float,float,Supplier)(float,Float,Supplier)(float,float,Supplier)(Float,Float,String)(Float,float,String)(float,Float,String)(float,float,String)(Float,Float)(Float,float)(float,Float)(Long,Long,Supplier)(Long,long,Supplier)(long,Long,Supplier)(long,long,Supplier)(Long,Long,String)(Long,long,String)(long,Long,String)(long,long,String)(Long,Long)(Long,long)(long,Long)(Integer,Integer,Supplier)(Integer,int,Supplier)(int,Integer,Supplier)(int,int,Supplier)(Integer,Integer,String)(Integer,int,String)(int,Integer,String)(Integer,Integer)(Integer,int)(int,Integer)(Short,Short,Supplier)(Short,short,Supplier)(short,Short,Supplier)(short,short,Supplier)(Short,Short,String)(Short,short,String)(short,Short,String)(short,short,String)(Short,Short)(Short,short)(short,Short)(Byte,Byte,Supplier)(Byte,byte,Supplier)(byte,Byte,Supplier)(byte,byte,Supplier)(Byte,Byte,String)(Byte,byte,String)(byte,Byte,String)(byte,byte,String)(Byte,Byte)(Byte,byte)(byte,Byte)(Stream,Stream,Supplier)(Stream,Stream,String)(List,List,Supplier)(List,List,String)(Iterable,Iterable,Supplier)(Iterable,Iterable,String)(Iterable,Iterable)(Object[],Object[],Supplier)(Object[],Object[],String)(Object[],Object[])(double[],double[],double,Supplier)(double[],double[],double,String)(double[],double[],double)(double[],double[],Supplier)(double[],double[],String)(double[],double[])(float[],float[],float,Supplier)(float[],float[],float,String)(float[],float[],float)(float[],float[],Supplier)(float[],float[],String)(float[],float[])(long[],long[],Supplier)(long[],long[],String)(long[],long[])(int[],int[],Supplier)(int[],int[],String)(int[],int[])(short[],short[],Supplier)(short[],short[],String)(short[],short[])(byte[],byte[],Supplier)(byte[],byte[],String)(byte[],byte[])(char[],char[],Supplier)(char[],char[],String)(char[],char[])(boolean[],boolean[],Supplier)(boolean[],boolean[],String)(boolean[],boolean[])(Object,Supplier)(Object,String)(BooleanSupplier,Supplier)(BooleanSupplier,String)(BooleanSupplier)(boolean,Supplier)(Object,int,Object[],int,int)(Object[],int,Object,int,int)(Object,Class)(FieldTypeSignature[],FieldTypeSignature[])(Type,Type[],Type)(String,FieldTypeSignature[])(String,GenericsFactory)(TypeTreeVisitor)(TypeSignature)(Visitor)(FormalTypeParameter[],ClassTypeSignature,ClassTypeSignature[])(FormalTypeParameter[],TypeSignature[],ReturnType,FieldTypeSignature[])(String,boolean,TypeArgument[])(VoidDescriptor)(DoubleSignature)(FloatSignature)(LongSignature)(IntSignature)(CharSignature)(ShortSignature)(BooleanSignature)(ByteSignature)(BottomSignature)(SimpleClassTypeSignature)(Wildcard)(TypeVariableSignature)(ArrayTypeSignature)(ClassTypeSignature)(FormalTypeParameter)(GenericsFactory)(MethodTypeSignature)(ClassSignature)(char,String)(LanguageTag)(String,ParseStatus)(Map,Set,Map).*/([^/]*?)(\.([^.]*))?.xml.java.class.jar<obinit>Map$Entry<>Map$Entry<K,V>Map$Entry<? extends K,? extends V>Map$Entry<Identity,Entry<?>>Map$Entry<Object,Object>ConcurrentHashMap$CollectionView<K,V,K>ConcurrentHashMap$Node<>ConcurrentHashMap$Node<K,V>ConcurrentHashMap$KeySetView<>ConcurrentHashMap$CollectionView<>ConcurrentHashMap$KeySetView<K,V>ConcurrentHashMap$KeySetView<K,Boolean>ConcurrentHashMap$CollectionView<K,Boolean,K>Stream$Builder<>Stream$Builder<T>WeakHashMap$Entry<>WeakHashMap$Entry<K,V>WeakHashMap$Entry<Identity,Entry<?>>Spliterator$OfPrimitive<Double,DoubleConsumer,OfDouble>Spliterator$OfPrimitive<>Spliterator$OfPrimitive<Integer,IntConsumer,OfInt>Spliterator$OfPrimitive<Long,LongConsumer,OfLong>MethodType$ConcurrentWeakInternSet<MethodType>ClassSpecializer<BoundMethodHandle,String,SpeciesData>$Factory<>ClassSpecializer<BoundMethodHandle,String,SpeciesData>$SpeciesData<>ClassSpecializer<>$SpeciesData<>ClassSpecializer<>$Factory<>DirectoryStream$Filter<? super Path>WatchEvent$Kind<?>WatchEvent$Kind<>WatchEvent$Kind<T>isTruevalidStatecheckStatecheckArgumentorg.apache.commons.lang3Validatecom.google.common.basePreconditionsSystemRuntimebyte|char|short|int|longRequest;true;getBody;;;ReturnValue;remoteRequest;true;getContentLength;;;ReturnValue;remoteRequest;true;getCookies;;;ReturnValue;remoteRequest;true;getHeaders;;;ReturnValue;remoteRequest;true;getPath;;;ReturnValue;remoteRequest;true;getQuery;;;ReturnValue;remoteRequest;true;getQueryParams;;;ReturnValue;remoteRequest;true;getRawUri;;;ReturnValue;remoteRequest;true;getUri;;;ReturnValue;remoteRequest;true;oneCookie;;;ReturnValue;remoteratpack.http;ratpack.http;Request;true;getBody;;;ReturnValue;remoteratpack.http;Request;true;getContentLength;;;ReturnValue;remoteratpack.http;Request;true;getCookies;;;ReturnValue;remoteratpack.http;Request;true;getHeaders;;;ReturnValue;remoteratpack.http;Request;true;getPath;;;ReturnValue;remoteratpack.http;Request;true;getQuery;;;ReturnValue;remoteratpack.http;Request;true;getQueryParams;;;ReturnValue;remoteratpack.http;Request;true;getRawUri;;;ReturnValue;remoteratpack.http;Request;true;getUri;;;ReturnValue;remoteratpack.http;Request;true;oneCookie;;;ReturnValue;remoteratpack.core.http;ratpack.core.http;Request;true;getBody;;;ReturnValue;remoteratpack.core.http;Request;true;getContentLength;;;ReturnValue;remoteratpack.core.http;Request;true;getCookies;;;ReturnValue;remoteratpack.core.http;Request;true;getHeaders;;;ReturnValue;remoteratpack.core.http;Request;true;getPath;;;ReturnValue;remoteratpack.core.http;Request;true;getQuery;;;ReturnValue;remoteratpack.core.http;Request;true;getQueryParams;;;ReturnValue;remoteratpack.core.http;Request;true;getRawUri;;;ReturnValue;remoteratpack.core.http;Request;true;getUri;;;ReturnValue;remoteratpack.core.http;Request;true;oneCookie;;;ReturnValue;remoteratpack.handling;Context;true;parse;(java.lang.Class);;ReturnValue;remoteratpack.handling;Context;true;parse;(ratpack.parse.Parse);;ReturnValue;remoteratpack.core.handling;Context;true;parse;(java.lang.Class);;ReturnValue;remotejavax.faces.context;ExternalContext;true;getRequestPathInfo;();;ReturnValue;remotejavax.ws.rs.container;ContainerRequestContext;true;getCookies;;;ReturnValue;remotejavax.ws.rs.container;ContainerRequestContext;true;getHeaders;;;ReturnValue;remotejavax.ws.rs.container;ContainerRequestContext;true;getUriInfo;;;ReturnValue;remoteratpack.core.handling;Context;true;parse;(ratpack.parse.Parse);;ReturnValue;remoteratpack.handling;Context;true;parse;(ratpack.core.parse.Parse);;ReturnValue;remotejavax.faces.context;ExternalContext;true;getRequestCookieMap;();;ReturnValue;remotejavax.faces.context;ExternalContext;true;getRequestHeaderMap;();;ReturnValue;remotejavax.ws.rs.container;ContainerRequestContext;true;getLanguage;;;ReturnValue;remotejakarta.faces.context;ExternalContext;true;getRequestPathInfo;();;ReturnValue;remotejakarta.ws.rs.container;ContainerRequestContext;true;getCookies;;;ReturnValue;remotejakarta.ws.rs.container;ContainerRequestContext;true;getHeaders;;;ReturnValue;remotejakarta.ws.rs.container;ContainerRequestContext;true;getUriInfo;;;ReturnValue;remotejavax.ws.rs.container;ContainerRequestContext;true;getMediaType;;;ReturnValue;remotejakarta.faces.context;ExternalContext;true;getRequestCookieMap;();;ReturnValue;remotejakarta.faces.context;ExternalContext;true;getRequestHeaderMap;();;ReturnValue;remotejakarta.ws.rs.container;ContainerRequestContext;true;getLanguage;;;ReturnValue;remotejakarta.ws.rs.container;ContainerRequestContext;true;getMediaType;;;ReturnValue;remotejavax.faces.context;ExternalContext;true;getRequestParameterMap;();;ReturnValue;remotejavax.ws.rs.container;ContainerRequestContext;true;getEntityStream;;;ReturnValue;remotejavax.ws.rs.container;ContainerRequestContext;true;getHeaderString;;;ReturnValue;remoteratpack.core.handling;Context;true;parse;(ratpack.core.parse.Parse);;ReturnValue;remotejakarta.faces.context;ExternalContext;true;getRequestParameterMap;();;ReturnValue;remotejavax.faces.context;ExternalContext;true;getRequestParameterNames;();;ReturnValue;remotejakarta.ws.rs.container;ContainerRequestContext;true;getEntityStream;;;ReturnValue;remotejakarta.ws.rs.container;ContainerRequestContext;true;getHeaderString;;;ReturnValue;remotejavax.faces.context;ExternalContext;true;getRequestHeaderValuesMap;();;ReturnValue;remotejakarta.faces.context;ExternalContext;true;getRequestParameterNames;();;ReturnValue;remoteratpack.handling;Context;true;parse;(java.lang.Class,java.lang.Object);;ReturnValue;remotejakarta.faces.context;ExternalContext;true;getRequestHeaderValuesMap;();;ReturnValue;remotejavax.faces.context;ExternalContext;true;getRequestParameterValuesMap;();;ReturnValue;remoteratpack.handling;Context;true;parse;(com.google.common.reflect.TypeToken);;ReturnValue;remotejakarta.faces.context;ExternalContext;true;getRequestParameterValuesMap;();;ReturnValue;remotejavax.ws.rs.container;ContainerRequestContext;true;getAcceptableLanguages;;;ReturnValue;remotejavax.ws.rs.container;ContainerRequestContext;true;getAcceptableMediaTypes;;;ReturnValue;remoteratpack.core.handling;Context;true;parse;(java.lang.Class,java.lang.Object);;ReturnValue;remotejakarta.ws.rs.container;ContainerRequestContext;true;getAcceptableLanguages;;;ReturnValue;remotejakarta.ws.rs.container;ContainerRequestContext;true;getAcceptableMediaTypes;;;ReturnValue;remoteratpack.core.handling;Context;true;parse;(com.google.common.reflect.TypeToken);;ReturnValue;remoteratpack.handling;Context;true;parse;(com.google.common.reflect.TypeToken,java.lang.Object);;ReturnValue;remoteorg.apache.http.protocol;HttpRequestHandler;true;handle;(HttpRequest,HttpResponse,HttpContext);;Parameter[0];remoteratpack.core.handling;Context;true;parse;(com.google.common.reflect.TypeToken,java.lang.Object);;ReturnValue;remoteorg.apache.hc.core5.http.io;HttpRequestHandler;true;handle;(ClassicHttpRequest,ClassicHttpResponse,HttpContext);;Parameter[0];remoteorg.apache.hc.core5.http.io;HttpServerRequestHandler;true;handle;(ClassicHttpRequest,ResponseTrigger,HttpContext);;Parameter[0];remoteandroid.content;ContentInterface;true;call;(String,String,String,Bundle);;Parameter[0..3];contentproviderandroid.content;ContentInterface;true;delete;(Uri,Bundle);;Parameter[0..1];contentproviderandroid.content;ContentInterface;true;getType;(Uri);;Parameter[0];contentproviderandroid.content;ContentInterface;true;insert;(Uri,ContentValues,Bundle);;Parameter[0];contentproviderandroid.content;ContentInterface;true;openAssetFile;(Uri,String,CancellationSignal);;Parameter[0];contentproviderandroid.content;ContentInterface;true;openFile;(Uri,String,CancellationSignal);;Parameter[0];contentproviderandroid.content;ContentInterface;true;openTypedAssetFile;(Uri,String,Bundle,CancellationSignal);;Parameter[0..2];contentproviderandroid.content;ContentInterface;true;query;(Uri,String[],Bundle,CancellationSignal);;Parameter[0..2];contentproviderandroid.content;ContentInterface;true;update;(Uri,ContentValues,Bundle);;Parameter[0..2];contentproviderandroid.content;ContentProvider;true;call;(String,String,Bundle);;Parameter[0..2];contentproviderandroid.content;ContentProvider;true;call;(String,String,String,Bundle);;Parameter[0..3];contentproviderandroid.content;ContentProvider;true;delete;(Uri,Bundle);;Parameter[0..1];contentproviderandroid.content;ContentProvider;true;delete;(Uri,String,String[]);;Parameter[0..2];contentproviderandroid.content;ContentProvider;true;getType;(Uri);;Parameter[0];contentproviderandroid.content;ContentProvider;true;insert;(Uri,ContentValues);;Parameter[0..1];contentproviderandroid.content;ContentProvider;true;insert;(Uri,ContentValues,Bundle);;Parameter[0..2];contentproviderandroid.content;ContentProvider;true;openAssetFile;(Uri,String);;Parameter[0];contentproviderandroid.content;ContentProvider;true;openAssetFile;(Uri,String,CancellationSignal);;Parameter[0];contentproviderandroid.content;ContentProvider;true;openFile;(Uri,String);;Parameter[0];contentproviderandroid.content;ContentProvider;true;openFile;(Uri,String,CancellationSignal);;Parameter[0];contentproviderandroid.content;ContentProvider;true;openTypedAssetFile;(Uri,String,Bundle);;Parameter[0..2];contentproviderandroid.content;ContentProvider;true;openTypedAssetFile;(Uri,String,Bundle,CancellationSignal);;Parameter[0..2];contentproviderandroid.content;ContentProvider;true;query;(Uri,String[],Bundle,CancellationSignal);;Parameter[0..2];contentproviderandroid.content;ContentProvider;true;query;(Uri,String[],String,String[],String);;Parameter[0..4];contentproviderandroid.content;ContentProvider;true;query;(Uri,String[],String,String[],String,CancellationSignal);;Parameter[0..4];contentproviderandroid.content;ContentProvider;true;update;(Uri,ContentValues,Bundle);;Parameter[0..2];contentproviderandroid.content;ContentProvider;true;update;(Uri,ContentValues,String,String[]);;Parameter[0..3];contentproviderandroid.util;AttributeSet;false;getAttributeBooleanValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeCount;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeFloatValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeIntValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeListValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeName;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeNameResource;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeNamespace;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeResourceValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeUnsignedIntValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getClassAttribute;;;ReturnValue;remoteandroid.util;AttributeSet;false;getIdAttribute;;;ReturnValue;remoteandroid.util;AttributeSet;false;getIdAttributeResourceValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getPositionDescription;;;ReturnValue;remoteandroid.util;AttributeSet;false;getStyleAttribute;;;ReturnValue;remoteandroid.webkit;WebView;false;getOriginalUrl;();;ReturnValue;remoteandroid.webkit;WebView;false;getUrl;();;ReturnValue;remotejava.net.http;WebSocket$Listener;true;onText;(WebSocket,CharSequence,boolean);;Parameter[1];remotejava.net;Socket;false;getInputStream;();;ReturnValue;remotejava.net;URLConnection;false;getInputStream;();;ReturnValue;remotejavax.servlet.http;Cookie;false;getComment;();;ReturnValue;remotejavax.servlet.http;Cookie;false;getName;();;ReturnValue;remotejavax.servlet.http;Cookie;false;getValue;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getHeader;(String);;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getHeaderNames;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getHeaders;(String);;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getParameter;(String);;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getParameterMap;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getParameterNames;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getParameterValues;(String);;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getPathInfo;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getQueryString;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getRemoteUser;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getRequestURI;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getRequestURL;();;ReturnValue;remotejavax.servlet;ServletRequest;false;getInputStream;();;ReturnValue;remotejavax.servlet;ServletRequest;false;getParameter;(String);;ReturnValue;remotejavax.servlet;ServletRequest;false;getParameterMap;();;ReturnValue;remotejavax.servlet;ServletRequest;false;getParameterNames;();;ReturnValue;remotejavax.servlet;ServletRequest;false;getParameterValues;(String);;ReturnValue;remotejavax.servlet;ServletRequest;false;getReader;();;ReturnValue;remotejavax.validation;ConstraintValidator;true;isValid;;;Parameter[0];remoteorg.apache.http;HttpEntity;false;getContent;();;ReturnValue;remoteorg.apache.http;HttpMessage;false;getParams;();;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getCookies;;;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getHeaderNames;;;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getHeaderValues;;;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getParameterMap;;;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getParameterValues;;;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getRedirectUrl;;;ReturnValue;remoteorg.springframework.web.client;RestTemplate;false;exchange;;;ReturnValue;remoteorg.springframework.web.client;RestTemplate;false;getForEntity;;;ReturnValue;remoteorg.springframework.web.client;RestTemplate;false;postForEntity;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getDescription;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getHeader;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getHeaderNames;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getHeaderValues;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getParameter;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getParameterMap;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getParameterNames;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getParameterValues;;;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getBytes;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getContentType;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getInputStream;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getName;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getOriginalFilename;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getResource;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getFile;(String);;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getFileMap;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getFileNames;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getFiles;(String);;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getMultiFileMap;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getMultipartContentType;(String);;ReturnValue;remoteorg.xmlpull.v1;XmlPullParser;false;getName;();;ReturnValue;remoteorg.xmlpull.v1;XmlPullParser;false;getNamespace;();;ReturnValue;remoteorg.xmlpull.v1;XmlPullParser;false;getText;();;ReturnValue;remoteplay.mvc;Http$RequestHeader;false;getHeader;;;ReturnValue;remoteplay.mvc;Http$RequestHeader;false;getQueryString;;;ReturnValue;remoteplay.mvc;Http$RequestHeader;false;header;;;ReturnValue;remoteplay.mvc;Http$RequestHeader;false;queryString;;;ReturnValue;remoteratpack.httpRequestgetBodyReturnValueremotegetCookiesgetHeadersgetQueryParamsgetRawUrigetUrioneCookieratpack.core.httpratpack.handlingContext(java.lang.Class)(ratpack.parse.Parse)ratpack.core.handlingjavax.faces.contextExternalContextgetRequestPathInfojavax.ws.rs.containerContainerRequestContextgetUriInfo(ratpack.core.parse.Parse)getRequestCookieMapgetRequestHeaderMapjakarta.faces.contextjakarta.ws.rs.containergetMediaTypegetRequestParameterMapgetEntityStreamgetHeaderStringgetRequestParameterNamesgetRequestHeaderValuesMap(java.lang.Class,java.lang.Object)getRequestParameterValuesMap(com.google.common.reflect.TypeToken)getAcceptableLanguagesgetAcceptableMediaTypes(com.google.common.reflect.TypeToken,java.lang.Object)org.apache.http.protocolHttpRequestHandlerhandle(HttpRequest,HttpResponse,HttpContext)Parameter[0]org.apache.hc.core5.http.io(ClassicHttpRequest,ClassicHttpResponse,HttpContext)HttpServerRequestHandler(ClassicHttpRequest,ResponseTrigger,HttpContext)android.contentContentInterface(String,String,String,Bundle)Parameter[0..3]contentprovider(Uri,Bundle)Parameter[0..1](Uri)(Uri,ContentValues,Bundle)openAssetFile(Uri,String,CancellationSignal)openFileopenTypedAssetFile(Uri,String,Bundle,CancellationSignal)Parameter[0..2](Uri,String[],Bundle,CancellationSignal)updateContentProvider(String,String,Bundle)(Uri,String,String[])(Uri,ContentValues)(Uri,String)(Uri,String,Bundle)(Uri,String[],String,String[],String)Parameter[0..4](Uri,String[],String,String[],String,CancellationSignal)(Uri,ContentValues,String,String[])android.utilAttributeSetgetAttributeBooleanValuegetAttributeCountgetAttributeFloatValuegetAttributeIntValuegetAttributeListValuegetAttributeNamegetAttributeNameResourcegetAttributeNamespacegetAttributeResourceValuegetAttributeUnsignedIntValuegetAttributeValuegetClassAttributegetIdAttributegetIdAttributeResourceValuegetPositionDescriptiongetStyleAttributeandroid.webkitWebViewgetOriginalUrlgetUrlWebSocket$ListeneronText(WebSocket,CharSequence,boolean)Parameter[1]Socketjavax.servlet.httpCookiegetCommentHttpServletRequestgetHeadergetHeaderNamesgetParametergetParameterMapgetParameterNamesgetParameterValuesgetPathInfogetQueryStringgetRemoteUsergetRequestURIgetRequestURLjavax.servletServletRequestgetReaderjavax.validationConstraintValidatororg.apache.httpHttpEntityHttpMessagegetParamsorg.springframework.security.web.savedrequestSavedRequestgetHeaderValuesgetRedirectUrlorg.springframework.web.clientRestTemplateexchangegetForEntitypostForEntityorg.springframework.web.context.requestWebRequestgetDescriptionorg.springframework.web.multipartMultipartFilegetOriginalFilenameMultipartRequestgetFileMapgetFileNamesgetFilesgetMultiFileMapgetMultipartContentTypeorg.xmlpull.v1XmlPullParsergetNamespacegetTextplay.mvcHttp$RequestHeaderheaderqueryStringjava.sql;Statement;true;execute;;;Argument[0];sqljava.sql;Statement;true;addBatch;;;Argument[0];sqlorg.jooq;PlainSQL;false;;;Annotated;Argument[0];sqljava.sql;Connection;true;prepareCall;;;Argument[0];sqljava.sql;Statement;true;executeQuery;;;Argument[0];sqlandroid.webkit;WebView;false;loadData;;;Argument[0];xssjava.sql;Statement;true;executeUpdate;;;Argument[0];sqlorg.hibernate;Session;true;createQuery;;;Argument[0];sqljava.sql;Connection;true;prepareStatement;;;Argument[0];sqlorg.hibernate;Session;true;createSQLQuery;;;Argument[0];sqljava.sql;Statement;true;executeLargeUpdate;;;Argument[0];sqljavax.ws.rs.client;Client;true;target;;;Argument[0];open-urljakarta.ws.rs.client;Client;true;target;;;Argument[0];open-urlorg.hibernate;QueryProducer;true;createQuery;;;Argument[0];sqljavax.faces.context;ResponseStream;true;write;;;Argument[0];xssjavax.faces.context;ResponseWriter;true;write;;;Argument[0];xssandroid.webkit;WebView;false;evaluateJavascript;;;Argument[0];xssjakarta.faces.context;ResponseStream;true;write;;;Argument[0];xssjakarta.faces.context;ResponseWriter;true;write;;;Argument[0];xssorg.hibernate;QueryProducer;true;createSQLQuery;;;Argument[0];sqlandroid.webkit;WebView;false;loadDataWithBaseURL;;;Argument[1];xssjavax.ws.rs.core;Response;true;seeOther;;;Argument[0];url-redirectjavax.xml.transform;Transformer;false;transform;;;Argument[-1];xsltjakarta.ws.rs.core;Response;true;seeOther;;;Argument[0];url-redirectorg.apache.ibatis.jdbc;SqlRunner;false;run;(String);;Argument[0];sqlorg.hibernate;QueryProducer;true;createNativeQuery;;;Argument[0];sqlnet.sf.saxon.s9api;XsltTransformer;false;transform;;;Argument[-1];xsltorg.hibernate;SharedSessionContract;true;createQuery;;;Argument[0];sqlnet.sf.saxon.s9api;Xslt30Transformer;false;transform;;;Argument[-1];xsltorg.apache.http;HttpResponse;true;setEntity;(HttpEntity);;Argument[0];xssorg.hibernate;SharedSessionContract;true;createSQLQuery;;;Argument[0];sqljavax.ws.rs.core;Response;true;temporaryRedirect;;;Argument[0];url-redirectnet.sf.saxon.s9api;Xslt30Transformer;false;callFunction;;;Argument[-1];xsltnet.sf.saxon.s9api;Xslt30Transformer;false;callTemplate;;;Argument[-1];xsltcom.google.common.io;Resources;false;readLines;;;Argument[0];url-open-streamjavax.ws.rs.core;ResponseBuilder;false;header;;;Argument[1];header-splittingjakarta.ws.rs.core;Response;true;temporaryRedirect;;;Argument[0];url-redirectnet.sf.saxon.s9api;Xslt30Transformer;false;applyTemplates;;;Argument[-1];xsltorg.apache.ibatis.jdbc;SqlRunner;false;delete;(String,Object[]);;Argument[0];sqlorg.apache.ibatis.jdbc;SqlRunner;false;insert;(String,Object[]);;Argument[0];sqlorg.apache.ibatis.jdbc;SqlRunner;false;update;(String,Object[]);;Argument[0];sqlcom.google.common.io;Resources;false;toByteArray;(URL);;Argument[0];url-open-streamorg.apache.ibatis.jdbc;SqlRunner;false;selectAll;(String,Object[]);;Argument[0];sqlorg.apache.ibatis.jdbc;SqlRunner;false;selectOne;(String,Object[]);;Argument[0];sqlcom.google.common.io;Resources;false;asByteSource;(URL);;Argument[0];url-open-streamjavax.servlet.http;HttpServletResponse;false;addCookie;;;Argument[0];header-splittingcom.google.common.io;Resources;false;toString;(URL,Charset);;Argument[0];url-open-streamjavax.servlet.http;HttpServletResponse;false;addHeader;;;Argument[0..1];header-splittingjavax.servlet.http;HttpServletResponse;false;setHeader;;;Argument[0..1];header-splittingcom.google.common.io;Resources;false;copy;(URL,OutputStream);;Argument[0];url-open-streamorg.apache.hc.core5.http;HttpEntityContainer;true;setEntity;(HttpEntity);;Argument[0];xsscom.google.common.io;Resources;false;asCharSource;(URL,Charset);;Argument[0];url-open-streamorg.apache.http.util;EntityUtils;true;updateEntity;(HttpResponse,HttpEntity);;Argument[1];xssjavax.servlet.http;HttpServletResponse;false;sendError;(int,String);;Argument[1];information-leakjavax.script;CompiledScript;false;eval;;;Argument[-1];mvelorg.mvel2.compiler;Accessor;false;getValue;;;Argument[-1];mvelorg.mvel2.compiler;CompiledAccExpression;false;getValue;;;Argument[-1];mvelorg.mvel2.compiler;CompiledExpression;false;getDirectValue;;;Argument[-1];mvelorg.mvel2.compiler;ExecutableStatement;false;getValue;;;Argument[-1];mvelorg.mvel2.jsr223;MvelCompiledScript;false;eval;;;Argument[-1];mvelorg.mvel2.jsr223;MvelScriptEngine;false;eval;;;Argument[0];mvelorg.mvel2.jsr223;MvelScriptEngine;false;evaluate;;;Argument[0];mvelorg.mvel2.templates;TemplateRuntime;false;eval;;;Argument[0];mvelorg.mvel2.templates;TemplateRuntime;false;execute;;;Argument[0];mvelorg.mvel2;MVEL;false;eval;;;Argument[0];mvelorg.mvel2;MVEL;false;evalToBoolean;;;Argument[0];mvelorg.mvel2;MVEL;false;evalToString;;;Argument[0];mvelorg.mvel2;MVEL;false;executeAllExpression;;;Argument[0];mvelorg.mvel2;MVEL;false;executeExpression;;;Argument[0];mvelorg.mvel2;MVEL;false;executeSetExpression;;;Argument[0];mvelorg.mvel2;MVELRuntime;false;execute;;;Argument[1];mvelcom.opensymphony.xwork2.ognl;OgnlUtil;false;callMethod;;;Argument[0];ognl-injectioncom.opensymphony.xwork2.ognl;OgnlUtil;false;getValue;;;Argument[0];ognl-injectioncom.opensymphony.xwork2.ognl;OgnlUtil;false;setValue;;;Argument[0];ognl-injectionognl.enhance;ExpressionAccessor;true;get;;;Argument[-1];ognl-injectionognl.enhance;ExpressionAccessor;true;set;;;Argument[-1];ognl-injectionognl;Node;false;getValue;;;Argument[-1];ognl-injectionognl;Node;false;setValue;;;Argument[-1];ognl-injectionognl;Ognl;false;getValue;;;Argument[0];ognl-injectionognl;Ognl;false;setValue;;;Argument[0];ognl-injectionorg.apache.commons.ognl.enhance;ExpressionAccessor;true;get;;;Argument[-1];ognl-injectionorg.apache.commons.ognl.enhance;ExpressionAccessor;true;set;;;Argument[-1];ognl-injectionorg.apache.commons.ognl;Node;true;getValue;;;Argument[-1];ognl-injectionorg.apache.commons.ognl;Node;true;setValue;;;Argument[-1];ognl-injectionorg.apache.commons.ognl;Ognl;false;getValue;;;Argument[0];ognl-injectionorg.apache.commons.ognl;Ognl;false;setValue;;;Argument[0];ognl-injectionorg.springframework.http;RequestEntity;false;RequestEntity;(HttpMethod,URI);;Argument[1];open-urlorg.springframework.http;RequestEntity;false;RequestEntity;(MultiValueMap,HttpMethod,URI);;Argument[2];open-urlorg.springframework.http;RequestEntity;false;RequestEntity;(Object,HttpMethod,URI);;Argument[2];open-urlorg.springframework.http;RequestEntity;false;RequestEntity;(Object,HttpMethod,URI,Type);;Argument[2];open-urlorg.springframework.http;RequestEntity;false;RequestEntity;(Object,MultiValueMap,HttpMethod,URI);;Argument[3];open-urlorg.springframework.http;RequestEntity;false;RequestEntity;(Object,MultiValueMap,HttpMethod,URI,Type);;Argument[3];open-urlorg.springframework.http;RequestEntity;false;delete;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;get;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;head;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;method;;;Argument[1];open-urlorg.springframework.http;RequestEntity;false;options;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;patch;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;post;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;put;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;delete;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;doExecute;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;exchange;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;execute;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;getForEntity;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;getForObject;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;headForHeaders;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;optionsForAllow;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;patchForObject;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;postForEntity;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;postForLocation;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;postForObject;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;put;;;Argument[0];open-urlorg.springframework.web.reactive.function.client;WebClient$Builder;false;baseUrl;;;Argument[0];open-urlorg.springframework.web.reactive.function.client;WebClient;false;create;;;Argument[0];open-urljavax.xml.xpath;XPath;true;compile;;;Argument[0];xpathjavax.xml.xpath;XPath;true;evaluate;;;Argument[0];xpathjavax.xml.xpath;XPath;true;evaluateExpression;;;Argument[0];xpathorg.dom4j.tree;AbstractNode;true;createPattern;;;Argument[0];xpathorg.dom4j.tree;AbstractNode;true;createXPathFilter;;;Argument[0];xpathorg.dom4j.util;ProxyDocumentFactory;true;createPattern;;;Argument[0];xpathorg.dom4j.util;ProxyDocumentFactory;true;createXPath;;;Argument[0];xpathorg.dom4j.util;ProxyDocumentFactory;true;createXPathFilter;;;Argument[0];xpathorg.dom4j;DocumentFactory;true;createPattern;;;Argument[0];xpathorg.dom4j;DocumentFactory;true;createXPath;;;Argument[0];xpathorg.dom4j;DocumentFactory;true;createXPathFilter;;;Argument[0];xpathorg.dom4j;DocumentHelper;false;createPattern;;;Argument[0];xpathorg.dom4j;DocumentHelper;false;createXPath;;;Argument[0];xpathorg.dom4j;DocumentHelper;false;createXPathFilter;;;Argument[0];xpathorg.dom4j;DocumentHelper;false;selectNodes;;;Argument[0];xpathorg.dom4j;DocumentHelper;false;sort;;;Argument[1];xpathorg.dom4j;Node;true;createXPath;;;Argument[0];xpathorg.dom4j;Node;true;matches;;;Argument[0];xpathorg.dom4j;Node;true;numberValueOf;;;Argument[0];xpathorg.dom4j;Node;true;selectNodes;;;Argument[0..1];xpathorg.dom4j;Node;true;selectObject;;;Argument[0];xpathorg.dom4j;Node;true;selectSingleNode;;;Argument[0];xpathorg.dom4j;Node;true;valueOf;;;Argument[0];xpathorg.springframework.jdbc.core;JdbcTemplate;false;batchUpdate;(String[]);;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;batchUpdate;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;execute;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;query;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;queryForList;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;queryForMap;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;queryForObject;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;queryForRowSet;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;queryForStream;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;update;;;Argument[0];sqlorg.springframework.jdbc.object;BatchSqlUpdate;false;BatchSqlUpdate;;;Argument[1];sqlorg.springframework.jdbc.object;MappingSqlQuery;false;BatchSqlUpdate;;;Argument[1];sqlorg.springframework.jdbc.object;MappingSqlQueryWithParameters;false;BatchSqlUpdate;;;Argument[1];sqlorg.springframework.jdbc.object;RdbmsOperation;true;setSql;;;Argument[0];sqlorg.springframework.jdbc.object;SqlCall;false;SqlCall;;;Argument[1];sqlorg.springframework.jdbc.object;SqlFunction;false;SqlFunction;;;Argument[1];sqlorg.springframework.jdbc.object;SqlQuery;false;SqlQuery;;;Argument[1];sqlorg.springframework.jdbc.object;SqlUpdate;false;SqlUpdate;;;Argument[1];sqlorg.springframework.jdbc.object;UpdatableSqlQuery;false;UpdatableSqlQuery;;;Argument[1];sqlandroid.app;Activity;true;bindService;;;Argument[0];intent-startandroid.app;Activity;true;bindServiceAsUser;;;Argument[0];intent-startandroid.app;Activity;true;startActivityAsCaller;;;Argument[0];intent-startandroid.app;Activity;true;startActivityForResult;(Intent,int);;Argument[0];intent-startandroid.app;Activity;true;startActivityForResult;(Intent,int,Bundle);;Argument[0];intent-startandroid.app;Activity;true;startActivityForResult;(String,Intent,int,Bundle);;Argument[1];intent-startandroid.app;Activity;true;startActivityForResultAsUser;;;Argument[0];intent-startandroid.content;Context;true;sendBroadcast;;;Argument[0];intent-startandroid.content;Context;true;sendBroadcastAsUser;;;Argument[0];intent-startandroid.content;Context;true;sendBroadcastWithMultiplePermissions;;;Argument[0];intent-startandroid.content;Context;true;sendStickyBroadcast;;;Argument[0];intent-startandroid.content;Context;true;sendStickyBroadcastAsUser;;;Argument[0];intent-startandroid.content;Context;true;sendStickyOrderedBroadcast;;;Argument[0];intent-startandroid.content;Context;true;sendStickyOrderedBroadcastAsUser;;;Argument[0];intent-startandroid.content;Context;true;startActivities;;;Argument[0];intent-startandroid.content;Context;true;startActivity;;;Argument[0];intent-startandroid.content;Context;true;startActivityAsUser;;;Argument[0];intent-startandroid.content;Context;true;startActivityFromChild;;;Argument[1];intent-startandroid.content;Context;true;startActivityFromFragment;;;Argument[1];intent-startandroid.content;Context;true;startActivityIfNeeded;;;Argument[0];intent-startandroid.content;Context;true;startForegroundService;;;Argument[0];intent-startandroid.content;Context;true;startService;;;Argument[0];intent-startandroid.content;Context;true;startServiceAsUser;;;Argument[0];intent-startjava.io;FileOutputStream;false;FileOutputStream;;;Argument[0];create-filejava.io;FileWriter;false;FileWriter;;;Argument[0];create-filejava.io;RandomAccessFile;false;RandomAccessFile;;;Argument[0];create-filejava.net.http;HttpRequest$Builder;false;uri;;;Argument[0];open-urljava.net.http;HttpRequest;false;newBuilder;;;Argument[0];open-urljava.net;URL;false;openConnection;;;Argument[-1];open-urljava.net;URL;false;openStream;;;Argument[-1];open-urljava.net;URLClassLoader;false;URLClassLoader;(String,URL[],ClassLoader);;Argument[1];open-urljava.net;URLClassLoader;false;URLClassLoader;(String,URL[],ClassLoader,URLStreamHandlerFactory);;Argument[1];open-urljava.net;URLClassLoader;false;URLClassLoader;(URL[]);;Argument[0];open-urljava.net;URLClassLoader;false;URLClassLoader;(URL[],ClassLoader);;Argument[0];open-urljava.net;URLClassLoader;false;URLClassLoader;(URL[],ClassLoader,URLStreamHandlerFactory);;Argument[0];open-urljava.net;URLClassLoader;false;newInstance;;;Argument[0];open-urljava.nio.file;Files;false;copy;;;Argument[1];create-filejava.nio.file;Files;false;createDirectory;;;Argument[0];create-filejava.nio.file;Files;false;createFile;;;Argument[0];create-filejava.nio.file;Files;false;createLink;;;Argument[0];create-filejava.nio.file;Files;false;createSymbolicLink;;;Argument[0];create-filejava.nio.file;Files;false;createTempDirectory;;;Argument[0];create-filejava.nio.file;Files;false;createTempFile;;;Argument[0];create-filejava.nio.file;Files;false;move;;;Argument[1];create-filejava.nio.file;Files;false;newBufferedReader;;;Argument[0];create-filejava.nio.file;Files;false;newOutputStream;;;Argument[0];create-filejavax.net.ssl;HttpsURLConnection;true;setDefaultHostnameVerifier;;;Argument[0];set-hostname-verifierjavax.net.ssl;HttpsURLConnection;true;setHostnameVerifier;;;Argument[0];set-hostname-verifierjavax.validation;ConstraintValidatorContext;true;buildConstraintViolationWithTemplate;;;Argument[0];bean-validationorg.apache.http.client.methods;HttpDelete;false;HttpDelete;;;Argument[0];open-urlorg.apache.http.client.methods;HttpGet;false;HttpGet;;;Argument[0];open-urlorg.apache.http.client.methods;HttpHead;false;HttpHead;;;Argument[0];open-urlorg.apache.http.client.methods;HttpOptions;false;HttpOptions;;;Argument[0];open-urlorg.apache.http.client.methods;HttpPatch;false;HttpPatch;;;Argument[0];open-urlorg.apache.http.client.methods;HttpPost;false;HttpPost;;;Argument[0];open-urlorg.apache.http.client.methods;HttpPut;false;HttpPut;;;Argument[0];open-urlorg.apache.http.client.methods;HttpRequestBase;true;setURI;;;Argument[0];open-urlorg.apache.http.client.methods;HttpTrace;false;HttpTrace;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;delete;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;get;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;head;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;options;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;patch;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;post;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;put;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;setUri;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;trace;;;Argument[0];open-urlorg.apache.http.message;BasicHttpEntityEnclosingRequest;false;BasicHttpEntityEnclosingRequest;(RequestLine);;Argument[0];open-urlorg.apache.http.message;BasicHttpEntityEnclosingRequest;false;BasicHttpEntityEnclosingRequest;(String,String);;Argument[1];open-urlorg.apache.http.message;BasicHttpEntityEnclosingRequest;false;BasicHttpEntityEnclosingRequest;(String,String,ProtocolVersion);;Argument[1];open-urlorg.apache.http.message;BasicHttpRequest;false;BasicHttpRequest;(RequestLine);;Argument[0];open-urlorg.apache.http.message;BasicHttpRequest;false;BasicHttpRequest;(String,String);;Argument[1];open-urlorg.apache.http.message;BasicHttpRequest;false;BasicHttpRequest;(String,String,ProtocolVersion);;Argument[1];open-urlorg.apache.http;HttpRequest;true;setURI;;;Argument[0];open-urlgroovy.lang;GroovyClassLoader;false;parseClass;(GroovyCodeSource);;Argument[0];groovygroovy.lang;GroovyClassLoader;false;parseClass;(GroovyCodeSource,boolean);;Argument[0];groovygroovy.lang;GroovyClassLoader;false;parseClass;(InputStream,String);;Argument[0];groovygroovy.lang;GroovyClassLoader;false;parseClass;(Reader,String);;Argument[0];groovygroovy.lang;GroovyClassLoader;false;parseClass;(String);;Argument[0];groovygroovy.lang;GroovyClassLoader;false;parseClass;(String,String);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(GroovyCodeSource);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(Reader);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(Reader,String);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(String);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(String,String);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(String,String,String);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(URI);;Argument[0];groovygroovy.lang;GroovyShell;false;parse;(Reader);;Argument[0];groovygroovy.lang;GroovyShell;false;parse;(Reader,String);;Argument[0];groovygroovy.lang;GroovyShell;false;parse;(String);;Argument[0];groovygroovy.lang;GroovyShell;false;parse;(String,String);;Argument[0];groovygroovy.lang;GroovyShell;false;parse;(URI);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(GroovyCodeSource,List);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(GroovyCodeSource,String[]);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(Reader,String,List);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(Reader,String,String[]);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(String,String,List);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(String,String,String[]);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(URI,List);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(URI,String[]);;Argument[0];groovygroovy.util;Eval;false;me;(String);;Argument[0];groovygroovy.util;Eval;false;me;(String,Object,String);;Argument[2];groovygroovy.util;Eval;false;x;(Object,String);;Argument[1];groovygroovy.util;Eval;false;xy;(Object,Object,String);;Argument[2];groovygroovy.util;Eval;false;xyz;(Object,Object,Object,String);;Argument[3];groovyorg.codehaus.groovy.control;CompilationUnit;false;compile;;;Argument[-1];groovyorg.apache.commons.jexl2;Expression;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl2;Expression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl2;JexlEngine;false;getProperty;(JexlContext,Object,String);;Argument[2];jexlorg.apache.commons.jexl2;JexlEngine;false;getProperty;(Object,String);;Argument[1];jexlorg.apache.commons.jexl2;JexlEngine;false;setProperty;(JexlContext,Object,String,Object);;Argument[2];jexlorg.apache.commons.jexl2;JexlEngine;false;setProperty;(Object,String,Object);;Argument[1];jexlorg.apache.commons.jexl2;JexlExpression;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl2;JexlExpression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl2;JexlScript;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl2;JexlScript;false;execute;;;Argument[-1];jexlorg.apache.commons.jexl2;Script;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl2;Script;false;execute;;;Argument[-1];jexlorg.apache.commons.jexl2;UnifiedJEXL$Expression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl2;UnifiedJEXL$Expression;false;prepare;;;Argument[-1];jexlorg.apache.commons.jexl2;UnifiedJEXL$Template;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl3;Expression;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl3;Expression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl3;JexlEngine;false;getProperty;(JexlContext,Object,String);;Argument[2];jexlorg.apache.commons.jexl3;JexlEngine;false;getProperty;(Object,String);;Argument[1];jexlorg.apache.commons.jexl3;JexlEngine;false;setProperty;(JexlContext,Object,String);;Argument[2];jexlorg.apache.commons.jexl3;JexlEngine;false;setProperty;(Object,String,Object);;Argument[1];jexlorg.apache.commons.jexl3;JexlExpression;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl3;JexlExpression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl3;JexlScript;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl3;JexlScript;false;execute;;;Argument[-1];jexlorg.apache.commons.jexl3;JxltEngine$Expression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl3;JxltEngine$Expression;false;prepare;;;Argument[-1];jexlorg.apache.commons.jexl3;JxltEngine$Template;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl3;Script;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl3;Script;false;execute;;;Argument[-1];jexljavax.management.remote;JMXConnector;true;connect;;;Argument[-1];jndi-injectionjavax.management.remote;JMXConnectorFactory;false;connect;;;Argument[0];jndi-injectionjavax.naming;Context;true;list;;;Argument[0];jndi-injectionjavax.naming;Context;true;listBindings;;;Argument[0];jndi-injectionjavax.naming;Context;true;lookup;;;Argument[0];jndi-injectionjavax.naming;Context;true;lookupLink;;;Argument[0];jndi-injectionjavax.naming;Context;true;rename;;;Argument[0];jndi-injectionjavax.naming;InitialContext;true;doLookup;;;Argument[0];jndi-injectionorg.apache.shiro.jndi;JndiTemplate;false;lookup;;;Argument[0];jndi-injectionorg.springframework.jndi;JndiTemplate;false;lookup;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;findByDn;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;list;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;listBindings;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;lookup;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;lookupContext;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;rename;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(Name,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(Name,String,int,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(Name,String,int,String[],ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(String,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(String,String,int,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(String,String,int,String[],ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;searchForObject;(Name,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;searchForObject;(String,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;findByDn;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;list;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;listBindings;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;lookup;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;lookupContext;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;rename;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(Name,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(Name,String,int,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(Name,String,int,String[],ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(String,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(String,String,int,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(String,String,int,String[],ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;searchForObject;(Name,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;searchForObject;(String,String,ContextMapper);;Argument[0];jndi-injectioncom.unboundid.ldap.sdk;LDAPConnection;false;asyncSearch;;;Argument[0];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(ReadOnlySearchRequest);;Argument[0];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(SearchRequest);;Argument[0];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(SearchResultListener,String,SearchScope,DereferencePolicy,int,int,boolean,Filter,String[]);;Argument[0..7];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(SearchResultListener,String,SearchScope,DereferencePolicy,int,int,boolean,String,String[]);;Argument[0..7];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(SearchResultListener,String,SearchScope,Filter,String[]);;Argument[0..3];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(SearchResultListener,String,SearchScope,String,String[]);;Argument[0..3];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(String,SearchScope,DereferencePolicy,int,int,boolean,Filter,String[]);;Argument[0..6];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(String,SearchScope,DereferencePolicy,int,int,boolean,String,String[]);;Argument[0..6];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(String,SearchScope,Filter,String[]);;Argument[0..2];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(String,SearchScope,String,String[]);;Argument[0..2];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(ReadOnlySearchRequest);;Argument[0];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(SearchRequest);;Argument[0];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(String,SearchScope,DereferencePolicy,int,boolean,Filter,String[]);;Argument[0..5];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(String,SearchScope,DereferencePolicy,int,boolean,String,String[]);;Argument[0..5];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(String,SearchScope,Filter,String[]);;Argument[0..2];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(String,SearchScope,String,String[]);;Argument[0..2];ldapjavax.naming.directory;DirContext;true;search;;;Argument[0..1];ldaporg.apache.directory.ldap.client.api;LdapConnection;true;search;;;Argument[0..2];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(LdapQuery,String);;Argument[0];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(Name,String,String);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(Name,String,String,AuthenticatedLdapEntryContextCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(Name,String,String,AuthenticatedLdapEntryContextCallback,AuthenticationErrorCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(Name,String,String,AuthenticationErrorCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(String,String,String);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(String,String,String,AuthenticatedLdapEntryContextCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(String,String,String,AuthenticatedLdapEntryContextCallback,AuthenticationErrorCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(String,String,String,AuthenticationErrorCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;find;;;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;findOne;;;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;search;;;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;searchForContext;;;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;searchForObject;;;Argument[0..1];ldapandroid.content;ContentProvider;true;delete;(Uri,String,String[]);;Argument[1];sqlandroid.content;ContentProvider;true;query;(Uri,String[],String,String[],String);;Argument[2];sqlandroid.content;ContentProvider;true;query;(Uri,String[],String,String[],String,CancellationSignal);;Argument[2];sqlandroid.content;ContentProvider;true;update;(Uri,ContentValues,String,String[]);;Argument[2];sqlandroid.content;ContentResolver;true;delete;(Uri,String,String[]);;Argument[1];sqlandroid.content;ContentResolver;true;query;(Uri,String[],String,String[],String);;Argument[2];sqlandroid.content;ContentResolver;true;query;(Uri,String[],String,String[],String,CancellationSignal);;Argument[2];sqlandroid.content;ContentResolver;true;update;(Uri,ContentValues,String,String[]);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;compileStatement;(String);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;delete;(String,String,String[]);;Argument[0..1];sqlandroid.database.sqlite;SQLiteDatabase;false;execPerConnectionSQL;(String,Object[]);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;execSQL;(String);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;execSQL;(String,Object[]);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String);;Argument[0..2];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String);;Argument[4..6];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String,String);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String,String);;Argument[1];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String,String);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String,String);;Argument[4..7];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String);;Argument[1];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String);;Argument[3];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String);;Argument[5..8];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[1];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[3];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[5..8];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String);;Argument[3];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String);;Argument[4];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String);;Argument[6..9];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[3];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[4];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[6..9];sqlandroid.database.sqlite;SQLiteDatabase;false;rawQuery;(String,String[]);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;rawQuery;(String,String[],CancellationSignal);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;rawQueryWithFactory;(CursorFactory,String,String[],String);;Argument[1];sqlandroid.database.sqlite;SQLiteDatabase;false;rawQueryWithFactory;(CursorFactory,String,String[],String,CancellationSignal);;Argument[1];sqlandroid.database.sqlite;SQLiteDatabase;false;update;(String,ContentValues,String,String[]);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;update;(String,ContentValues,String,String[]);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;updateWithOnConflict;(String,ContentValues,String,String[],int);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;updateWithOnConflict;(String,ContentValues,String,String[],int);;Argument[2];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;delete;(SQLiteDatabase,String,String[]);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;delete;(SQLiteDatabase,String,String[]);;Argument[1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;insert;(SQLiteDatabase,ContentValues);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String);;Argument[1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String);;Argument[2];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String);;Argument[4..6];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String);;Argument[1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String);;Argument[2];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String);;Argument[4..7];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[2];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[4..7];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;update;(SQLiteDatabase,ContentValues,String,String[]);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;update;(SQLiteDatabase,ContentValues,String,String[]);;Argument[2];sqlandroid.database;DatabaseUtils;false;blobFileDescriptorForQuery;(SQLiteDatabase,String,String[]);;Argument[1];sqlandroid.database;DatabaseUtils;false;createDbFromSqlStatements;(Context,String,int,String);;Argument[3];sqlandroid.database;DatabaseUtils;false;longForQuery;(SQLiteDatabase,String,String[]);;Argument[1];sqlandroid.database;DatabaseUtils;false;queryNumEntries;(SQLiteDatabase,String);;Argument[1];sqlandroid.database;DatabaseUtils;false;queryNumEntries;(SQLiteDatabase,String,String);;Argument[1..2];sqlandroid.database;DatabaseUtils;false;queryNumEntries;(SQLiteDatabase,String,String,String[]);;Argument[1..2];sqlandroid.database;DatabaseUtils;false;stringForQuery;(SQLiteDatabase,String,String[]);;Argument[1];sqlStatementArgument[0]sqladdBatchorg.jooqPlainSQLAnnotatedConnectionprepareCallexecuteQueryloadDataxssexecuteUpdateorg.hibernateSessioncreateQueryprepareStatementcreateSQLQueryexecuteLargeUpdatejavax.ws.rs.clientClientopen-urljakarta.ws.rs.clientQueryProducerResponseStreamResponseWriterevaluateJavascriptloadDataWithBaseURLArgument[1]javax.ws.rs.coreResponseseeOtherurl-redirectjavax.xml.transformTransformertransformArgument[-1]xsltjakarta.ws.rs.coreorg.apache.ibatis.jdbcSqlRunnercreateNativeQuerynet.sf.saxon.s9apiXsltTransformerSharedSessionContractXslt30TransformerHttpResponsesetEntity(HttpEntity)temporaryRedirectcallFunctioncallTemplatecom.google.common.ioResourcesreadLinesurl-open-streamResponseBuilderheader-splittingapplyTemplatesselectAllselectOneasByteSourceHttpServletResponseaddCookie(URL,Charset)addHeaderArgument[0..1]setHeader(URL,OutputStream)org.apache.hc.core5.httpHttpEntityContainerasCharSourceorg.apache.http.utilEntityUtilsupdateEntity(HttpResponse,HttpEntity)sendErrorinformation-leakjavax.scriptCompiledScriptevalmvelorg.mvel2.compilerAccessorCompiledAccExpressionCompiledExpressiongetDirectValueExecutableStatementorg.mvel2.jsr223MvelCompiledScriptMvelScriptEngineevaluateorg.mvel2.templatesTemplateRuntimeorg.mvel2MVELevalToBooleanevalToStringexecuteAllExpressionexecuteExpressionexecuteSetExpressionMVELRuntimecom.opensymphony.xwork2.ognlOgnlUtilcallMethodognl-injectionognl.enhanceExpressionAccessorognlOgnlorg.apache.commons.ognl.enhanceorg.apache.commons.ognlorg.springframework.httpRequestEntity(HttpMethod,URI)(MultiValueMap,HttpMethod,URI)Argument[2](Object,HttpMethod,URI)(Object,HttpMethod,URI,Type)(Object,MultiValueMap,HttpMethod,URI)Argument[3](Object,MultiValueMap,HttpMethod,URI,Type)headmethodoptionspatchpostdoExecutegetForObjectheadForHeadersoptionsForAllowpatchForObjectpostForLocationpostForObjectorg.springframework.web.reactive.function.clientWebClient$BuilderbaseUrlWebClientjavax.xml.xpathXPathxpathevaluateExpressionorg.dom4j.treeAbstractNodecreatePatterncreateXPathFilterorg.dom4j.utilProxyDocumentFactorycreateXPathorg.dom4jDocumentFactoryDocumentHelperselectNodesnumberValueOfselectObjectselectSingleNodeorg.springframework.jdbc.coreJdbcTemplatebatchUpdatequeryForListqueryForMapqueryForObjectqueryForRowSetqueryForStreamorg.springframework.jdbc.objectBatchSqlUpdateMappingSqlQueryMappingSqlQueryWithParametersRdbmsOperationsetSqlSqlCallSqlFunctionSqlQuerySqlUpdateUpdatableSqlQueryandroid.appActivitybindServiceintent-startbindServiceAsUserstartActivityAsCallerstartActivityForResult(Intent,int)(Intent,int,Bundle)(String,Intent,int,Bundle)startActivityForResultAsUsersendBroadcastsendBroadcastAsUsersendBroadcastWithMultiplePermissionssendStickyBroadcastsendStickyBroadcastAsUsersendStickyOrderedBroadcastsendStickyOrderedBroadcastAsUserstartActivitiesstartActivitystartActivityAsUserstartActivityFromChildstartActivityFromFragmentstartActivityIfNeededstartForegroundServicestartServicestartServiceAsUserFileOutputStreamcreate-fileFileWriterRandomAccessFileHttpRequest$BuilderuriHttpRequestnewBuilderURLClassLoader(String,URL[],ClassLoader)(String,URL[],ClassLoader,URLStreamHandlerFactory)(URL[])(URL[],ClassLoader)(URL[],ClassLoader,URLStreamHandlerFactory)FilescreateFilecreateTempDirectorynewBufferedReaderHttpsURLConnectionsetDefaultHostnameVerifierset-hostname-verifiersetHostnameVerifierConstraintValidatorContextbuildConstraintViolationWithTemplatebean-validationorg.apache.http.client.methodsHttpDeleteHttpGetHttpHeadHttpOptionsHttpPatchHttpPostHttpPutHttpRequestBasesetURIHttpTraceRequestBuildersetUritraceorg.apache.http.messageBasicHttpEntityEnclosingRequest(RequestLine)(String,String,ProtocolVersion)BasicHttpRequestgroovy.langGroovyClassLoaderparseClass(GroovyCodeSource)groovy(GroovyCodeSource,boolean)(InputStream,String)(Reader,String)GroovyShell(GroovyCodeSource,List)(GroovyCodeSource,String[])(Reader,String,List)(Reader,String,String[])(String,String,List)(String,String,String[])(URI,List)(URI,String[])groovy.utilEvalme(String,Object,String)xxyxyz(Object,Object,Object,String)org.codehaus.groovy.controlCompilationUnitorg.apache.commons.jexl2ExpressioncallablejexlJexlEngine(JexlContext,Object,String)(JexlContext,Object,String,Object)(Object,String,Object)JexlExpressionJexlScriptScriptUnifiedJEXL$ExpressionUnifiedJEXL$Templateorg.apache.commons.jexl3JxltEngine$ExpressionJxltEngine$Templatejavax.management.remoteJMXConnectorjndi-injectionJMXConnectorFactoryjavax.naminglistBindingslookupLinkrenameInitialContextdoLookuporg.apache.shiro.jndiJndiTemplateorg.springframework.jndiorg.springframework.ldap.coreLdapOperationsfindByDnlookupContext(Name,String,ContextMapper)(Name,String,int,ContextMapper)(Name,String,int,String[],ContextMapper)(String,String,ContextMapper)(String,String,int,ContextMapper)(String,String,int,String[],ContextMapper)searchForObjectorg.springframework.ldapcom.unboundid.ldap.sdkLDAPConnectionasyncSearchldap(ReadOnlySearchRequest)(SearchRequest)(SearchResultListener,String,SearchScope,DereferencePolicy,int,int,boolean,Filter,String[])Argument[0..7](SearchResultListener,String,SearchScope,DereferencePolicy,int,int,boolean,String,String[])(SearchResultListener,String,SearchScope,Filter,String[])Argument[0..3](SearchResultListener,String,SearchScope,String,String[])(String,SearchScope,DereferencePolicy,int,int,boolean,Filter,String[])Argument[0..6](String,SearchScope,DereferencePolicy,int,int,boolean,String,String[])(String,SearchScope,Filter,String[])Argument[0..2](String,SearchScope,String,String[])searchForEntry(String,SearchScope,DereferencePolicy,int,boolean,Filter,String[])Argument[0..5](String,SearchScope,DereferencePolicy,int,boolean,String,String[])javax.naming.directoryDirContextorg.apache.directory.ldap.client.apiLdapConnectionLdapTemplateauthenticate(LdapQuery,String)(Name,String,String)(Name,String,String,AuthenticatedLdapEntryContextCallback)(Name,String,String,AuthenticatedLdapEntryContextCallback,AuthenticationErrorCallback)(Name,String,String,AuthenticationErrorCallback)(String,String,String,AuthenticatedLdapEntryContextCallback)(String,String,String,AuthenticatedLdapEntryContextCallback,AuthenticationErrorCallback)(String,String,String,AuthenticationErrorCallback)findOnesearchForContextContentResolverandroid.database.sqliteSQLiteDatabasecompileStatementexecPerConnectionSQLexecSQL(String,String[],String,String[],String,String,String)Argument[4..6](String,String[],String,String[],String,String,String,String)Argument[4..7](boolean,String,String[],String,String[],String,String,String,String)Argument[5..8](boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String)Argument[4]Argument[6..9](CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)rawQuery(String,String[],CancellationSignal)rawQueryWithFactory(CursorFactory,String,String[],String)(CursorFactory,String,String[],String,CancellationSignal)(String,ContentValues,String,String[])updateWithOnConflict(String,ContentValues,String,String[],int)SQLiteQueryBuilder(SQLiteDatabase,String,String[])(SQLiteDatabase,ContentValues)(SQLiteDatabase,String[],String,String[],String,String,String)(SQLiteDatabase,String[],String,String[],String,String,String,String)(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal)(SQLiteDatabase,ContentValues,String,String[])android.databaseDatabaseUtilsblobFileDescriptorForQuerycreateDbFromSqlStatements(Context,String,int,String)longForQueryqueryNumEntries(SQLiteDatabase,String)(SQLiteDatabase,String,String)Argument[1..2](SQLiteDatabase,String,String,String[])stringForQuery.json.stream;JsonParserFactory;false;createParser;;;Argument[0];ReturnValue;taint.json;Json;false;createArrayBuilder;(Collection);;Element of Argument[0];ReturnValue;taint.json;Json;false;createArrayBuilder;(JsonArray);;Argument[0];ReturnValue;taint.json;Json;false;createDiff;;;Argument[0..1];ReturnValue;taint.json;Json;false;createMergeDiff;;;Argument[0..1];ReturnValue;taint.json;Json;false;createMergePatch;;;Argument[0];ReturnValue;taint.json;Json;false;createObjectBuilder;(JsonObject);;Argument[0];ReturnValue;taint.json;Json;false;createObjectBuilder;(Map);;MapKey of Argument[0];ReturnValue;taint.json;Json;false;createObjectBuilder;(Map);;MapValue of Argument[0];ReturnValue;taint.json;Json;false;createPatch;;;Argument[0];ReturnValue;taint.json;Json;false;createPatchBuilder;;;Argument[0];ReturnValue;taint.json;Json;false;createPointer;;;Argument[0];ReturnValue;taint.json;Json;false;createReader;;;Argument[0];ReturnValue;taint.json;Json;false;createValue;;;Argument[0];ReturnValue;taint.json;Json;false;createWriter;;;Argument[0];ReturnValue;taint.json;Json;false;decodePointer;;;Argument[0];ReturnValue;taint.json;Json;false;encodePointer;;;Argument[0];ReturnValue;taint.json;JsonArray;false;getBoolean;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getBoolean;;;Argument[1];ReturnValue;value.json;JsonArray;false;getInt;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getInt;;;Argument[1];ReturnValue;value.json;JsonArray;false;getJsonArray;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getJsonNumber;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getJsonObject;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getJsonString;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getString;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getString;;;Argument[1];ReturnValue;value.json;JsonArray;false;getValuesAs;;;Argument[-1];ReturnValue;taint.json;JsonArrayBuilder;false;add;(BigDecimal);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(BigInteger);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(JsonArrayBuilder);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(JsonObjectBuilder);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(JsonValue);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(String);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(boolean);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(double);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,BigDecimal);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,BigInteger);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,JsonArrayBuilder);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,JsonObjectBuilder);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,JsonValue);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,String);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,boolean);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,double);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,int);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,long);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(long);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;;;Argument[-1];ReturnValue;value.json;JsonArrayBuilder;false;addAll;;;Argument[-1];ReturnValue;value.json;JsonArrayBuilder;false;addAll;;;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;addNull;;;Argument[-1];ReturnValue;value.json;JsonArrayBuilder;false;build;;;Argument[-1];ReturnValue;taint.json;JsonArrayBuilder;false;remove;;;Argument[-1];ReturnValue;value.json;JsonArrayBuilder;false;set;;;Argument[-1];ReturnValue;value.json;JsonArrayBuilder;false;set;;;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;setNull;;;Argument[-1];ReturnValue;value.json;JsonMergePatch;false;apply;;;Argument[-1];ReturnValue;taint.json;JsonMergePatch;false;apply;;;Argument[0];ReturnValue;taint.json;JsonMergePatch;false;toJsonValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;bigDecimalValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;bigIntegerValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;bigIntegerValueExact;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;doubleValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;intValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;intValueExact;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;longValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;longValueExact;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;numberValue;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getBoolean;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getBoolean;;;Argument[1];ReturnValue;value.json;JsonObject;false;getInt;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getInt;;;Argument[1];ReturnValue;value.json;JsonObject;false;getJsonArray;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getJsonNumber;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getJsonObject;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getJsonString;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getString;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getString;;;Argument[1];ReturnValue;value.json;JsonObjectBuilder;false;add;;;Argument[-1];ReturnValue;value.json;JsonObjectBuilder;false;add;;;Argument[1];Argument[-1];taint.json;JsonObjectBuilder;false;addAll;;;Argument[-1];ReturnValue;value.json;JsonObjectBuilder;false;addAll;;;Argument[0];ReturnValue;value.json;JsonObjectBuilder;false;addNull;;;Argument[-1];ReturnValue;value.json;JsonObjectBuilder;false;build;;;Argument[-1];ReturnValue;taint.json;JsonObjectBuilder;false;remove;;;Argument[-1];ReturnValue;value.json;JsonPatch;false;apply;;;Argument[-1];ReturnValue;taint.json;JsonPatch;false;apply;;;Argument[0];ReturnValue;taint.json;JsonPatch;false;toJsonArray;;;Argument[-1];ReturnValue;taint.json;JsonPatchBuilder;false;add;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;add;;;Argument[0..1];ReturnValue;taint.json;JsonPatchBuilder;false;build;;;Argument[-1];ReturnValue;taint.json;JsonPatchBuilder;false;copy;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;copy;;;Argument[0..1];ReturnValue;taint.json;JsonPatchBuilder;false;move;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;move;;;Argument[0..1];ReturnValue;taint.json;JsonPatchBuilder;false;remove;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;remove;;;Argument[0];ReturnValue;taint.json;JsonPatchBuilder;false;replace;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;replace;;;Argument[0..1];ReturnValue;taint.json;JsonPatchBuilder;false;test;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;test;;;Argument[0..1];ReturnValue;taint.json;JsonPointer;false;add;;;Argument[-1];ReturnValue;taint.json;JsonPointer;false;add;;;Argument[0..1];ReturnValue;taint.json;JsonPointer;false;getValue;;;Argument[0];ReturnValue;taint.json;JsonPointer;false;remove;;;Argument[0];ReturnValue;taint.json;JsonPointer;false;replace;;;Argument[0..1];ReturnValue;taint.json;JsonPointer;false;toString;;;Argument[-1];ReturnValue;taint.json;JsonReader;false;read;;;Argument[-1];ReturnValue;taint.json;JsonReader;false;readArray;;;Argument[-1];ReturnValue;taint.json;JsonReader;false;readObject;;;Argument[-1];ReturnValue;taint.json;JsonReader;false;readValue;;;Argument[-1];ReturnValue;taint.json;JsonReaderFactory;false;createReader;;;Argument[0];ReturnValue;taint.json;JsonString;false;getChars;;;Argument[-1];ReturnValue;taint.json;JsonString;false;getString;;;Argument[-1];ReturnValue;taint.json;JsonStructure;true;getValue;;;Argument[-1];ReturnValue;taint.json;JsonValue;true;asJsonArray;;;Argument[-1];ReturnValue;taint.json;JsonValue;true;asJsonObject;;;Argument[-1];ReturnValue;taint.json;JsonValue;true;toString;;;Argument[-1];ReturnValue;taint.json;JsonWriter;false;write;;;Argument[0];Argument[-1];taint.json;JsonWriter;false;writeArray;;;Argument[0];Argument[-1];taint.json;JsonWriter;false;writeObject;;;Argument[0];Argument[-1];taint.json;JsonWriterFactory;false;createWriter;;;Argument[-1];Argument[0];taintHeaders;true;asMultiValueMap;;;Argument[-1];ReturnValue;taintHeaders;true;get;;;Argument[-1];ReturnValue;taintHeaders;true;getAll;;;Argument[-1];ReturnValue;taintHeaders;true;getNames;;;Argument[-1];ReturnValue;taintTypedData;true;getBuffer;;;Argument[-1];ReturnValue;taintTypedData;true;getBytes;;;Argument[-1];ReturnValue;taintTypedData;true;getContentType;;;Argument[-1];ReturnValue;taintTypedData;true;getInputStream;;;Argument[-1];ReturnValue;taintTypedData;true;getText;;;Argument[-1];ReturnValue;taintTypedData;true;writeTo;;;Argument[-1];Argument[0];taintbyte|char|short|int|long|double|floatfalse;fromLink;;;Argument[0];ReturnValue;taintfalse;fromPath;;;Argument[0];ReturnValue;taintfalse;fromUri;;;Argument[0];ReturnValue;tainttrue;build;;;Argument[-1];ReturnValue;tainttrue;build;;;ArrayElement of Argument[0];ReturnValue;tainttrue;buildFromEncoded;;;Argument[-1];ReturnValue;tainttrue;buildFromEncoded;;;ArrayElement of Argument[0];ReturnValue;tainttrue;buildFromEncodedMap;;;Argument[-1];ReturnValue;tainttrue;buildFromEncodedMap;;;MapKey of Argument[0];ReturnValue;tainttrue;buildFromEncodedMap;;;MapValue of Argument[0];ReturnValue;tainttrue;buildFromMap;;;Argument[-1];ReturnValue;tainttrue;buildFromMap;;;MapKey of Argument[0];ReturnValue;tainttrue;buildFromMap;;;MapValue of Argument[0];ReturnValue;tainttrue;clone;;;Argument[-1];ReturnValue;tainttrue;fragment;;;Argument[-1];ReturnValue;valuetrue;fragment;;;Argument[0];ReturnValue;tainttrue;host;;;Argument[-1];ReturnValue;valuetrue;host;;;Argument[0];ReturnValue;tainttrue;matrixParam;;;Argument[-1];ReturnValue;valuetrue;matrixParam;;;Argument[0];ReturnValue;tainttrue;matrixParam;;;ArrayElement of Argument[1];ReturnValue;tainttrue;path;;;Argument[-1];ReturnValue;valuetrue;path;;;Argument[0..1];ReturnValue;tainttrue;queryParam;;;Argument[-1];ReturnValue;valuetrue;queryParam;;;Argument[0];ReturnValue;tainttrue;queryParam;;;ArrayElement of Argument[1];ReturnValue;tainttrue;replaceMatrix;;;Argument[-1];ReturnValue;valuetrue;replaceMatrix;;;Argument[0];ReturnValue;tainttrue;replaceMatrixParam;;;Argument[-1];ReturnValue;valuetrue;replaceMatrixParam;;;Argument[0];ReturnValue;tainttrue;replaceMatrixParam;;;ArrayElement of Argument[1];ReturnValue;tainttrue;replacePath;;;Argument[-1];ReturnValue;valuetrue;replacePath;;;Argument[0];ReturnValue;tainttrue;replaceQuery;;;Argument[-1];ReturnValue;valuetrue;replaceQuery;;;Argument[0];ReturnValue;tainttrue;replaceQueryParam;;;Argument[-1];ReturnValue;valuetrue;replaceQueryParam;;;Argument[0];ReturnValue;tainttrue;replaceQueryParam;;;ArrayElement of Argument[1];ReturnValue;tainttrue;resolveTemplate;;;Argument[-1];ReturnValue;valuetrue;resolveTemplate;;;Argument[0..2];ReturnValue;tainttrue;resolveTemplateFromEncoded;;;Argument[-1];ReturnValue;valuetrue;resolveTemplateFromEncoded;;;Argument[0..1];ReturnValue;tainttrue;resolveTemplates;;;Argument[-1];ReturnValue;valuetrue;resolveTemplates;;;MapKey of Argument[0];ReturnValue;tainttrue;resolveTemplates;;;MapValue of Argument[0];ReturnValue;tainttrue;resolveTemplatesFromEncoded;;;Argument[-1];ReturnValue;valuetrue;resolveTemplatesFromEncoded;;;MapKey of Argument[0];ReturnValue;tainttrue;resolveTemplatesFromEncoded;;;MapValue of Argument[0];ReturnValue;tainttrue;scheme;;;Argument[-1];ReturnValue;valuetrue;scheme;;;Argument[0];ReturnValue;tainttrue;schemeSpecificPart;;;Argument[-1];ReturnValue;valuetrue;schemeSpecificPart;;;Argument[0];ReturnValue;tainttrue;segment;;;Argument[-1];ReturnValue;valuetrue;segment;;;ArrayElement of Argument[0];ReturnValue;tainttrue;toTemplate;;;Argument[-1];ReturnValue;tainttrue;uri;;;Argument[-1];ReturnValue;valuetrue;uri;;;Argument[0];ReturnValue;tainttrue;userInfo;;;Argument[-1];ReturnValue;valuetrue;userInfo;;;Argument[0];ReturnValue;taintgetAbsolutePath;;;Argument[-1];ReturnValue;taintgetAbsolutePathBuilder;;;Argument[-1];ReturnValue;taintgetPath;;;Argument[-1];ReturnValue;taintgetPathParameters;;;Argument[-1];ReturnValue;taintgetPathSegments;;;Argument[-1];ReturnValue;taintgetQueryParameters;;;Argument[-1];ReturnValue;taintgetRequestUri;;;Argument[-1];ReturnValue;taintgetRequestUriBuilder;;;Argument[-1];ReturnValue;taintrelativize;;;Argument[0];ReturnValue;taintresolve;;;Argument[-1];ReturnValue;taintresolve;;;Argument[0];ReturnValue;taintadd;;;Argument[0];MapKey of Argument[-1];valueadd;;;Argument[1];Element of MapValue of Argument[-1];valueaddAll;(Object,List);;Element of Argument[1];Element of MapValue of Argument[-1];valueaddAll;(Object,Object[]);;ArrayElement of Argument[1];Element of MapValue of Argument[-1];valueaddAll;;;Argument[0];MapKey of Argument[-1];valueaddFirst;;;Argument[0];MapKey of Argument[-1];valueaddFirst;;;Argument[1];Element of MapValue of Argument[-1];valuegetFirst;;;Element of MapValue of Argument[-1];ReturnValue;valueputSingle;;;Argument[0];MapKey of Argument[-1];valueputSingle;;;Argument[1];Element of MapValue of Argument[-1];value.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];value.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];value.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(MultiValuedMap);;MapKey of Argument[0];MapKey of Argument[-1];value.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];value.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];value.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(MultiValuedMap);;MapKey of Argument[0];MapKey of Argument[-1];value.multimap;TransformedMultiValuedMap;true;transformingMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;value.multimap;TransformedMultiValuedMap;true;transformingMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.multimap;UnmodifiableMultiValuedMap;true;unmodifiableMultiValuedMap;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;value.multimap;UnmodifiableMultiValuedMap;true;unmodifiableMultiValuedMap;(MultiValuedMap);;MapKey of Argument[0];MapKey of ReturnValue;value.bag;AbstractBagDecorator;true;AbstractBagDecorator;;;Element of Argument[0];Element of Argument[-1];value.bag;AbstractMapBag;true;AbstractMapBag;;;MapKey of Argument[0];Element of Argument[-1];value.bag;AbstractMapBag;true;getMap;;;Element of Argument[-1];MapKey of ReturnValue;value.bag;AbstractSortedBagDecorator;true;AbstractSortedBagDecorator;;;Element of Argument[0];Element of Argument[-1];value.bag;CollectionBag;true;CollectionBag;;;Element of Argument[0];Element of Argument[-1];value.bag;CollectionBag;true;collectionBag;;;Element of Argument[0];Element of ReturnValue;value.bag;CollectionSortedBag;true;CollectionSortedBag;;;Element of Argument[0];Element of Argument[-1];value.bag;CollectionSortedBag;true;collectionSortedBag;;;Element of Argument[0];Element of ReturnValue;value.bag;HashBag;true;HashBag;;;Element of Argument[0];Element of Argument[-1];value.bag;PredicatedBag;true;predicatedBag;;;Element of Argument[0];Element of ReturnValue;value.bag;PredicatedSortedBag;true;predicatedSortedBag;;;Element of Argument[0];Element of ReturnValue;value.bag;SynchronizedBag;true;synchronizedBag;;;Element of Argument[0];Element of ReturnValue;value.bag;SynchronizedSortedBag;true;synchronizedSortedBag;;;Element of Argument[0];Element of ReturnValue;value.bag;TransformedBag;true;transformedBag;;;Element of Argument[0];Element of ReturnValue;value.bag;TransformedSortedBag;true;transformedSortedBag;;;Element of Argument[0];Element of ReturnValue;value.bag;TreeBag;true;TreeBag;(Collection);;Element of Argument[0];Element of Argument[-1];value.bag;UnmodifiableBag;true;unmodifiableBag;;;Element of Argument[0];Element of ReturnValue;value.bag;UnmodifiableSortedBag;true;unmodifiableSortedBag;;;Element of Argument[0];Element of ReturnValue;value.list;AbstractLinkedList;true;AbstractLinkedList;;;Element of Argument[0];Element of Argument[-1];value.list;AbstractLinkedList;true;addFirst;;;Argument[0];Element of Argument[-1];value.list;AbstractLinkedList;true;addLast;;;Argument[0];Element of Argument[-1];value.list;AbstractLinkedList;true;getFirst;;;Element of Argument[-1];ReturnValue;value.list;AbstractLinkedList;true;getLast;;;Element of Argument[-1];ReturnValue;value.list;AbstractLinkedList;true;removeFirst;;;Element of Argument[-1];ReturnValue;value.list;AbstractLinkedList;true;removeLast;;;Element of Argument[-1];ReturnValue;value.list;AbstractListDecorator;true;AbstractListDecorator;;;Element of Argument[0];Element of Argument[-1];value.list;AbstractSerializableListDecorator;true;AbstractSerializableListDecorator;;;Element of Argument[0];Element of Argument[-1];value.list;CursorableLinkedList;true;CursorableLinkedList;;;Element of Argument[0];Element of Argument[-1];value.list;CursorableLinkedList;true;cursor;;;Element of Argument[-1];Element of ReturnValue;value.list;FixedSizeList;true;fixedSizeList;;;Element of Argument[0];Element of ReturnValue;value.list;GrowthList;true;growthList;;;Element of Argument[0];Element of ReturnValue;value.list;LazyList;true;lazyList;;;Element of Argument[0];Element of ReturnValue;value.list;NodeCachingLinkedList;true;NodeCachingLinkedList;(Collection);;Element of Argument[0];Element of Argument[-1];value.list;PredicatedList;true;predicatedList;;;Element of Argument[0];Element of ReturnValue;value.list;SetUniqueList;true;asSet;;;Element of Argument[-1];Element of ReturnValue;value.list;SetUniqueList;true;setUniqueList;;;Element of Argument[0];Element of ReturnValue;value.list;TransformedList;true;transformingList;;;Element of Argument[0];Element of ReturnValue;value.list;TreeList;true;TreeList;;;Element of Argument[0];Element of Argument[-1];value.list;UnmodifiableList;true;UnmodifiableList;;;Element of Argument[0];Element of Argument[-1];value.list;UnmodifiableList;true;unmodifiableList;;;Element of Argument[0];Element of ReturnValue;value;SetUtils$SetView;true;copyInto;;;Element of Argument[-1];Element of Argument[0];value;SetUtils$SetView;true;createIterator;;;Element of Argument[-1];Element of ReturnValue;value;SetUtils$SetView;true;toSet;;;Element of Argument[-1];Element of ReturnValue;value;SetUtils;true;difference;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;disjunction;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;disjunction;;;Element of Argument[1];Element of ReturnValue;value;SetUtils;true;emptyIfNull;;;Argument[0];ReturnValue;value;SetUtils;true;hashSet;;;ArrayElement of Argument[0];Element of ReturnValue;value;SetUtils;true;intersection;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;intersection;;;Element of Argument[1];Element of ReturnValue;value;SetUtils;true;orderedSet;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;predicatedNavigableSet;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;predicatedSet;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;predicatedSortedSet;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;synchronizedSet;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;synchronizedSortedSet;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;transformedNavigableSet;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;transformedSet;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;transformedSortedSet;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;union;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;union;;;Element of Argument[1];Element of ReturnValue;value;SetUtils;true;unmodifiableNavigableSet;;;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;unmodifiableSet;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;SetUtils;true;unmodifiableSet;(Set);;Element of Argument[0];Element of ReturnValue;value;SetUtils;true;unmodifiableSortedSet;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;defaultIfNull;;;Argument[0];ReturnValue;value;ListUtils;true;defaultIfNull;;;Argument[1];ReturnValue;value;ListUtils;true;emptyIfNull;;;Argument[0];ReturnValue;value;ListUtils;true;fixedSizeList;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;intersection;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;intersection;;;Element of Argument[1];Element of ReturnValue;value;ListUtils;true;lazyList;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;longestCommonSubsequence;(CharSequence,CharSequence);;Argument[0];ReturnValue;taint;ListUtils;true;longestCommonSubsequence;(CharSequence,CharSequence);;Argument[1];ReturnValue;taint;ListUtils;true;longestCommonSubsequence;(List,List);;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;longestCommonSubsequence;(List,List);;Element of Argument[1];Element of ReturnValue;value;ListUtils;true;longestCommonSubsequence;(List,List,Equator);;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;longestCommonSubsequence;(List,List,Equator);;Element of Argument[1];Element of ReturnValue;value;ListUtils;true;partition;;;Element of Argument[0];Element of Element of ReturnValue;value;ListUtils;true;predicatedList;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;removeAll;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;retainAll;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;select;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;selectRejected;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;subtract;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;sum;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;sum;;;Element of Argument[1];Element of ReturnValue;value;ListUtils;true;synchronizedList;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;transformedList;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;union;;;Element of Argument[0];Element of ReturnValue;value;ListUtils;true;union;;;Element of Argument[1];Element of ReturnValue;value;ListUtils;true;unmodifiableList;;;Element of Argument[0];Element of ReturnValue;value.set;AbstractNavigableSetDecorator;true;AbstractNavigableSetDecorator;;;Element of Argument[0];Element of Argument[-1];value.set;AbstractSetDecorator;true;AbstractSetDecorator;;;Element of Argument[0];Element of Argument[-1];value.set;AbstractSortedSetDecorator;true;AbstractSortedSetDecorator;;;Element of Argument[0];Element of Argument[-1];value.set;CompositeSet$SetMutator;true;add;;;Argument[2];Element of Argument[0];value.set;CompositeSet$SetMutator;true;add;;;Argument[2];Element of Element of Argument[1];value.set;CompositeSet$SetMutator;true;addAll;;;Element of Argument[2];Element of Argument[0];value.set;CompositeSet$SetMutator;true;addAll;;;Element of Argument[2];Element of Element of Argument[1];value.set;CompositeSet;true;CompositeSet;(Set);;Element of Argument[0];Element of Argument[-1];value.set;CompositeSet;true;CompositeSet;(Set[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];value.set;CompositeSet;true;addComposited;(Set);;Element of Argument[0];Element of Argument[-1];value.set;CompositeSet;true;addComposited;(Set,Set);;Element of Argument[0];Element of Argument[-1];value.set;CompositeSet;true;addComposited;(Set,Set);;Element of Argument[1];Element of Argument[-1];value.set;CompositeSet;true;addComposited;(Set[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];value.set;CompositeSet;true;getSets;;;Element of Argument[-1];Element of Element of ReturnValue;value.set;CompositeSet;true;toSet;;;Element of Argument[-1];Element of ReturnValue;value.set;ListOrderedSet;true;add;;;Argument[1];Element of Argument[-1];value.set;ListOrderedSet;true;addAll;;;Element of Argument[1];Element of Argument[-1];value.set;ListOrderedSet;true;asList;;;Element of Argument[-1];Element of ReturnValue;value.set;ListOrderedSet;true;get;;;Element of Argument[-1];ReturnValue;value.set;ListOrderedSet;true;listOrderedSet;(List);;Element of Argument[0];Element of ReturnValue;value.set;ListOrderedSet;true;listOrderedSet;(Set);;Element of Argument[0];Element of ReturnValue;value.set;MapBackedSet;true;mapBackedSet;;;MapKey of Argument[0];Element of ReturnValue;value.set;PredicatedNavigableSet;true;predicatedNavigableSet;;;Element of Argument[0];Element of ReturnValue;value.set;PredicatedSet;true;predicatedSet;;;Element of Argument[0];Element of ReturnValue;value.set;PredicatedSortedSet;true;predicatedSortedSet;;;Element of Argument[0];Element of ReturnValue;value.set;TransformedNavigableSet;true;transformingNavigableSet;;;Element of Argument[0];Element of ReturnValue;value.set;TransformedSet;true;transformingSet;;;Element of Argument[0];Element of ReturnValue;value.set;TransformedSortedSet;true;transformingSortedSet;;;Element of Argument[0];Element of ReturnValue;value.set;UnmodifiableNavigableSet;true;unmodifiableNavigableSet;;;Element of Argument[0];Element of ReturnValue;value.set;UnmodifiableSet;true;unmodifiableSet;;;Element of Argument[0];Element of ReturnValue;value.set;UnmodifiableSortedSet;true;unmodifiableSortedSet;;;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;boundedIterable;;;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;chainedIterable;(Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;chainedIterable;(Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;value;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;value;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable);;Element of Argument[2];Element of ReturnValue;value;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;value;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[2];Element of ReturnValue;value;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[3];Element of ReturnValue;value;IterableUtils;true;chainedIterable;(Iterable[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;value;IterableUtils;true;collatedIterable;(Comparator,Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;value;IterableUtils;true;collatedIterable;(Comparator,Iterable,Iterable);;Element of Argument[2];Element of ReturnValue;value;IterableUtils;true;collatedIterable;(Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;collatedIterable;(Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;value;IterableUtils;true;emptyIfNull;;;Argument[0];ReturnValue;value;IterableUtils;true;filteredIterable;;;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;find;;;Element of Argument[0];ReturnValue;value;IterableUtils;true;first;;;Element of Argument[0];ReturnValue;value;IterableUtils;true;forEachButLast;;;Element of Argument[0];ReturnValue;value;IterableUtils;true;get;;;Element of Argument[0];ReturnValue;value;IterableUtils;true;loopingIterable;;;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;partition;;;Element of Argument[0];Element of Element of ReturnValue;value;IterableUtils;true;reversedIterable;;;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;skippingIterable;;;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;toList;;;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;toString;;;Argument[2];ReturnValue;taint;IterableUtils;true;toString;;;Argument[3];ReturnValue;taint;IterableUtils;true;toString;;;Argument[4];ReturnValue;taint;IterableUtils;true;uniqueIterable;;;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;unmodifiableIterable;;;Element of Argument[0];Element of ReturnValue;value;IterableUtils;true;zippingIterable;(Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;value;IterableUtils;true;zippingIterable;(Iterable,Iterable[]);;Element of ArrayElement of Argument[1];Element of ReturnValue;value;IterableUtils;true;zippingIterable;;;Element of Argument[0];Element of ReturnValue;value.bidimap;AbstractBidiMapDecorator;true;AbstractBidiMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];value.bidimap;AbstractBidiMapDecorator;true;AbstractBidiMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];value.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapKey of Argument[0];MapKey of Argument[-1];value.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapKey of Argument[1];MapValue of Argument[-1];value.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapKey of Argument[2];MapValue of Argument[-1];value.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapValue of Argument[0];MapValue of Argument[-1];value.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapValue of Argument[1];MapKey of Argument[-1];value.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapValue of Argument[2];MapKey of Argument[-1];value.bidimap;AbstractOrderedBidiMapDecorator;true;AbstractOrderedBidiMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];value.bidimap;AbstractOrderedBidiMapDecorator;true;AbstractOrderedBidiMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];value.bidimap;AbstractSortedBidiMapDecorator;true;AbstractSortedBidiMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];value.bidimap;AbstractSortedBidiMapDecorator;true;AbstractSortedBidiMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];value.bidimap;DualHashBidiMap;true;DualHashBidiMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.bidimap;DualHashBidiMap;true;DualHashBidiMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.bidimap;DualLinkedHashBidiMap;true;DualLinkedHashBidiMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.bidimap;DualLinkedHashBidiMap;true;DualLinkedHashBidiMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.bidimap;DualTreeBidiMap;true;DualTreeBidiMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.bidimap;DualTreeBidiMap;true;DualTreeBidiMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.bidimap;DualTreeBidiMap;true;inverseOrderedBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;value.bidimap;DualTreeBidiMap;true;inverseOrderedBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;value.bidimap;DualTreeBidiMap;true;inverseSortedBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;value.bidimap;DualTreeBidiMap;true;inverseSortedBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;value.bidimap;TreeBidiMap;true;TreeBidiMap;;;MapKey of Argument[0];MapKey of Argument[-1];value.bidimap;TreeBidiMap;true;TreeBidiMap;;;MapValue of Argument[0];MapValue of Argument[-1];value.bidimap;UnmodifiableBidiMap;true;unmodifiableBidiMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.bidimap;UnmodifiableBidiMap;true;unmodifiableBidiMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.bidimap;UnmodifiableOrderedBidiMap;true;inverseOrderedBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;value.bidimap;UnmodifiableOrderedBidiMap;true;inverseOrderedBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;value.bidimap;UnmodifiableOrderedBidiMap;true;unmodifiableOrderedBidiMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.bidimap;UnmodifiableOrderedBidiMap;true;unmodifiableOrderedBidiMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.bidimap;UnmodifiableSortedBidiMap;true;unmodifiableSortedBidiMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.bidimap;UnmodifiableSortedBidiMap;true;unmodifiableSortedBidiMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;CollectionUtils;true;addAll;(Collection,Enumeration);;Element of Argument[1];Element of Argument[0];value;CollectionUtils;true;addAll;(Collection,Iterable);;Element of Argument[1];Element of Argument[0];value;CollectionUtils;true;addAll;(Collection,Iterator);;Element of Argument[1];Element of Argument[0];value;CollectionUtils;true;addAll;(Collection,Object[]);;ArrayElement of Argument[1];Element of Argument[0];value;CollectionUtils;true;addIgnoreNull;;;Argument[1];Element of Argument[0];value;CollectionUtils;true;collate;;;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;collate;;;Element of Argument[1];Element of ReturnValue;value;CollectionUtils;true;disjunction;;;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;disjunction;;;Element of Argument[1];Element of ReturnValue;value;CollectionUtils;true;emptyIfNull;;;Argument[0];ReturnValue;value;CollectionUtils;true;extractSingleton;;;Element of Argument[0];ReturnValue;value;CollectionUtils;true;find;;;Element of Argument[0];ReturnValue;value;CollectionUtils;true;get;(Iterable,int);;Element of Argument[0];ReturnValue;value;CollectionUtils;true;get;(Iterator,int);;Element of Argument[0];ReturnValue;value;CollectionUtils;true;get;(Map,int);;MapKey of Argument[0];MapKey of ReturnValue;value;CollectionUtils;true;get;(Map,int);;MapValue of Argument[0];MapValue of ReturnValue;value;CollectionUtils;true;get;(Object,int);;ArrayElement of Argument[0];ReturnValue;value;CollectionUtils;true;get;(Object,int);;Element of Argument[0];ReturnValue;value;CollectionUtils;true;get;(Object,int);;MapKey of Argument[0];MapKey of ReturnValue;value;CollectionUtils;true;get;(Object,int);;MapValue of Argument[0];MapValue of ReturnValue;value;CollectionUtils;true;getCardinalityMap;;;Element of Argument[0];MapKey of ReturnValue;value;CollectionUtils;true;intersection;;;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;intersection;;;Element of Argument[1];Element of ReturnValue;value;CollectionUtils;true;permutations;;;Element of Argument[0];Element of Element of ReturnValue;value;CollectionUtils;true;predicatedCollection;;;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;removeAll;;;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;retainAll;;;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;select;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;select;(Iterable,Predicate,Collection);;Argument[2];ReturnValue;value;CollectionUtils;true;select;(Iterable,Predicate,Collection);;Element of Argument[0];Element of Argument[2];value;CollectionUtils;true;select;(Iterable,Predicate,Collection,Collection);;Argument[2];ReturnValue;value;CollectionUtils;true;select;(Iterable,Predicate,Collection,Collection);;Element of Argument[0];Element of Argument[2];value;CollectionUtils;true;select;(Iterable,Predicate,Collection,Collection);;Element of Argument[0];Element of Argument[3];value;CollectionUtils;true;selectRejected;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;selectRejected;(Iterable,Predicate,Collection);;Argument[2];ReturnValue;value;CollectionUtils;true;selectRejected;(Iterable,Predicate,Collection);;Element of Argument[0];Element of Argument[2];value;CollectionUtils;true;subtract;;;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;synchronizedCollection;;;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;transformingCollection;;;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;union;;;Element of Argument[0];Element of ReturnValue;value;CollectionUtils;true;union;;;Element of Argument[1];Element of ReturnValue;value;CollectionUtils;true;unmodifiableCollection;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;arrayIterator;;;ArrayElement of Argument[0];Element of ReturnValue;value;IteratorUtils;true;arrayListIterator;;;ArrayElement of Argument[0];Element of ReturnValue;value;IteratorUtils;true;asEnumeration;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;asIterable;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;asIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;asMultipleUseIterable;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;boundedIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;chainedIterator;(Collection);;Element of Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;chainedIterator;(Iterator,Iterator);;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;chainedIterator;(Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;value;IteratorUtils;true;chainedIterator;(Iterator[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;value;IteratorUtils;true;collatedIterator;(Comparator,Collection);;Element of Element of Argument[1];Element of ReturnValue;value;IteratorUtils;true;collatedIterator;(Comparator,Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;value;IteratorUtils;true;collatedIterator;(Comparator,Iterator,Iterator);;Element of Argument[2];Element of ReturnValue;value;IteratorUtils;true;collatedIterator;(Comparator,Iterator[]);;Element of ArrayElement of Argument[1];Element of ReturnValue;value;IteratorUtils;true;filteredIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;filteredListIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;find;;;Element of Argument[0];ReturnValue;value;IteratorUtils;true;first;;;Element of Argument[0];ReturnValue;value;IteratorUtils;true;forEachButLast;;;Element of Argument[0];ReturnValue;value;IteratorUtils;true;get;;;Element of Argument[0];ReturnValue;value;IteratorUtils;true;getIterator;;;Argument[0];Element of ReturnValue;value;IteratorUtils;true;getIterator;;;ArrayElement of Argument[0];Element of ReturnValue;value;IteratorUtils;true;getIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;getIterator;;;MapValue of Argument[0];Element of ReturnValue;value;IteratorUtils;true;loopingIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;loopingListIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;peekingIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;pushbackIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;singletonIterator;;;Argument[0];Element of ReturnValue;value;IteratorUtils;true;singletonListIterator;;;Argument[0];Element of ReturnValue;value;IteratorUtils;true;skippingIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;toArray;;;Element of Argument[0];ArrayElement of ReturnValue;value;IteratorUtils;true;toList;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;toListIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;toString;;;Argument[2];ReturnValue;taint;IteratorUtils;true;toString;;;Argument[3];ReturnValue;taint;IteratorUtils;true;toString;;;Argument[4];ReturnValue;taint;IteratorUtils;true;unmodifiableIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;unmodifiableListIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;unmodifiableMapIterator;;;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;unmodifiableMapIterator;;;MapValue of Argument[0];MapValue of ReturnValue;value;IteratorUtils;true;zippingIterator;(Iterator,Iterator);;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;zippingIterator;(Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;value;IteratorUtils;true;zippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[0];Element of ReturnValue;value;IteratorUtils;true;zippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;value;IteratorUtils;true;zippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[2];Element of ReturnValue;value;IteratorUtils;true;zippingIterator;(Iterator[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;value.collection;AbstractCollectionDecorator;true;AbstractCollectionDecorator;;;Element of Argument[0];Element of Argument[-1];value.collection;AbstractCollectionDecorator;true;decorated;;;Element of Argument[-1];Element of ReturnValue;value.collection;AbstractCollectionDecorator;true;setCollection;;;Element of Argument[0];Element of Argument[-1];value.collection;CompositeCollection$CollectionMutator;true;add;;;Argument[2];Element of Argument[0];value.collection;CompositeCollection$CollectionMutator;true;add;;;Argument[2];Element of Element of Argument[1];value.collection;CompositeCollection$CollectionMutator;true;addAll;;;Element of Argument[2];Element of Argument[0];value.collection;CompositeCollection$CollectionMutator;true;addAll;;;Element of Argument[2];Element of Element of Argument[1];value.collection;CompositeCollection;true;CompositeCollection;(Collection);;Element of Argument[0];Element of Argument[-1];value.collection;CompositeCollection;true;CompositeCollection;(Collection,Collection);;Element of Argument[0];Element of Argument[-1];value.collection;CompositeCollection;true;CompositeCollection;(Collection,Collection);;Element of Argument[1];Element of Argument[-1];value.collection;CompositeCollection;true;CompositeCollection;(Collection[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];value.collection;CompositeCollection;true;addComposited;(Collection);;Element of Argument[0];Element of Argument[-1];value.collection;CompositeCollection;true;addComposited;(Collection,Collection);;Element of Argument[0];Element of Argument[-1];value.collection;CompositeCollection;true;addComposited;(Collection,Collection);;Element of Argument[1];Element of Argument[-1];value.collection;CompositeCollection;true;addComposited;(Collection[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];value.collection;CompositeCollection;true;getCollections;;;Element of Argument[-1];Element of Element of ReturnValue;value.collection;CompositeCollection;true;toCollection;;;Element of Argument[-1];Element of ReturnValue;value.collection;IndexedCollection;true;IndexedCollection;;;Element of Argument[0];Element of Argument[-1];value.collection;IndexedCollection;true;get;;;Element of Argument[-1];ReturnValue;value.collection;IndexedCollection;true;nonUniqueIndexedCollection;;;Element of Argument[0];Element of ReturnValue;value.collection;IndexedCollection;true;uniqueIndexedCollection;;;Element of Argument[0];Element of ReturnValue;value.collection;IndexedCollection;true;values;;;Element of Argument[-1];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;add;;;Argument[0];Element of Argument[-1];value.collection;PredicatedCollection$Builder;true;addAll;;;Element of Argument[0];Element of Argument[-1];value.collection;PredicatedCollection$Builder;true;createPredicatedBag;;;Element of Argument[-1];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;createPredicatedBag;;;Element of Argument[0];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;createPredicatedList;;;Element of Argument[-1];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;createPredicatedList;;;Element of Argument[0];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;createPredicatedMultiSet;;;Element of Argument[-1];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;createPredicatedMultiSet;;;Element of Argument[0];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;createPredicatedQueue;;;Element of Argument[-1];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;createPredicatedQueue;;;Element of Argument[0];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;createPredicatedSet;;;Element of Argument[-1];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;createPredicatedSet;;;Element of Argument[0];Element of ReturnValue;value.collection;PredicatedCollection$Builder;true;rejectedElements;;;Element of Argument[-1];Element of ReturnValue;value.collection;PredicatedCollection;true;predicatedCollection;;;Element of Argument[0];Element of ReturnValue;value.collection;SynchronizedCollection;true;synchronizedCollection;;;Element of Argument[0];Element of ReturnValue;value.collection;TransformedCollection;true;transformingCollection;;;Element of Argument[0];Element of ReturnValue;value.collection;UnmodifiableBoundedCollection;true;unmodifiableBoundedCollection;;;Element of Argument[0];Element of ReturnValue;value.collection;UnmodifiableCollection;true;unmodifiableCollection;;;Element of Argument[0];Element of ReturnValue;value;MapUtils;true;emptyIfNull;;;Argument[0];ReturnValue;value;MapUtils;true;fixedSizeMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;fixedSizeMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;fixedSizeSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;fixedSizeSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;getMap;;;Argument[2];ReturnValue;value;MapUtils;true;getMap;;;MapValue of Argument[0];ReturnValue;value;MapUtils;true;getObject;;;Argument[2];ReturnValue;value;MapUtils;true;getObject;;;MapValue of Argument[0];ReturnValue;value;MapUtils;true;getString;;;Argument[2];ReturnValue;value;MapUtils;true;getString;;;MapValue of Argument[0];ReturnValue;value;MapUtils;true;invertMap;;;MapKey of Argument[0];MapValue of ReturnValue;value;MapUtils;true;invertMap;;;MapValue of Argument[0];MapKey of ReturnValue;value;MapUtils;true;iterableMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;iterableMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;iterableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;iterableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;lazyMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;lazyMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;lazySortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;lazySortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;multiValueMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;orderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;orderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;populateMap;(Map,Iterable,Transformer);;Element of Argument[1];MapValue of Argument[0];value;MapUtils;true;populateMap;(MultiMap,Iterable,Transformer);;Element of Argument[1];Element of MapValue of Argument[0];value;MapUtils;true;predicatedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;predicatedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;predicatedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;predicatedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of Argument[0];value;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of ReturnValue;value;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of Argument[0];value;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of ReturnValue;value;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of Argument[0];value;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of ReturnValue;value;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of Argument[0];value;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of ReturnValue;value;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of Argument[0];value;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of ReturnValue;value;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of Argument[0];value;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of ReturnValue;value;MapUtils;true;safeAddToMap;;;Argument[1];MapKey of Argument[0];value;MapUtils;true;safeAddToMap;;;Argument[2];MapValue of Argument[0];value;MapUtils;true;synchronizedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;synchronizedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;synchronizedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;synchronizedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;toMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;toMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;transformedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;transformedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;transformedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;transformedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;unmodifiableMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;unmodifiableMap;;;MapValue of Argument[0];MapValue of ReturnValue;value;MapUtils;true;unmodifiableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value;MapUtils;true;unmodifiableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[0];MapKey of Argument[-1];value.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[1];MapValue of Argument[-1];value.keyvalue;AbstractKeyValue;true;setKey;;;Argument[0];MapKey of Argument[-1];value.keyvalue;AbstractKeyValue;true;setKey;;;MapKey of Argument[-1];ReturnValue;value.keyvalue;AbstractKeyValue;true;setValue;;;Argument[0];MapValue of Argument[-1];value.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;value.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[0];MapKey of Argument[-1];value.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[1];MapValue of Argument[-1];value.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];value.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];value.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;value.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;value.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];value.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];value.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[0];MapKey of Argument[-1];value.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[1];MapValue of Argument[-1];value.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;value.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;value.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];value.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];value.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];value.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object);;Argument[0];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object);;Argument[1];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object);;Argument[0];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object);;Argument[1];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object);;Argument[2];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[0];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[1];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[2];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[3];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[0];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[1];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[2];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[3];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[4];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object[]);;ArrayElement of Argument[0];Element of Argument[-1];value.keyvalue;MultiKey;true;MultiKey;(Object[],boolean);;ArrayElement of Argument[0];Element of Argument[-1];value.keyvalue;MultiKey;true;getKey;;;Element of Argument[-1];ReturnValue;value.keyvalue;MultiKey;true;getKeys;;;Element of Argument[-1];ArrayElement of ReturnValue;value.keyvalue;TiedMapEntry;true;TiedMapEntry;;;Argument[1];MapKey of Argument[-1];value.keyvalue;TiedMapEntry;true;TiedMapEntry;;;MapValue of Argument[0];MapValue of Argument[-1];value.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];value.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];value.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];value.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];value;ArrayStack;true;peek;;;Element of Argument[-1];ReturnValue;value;ArrayStack;true;pop;;;Element of Argument[-1];ReturnValue;value;ArrayStack;true;push;;;Argument[0];Element of Argument[-1];value;ArrayStack;true;push;;;Argument[0];ReturnValue;value;Bag;true;add;;;Argument[0];Element of Argument[-1];value;Bag;true;uniqueSet;;;Element of Argument[-1];Element of ReturnValue;value;BidiMap;true;getKey;;;MapKey of Argument[-1];ReturnValue;value;BidiMap;true;inverseBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;value;BidiMap;true;inverseBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;value;BidiMap;true;removeValue;;;MapKey of Argument[-1];ReturnValue;value;FluentIterable;true;append;(Iterable);;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;append;(Iterable);;Element of Argument[0];Element of ReturnValue;value;FluentIterable;true;append;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;FluentIterable;true;append;(Object[]);;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;asEnumeration;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;collate;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;collate;;;Element of Argument[0];Element of ReturnValue;value;FluentIterable;true;copyInto;;;Element of Argument[-1];Element of Argument[0];value;FluentIterable;true;eval;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;filter;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;get;;;Element of Argument[-1];ReturnValue;value;FluentIterable;true;limit;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;loop;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;of;(Iterable);;Element of Argument[0];Element of ReturnValue;value;FluentIterable;true;of;(Object);;Argument[0];Element of ReturnValue;value;FluentIterable;true;of;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;FluentIterable;true;reverse;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;skip;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;toArray;;;Element of Argument[-1];ArrayElement of ReturnValue;value;FluentIterable;true;toList;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;unique;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;unmodifiable;;;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;zip;(Iterable);;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;zip;(Iterable);;Element of Argument[0];Element of ReturnValue;value;FluentIterable;true;zip;(Iterable[]);;Element of Argument[-1];Element of ReturnValue;value;FluentIterable;true;zip;(Iterable[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;value;Get;true;entrySet;;;MapKey of Argument[-1];MapKey of Element of ReturnValue;value;Get;true;entrySet;;;MapValue of Argument[-1];MapValue of Element of ReturnValue;value;Get;true;get;;;MapValue of Argument[-1];ReturnValue;value;Get;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value;Get;true;remove;(Object);;MapValue of Argument[-1];ReturnValue;value;Get;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value;IterableGet;true;mapIterator;;;MapKey of Argument[-1];Element of ReturnValue;value;IterableGet;true;mapIterator;;;MapValue of Argument[-1];MapValue of ReturnValue;value;KeyValue;true;getKey;;;MapKey of Argument[-1];ReturnValue;value;KeyValue;true;getValue;;;MapValue of Argument[-1];ReturnValue;value;MapIterator;true;getKey;;;Element of Argument[-1];ReturnValue;value;MapIterator;true;getValue;;;MapValue of Argument[-1];ReturnValue;value;MapIterator;true;setValue;;;Argument[0];MapValue of Argument[-1];value;MapIterator;true;setValue;;;MapValue of Argument[-1];ReturnValue;value;MultiMap;true;get;;;Element of MapValue of Argument[-1];Element of ReturnValue;value;MultiMap;true;put;;;Argument[0];MapKey of Argument[-1];value;MultiMap;true;put;;;Argument[1];Element of MapValue of Argument[-1];value;MultiMap;true;values;;;Element of MapValue of Argument[-1];Element of ReturnValue;value;MultiSet$Entry;true;getElement;;;Element of Argument[-1];ReturnValue;value;MultiSet;true;add;;;Argument[0];Element of Argument[-1];value;MultiSet;true;entrySet;;;Element of Argument[-1];Element of Element of ReturnValue;value;MultiSet;true;uniqueSet;;;Element of Argument[-1];Element of ReturnValue;value;MultiValuedMap;true;asMap;;;Element of MapValue of Argument[-1];Element of MapValue of ReturnValue;value;MultiValuedMap;true;asMap;;;MapKey of Argument[-1];MapKey of ReturnValue;value;MultiValuedMap;true;entries;;;Element of MapValue of Argument[-1];MapValue of Element of ReturnValue;value;MultiValuedMap;true;entries;;;MapKey of Argument[-1];MapKey of Element of ReturnValue;value;MultiValuedMap;true;get;;;Element of MapValue of Argument[-1];Element of ReturnValue;value;MultiValuedMap;true;keySet;;;MapKey of Argument[-1];Element of ReturnValue;value;MultiValuedMap;true;keys;;;MapKey of Argument[-1];Element of ReturnValue;value;MultiValuedMap;true;mapIterator;;;Element of MapValue of Argument[-1];MapValue of ReturnValue;value;MultiValuedMap;true;mapIterator;;;MapKey of Argument[-1];Element of ReturnValue;value;MultiValuedMap;true;put;;;Argument[0];MapKey of Argument[-1];value;MultiValuedMap;true;put;;;Argument[1];Element of MapValue of Argument[-1];value;MultiValuedMap;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value;MultiValuedMap;true;putAll;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];value;MultiValuedMap;true;putAll;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];value;MultiValuedMap;true;putAll;(MultiValuedMap);;MapKey of Argument[0];MapKey of Argument[-1];value;MultiValuedMap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;MultiValuedMap;true;putAll;(Object,Iterable);;Element of Argument[1];Element of MapValue of Argument[-1];value;MultiValuedMap;true;remove;;;Element of MapValue of Argument[-1];Element of ReturnValue;value;MultiValuedMap;true;values;;;Element of MapValue of Argument[-1];Element of ReturnValue;value;OrderedIterator;true;previous;;;Element of Argument[-1];ReturnValue;value;OrderedMap;true;firstKey;;;MapKey of Argument[-1];ReturnValue;value;OrderedMap;true;lastKey;;;MapKey of Argument[-1];ReturnValue;value;OrderedMap;true;nextKey;;;MapKey of Argument[-1];ReturnValue;value;OrderedMap;true;previousKey;;;MapKey of Argument[-1];ReturnValue;value;Put;true;put;;;Argument[0];MapKey of Argument[-1];value;Put;true;put;;;Argument[1];MapValue of Argument[-1];value;Put;true;put;;;MapValue of Argument[-1];ReturnValue;value;Put;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value;Put;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value;SortedBag;true;first;;;Element of Argument[-1];ReturnValue;value;SortedBag;true;last;;;Element of Argument[-1];ReturnValue;value;Trie;true;prefixMap;;;MapKey of Argument[-1];MapKey of ReturnValue;value;Trie;true;prefixMap;;;MapValue of Argument[-1];MapValue of ReturnValue;value.iterators;AbstractIteratorDecorator;true;AbstractIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];value.iterators;AbstractListIteratorDecorator;true;AbstractListIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];value.iterators;AbstractListIteratorDecorator;true;getListIterator;;;Element of Argument[-1];Element of ReturnValue;value.iterators;AbstractMapIteratorDecorator;true;AbstractMapIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];value.iterators;AbstractMapIteratorDecorator;true;AbstractMapIteratorDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];value.iterators;AbstractMapIteratorDecorator;true;getMapIterator;;;Element of Argument[-1];Element of ReturnValue;value.iterators;AbstractMapIteratorDecorator;true;getMapIterator;;;MapValue of Argument[-1];MapValue of ReturnValue;value.iterators;AbstractOrderedMapIteratorDecorator;true;AbstractOrderedMapIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];value.iterators;AbstractOrderedMapIteratorDecorator;true;AbstractOrderedMapIteratorDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];value.iterators;AbstractOrderedMapIteratorDecorator;true;getOrderedMapIterator;;;Element of Argument[-1];Element of ReturnValue;value.iterators;AbstractOrderedMapIteratorDecorator;true;getOrderedMapIterator;;;MapValue of Argument[-1];MapValue of ReturnValue;value.iterators;AbstractUntypedIteratorDecorator;true;AbstractUntypedIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];value.iterators;AbstractUntypedIteratorDecorator;true;getIterator;;;Element of Argument[-1];Element of ReturnValue;value.iterators;ArrayIterator;true;ArrayIterator;;;ArrayElement of Argument[0];Element of Argument[-1];value.iterators;ArrayIterator;true;getArray;;;Element of Argument[-1];ArrayElement of ReturnValue;value.iterators;ArrayListIterator;true;ArrayListIterator;;;ArrayElement of Argument[0];Element of Argument[-1];value.iterators;BoundedIterator;true;BoundedIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Collection);;Element of Element of Argument[1];Element of Argument[-1];value.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];value.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Iterator,Iterator);;Element of Argument[2];Element of Argument[-1];value.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Iterator[]);;Element of ArrayElement of Argument[1];Element of Argument[-1];value.iterators;CollatingIterator;true;addIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;CollatingIterator;true;getIterators;;;Element of Argument[-1];Element of Element of ReturnValue;value.iterators;CollatingIterator;true;setIterator;;;Element of Argument[1];Element of Argument[-1];value.iterators;EnumerationIterator;true;EnumerationIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;EnumerationIterator;true;getEnumeration;;;Element of Argument[-1];Element of ReturnValue;value.iterators;EnumerationIterator;true;setEnumeration;;;Element of Argument[0];Element of Argument[-1];value.iterators;FilterIterator;true;FilterIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;FilterIterator;true;getIterator;;;Element of Argument[-1];Element of ReturnValue;value.iterators;FilterIterator;true;setIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;FilterListIterator;true;FilterListIterator;(ListIterator);;Element of Argument[0];Element of Argument[-1];value.iterators;FilterListIterator;true;FilterListIterator;(ListIterator,Predicate);;Element of Argument[0];Element of Argument[-1];value.iterators;FilterListIterator;true;getListIterator;;;Element of Argument[-1];Element of ReturnValue;value.iterators;FilterListIterator;true;setListIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;IteratorChain;true;IteratorChain;(Collection);;Element of Element of Argument[0];Element of Argument[-1];value.iterators;IteratorChain;true;IteratorChain;(Iterator);;Element of Argument[0];Element of Argument[-1];value.iterators;IteratorChain;true;IteratorChain;(Iterator,Iterator);;Element of Argument[0];Element of Argument[-1];value.iterators;IteratorChain;true;IteratorChain;(Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];value.iterators;IteratorChain;true;IteratorChain;(Iterator[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];value.iterators;IteratorChain;true;addIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;IteratorEnumeration;true;IteratorEnumeration;;;Element of Argument[0];Element of Argument[-1];value.iterators;IteratorEnumeration;true;getIterator;;;Element of Argument[-1];Element of ReturnValue;value.iterators;IteratorEnumeration;true;setIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;IteratorIterable;true;IteratorIterable;;;Element of Argument[0];Element of Argument[-1];value.iterators;ListIteratorWrapper;true;ListIteratorWrapper;;;Element of Argument[0];Element of Argument[-1];value.iterators;LoopingIterator;true;LoopingIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;LoopingListIterator;true;LoopingListIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;ObjectArrayIterator;true;ObjectArrayIterator;;;ArrayElement of Argument[0];Element of Argument[-1];value.iterators;ObjectArrayIterator;true;getArray;;;Element of Argument[-1];ArrayElement of ReturnValue;value.iterators;ObjectArrayListIterator;true;ObjectArrayListIterator;;;ArrayElement of Argument[0];Element of Argument[-1];value.iterators;PeekingIterator;true;PeekingIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;PeekingIterator;true;element;;;Element of Argument[-1];ReturnValue;value.iterators;PeekingIterator;true;peek;;;Element of Argument[-1];ReturnValue;value.iterators;PeekingIterator;true;peekingIterator;;;Element of Argument[0];Element of ReturnValue;value.iterators;PermutationIterator;true;PermutationIterator;;;Element of Argument[0];Element of Element of Argument[-1];value.iterators;PushbackIterator;true;PushbackIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;PushbackIterator;true;pushback;;;Argument[0];Element of Argument[-1];value.iterators;PushbackIterator;true;pushbackIterator;;;Element of Argument[0];Element of ReturnValue;value.iterators;ReverseListIterator;true;ReverseListIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;SingletonIterator;true;SingletonIterator;;;Argument[0];Element of Argument[-1];value.iterators;SingletonListIterator;true;SingletonListIterator;;;Argument[0];Element of Argument[-1];value.iterators;SkippingIterator;true;SkippingIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;UniqueFilterIterator;true;UniqueFilterIterator;;;Element of Argument[0];Element of Argument[-1];value.iterators;UnmodifiableIterator;true;unmodifiableIterator;;;Element of Argument[0];Element of ReturnValue;value.iterators;UnmodifiableListIterator;true;umodifiableListIterator;;;Element of Argument[0];Element of ReturnValue;value.iterators;UnmodifiableMapIterator;true;unmodifiableMapIterator;;;Element of Argument[0];Element of ReturnValue;value.iterators;UnmodifiableMapIterator;true;unmodifiableMapIterator;;;MapValue of Argument[0];MapValue of ReturnValue;value.iterators;UnmodifiableOrderedMapIterator;true;unmodifiableOrderedMapIterator;;;Element of Argument[0];Element of ReturnValue;value.iterators;UnmodifiableOrderedMapIterator;true;unmodifiableOrderedMapIterator;;;MapValue of Argument[0];MapValue of ReturnValue;value.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator);;Element of Argument[0];Element of Argument[-1];value.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];value.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[0];Element of Argument[-1];value.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];value.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[2];Element of Argument[-1];value.iterators;ZippingIterator;true;ZippingIterator;(Iterator[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];value.map;AbstractHashedMap;true;AbstractHashedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.map;AbstractHashedMap;true;AbstractHashedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.map;AbstractLinkedMap;true;AbstractLinkedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.map;AbstractLinkedMap;true;AbstractLinkedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.map;AbstractMapDecorator;true;AbstractMapDecorator;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.map;AbstractMapDecorator;true;AbstractMapDecorator;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.map;AbstractMapDecorator;true;decorated;;;MapKey of Argument[-1];MapKey of ReturnValue;value.map;AbstractMapDecorator;true;decorated;;;MapValue of Argument[-1];MapValue of ReturnValue;value.map;AbstractOrderedMapDecorator;true;AbstractOrderedMapDecorator;(OrderedMap);;MapKey of Argument[0];MapKey of Argument[-1];value.map;AbstractOrderedMapDecorator;true;AbstractOrderedMapDecorator;(OrderedMap);;MapValue of Argument[0];MapValue of Argument[-1];value.map;AbstractSortedMapDecorator;true;AbstractSortedMapDecorator;(SortedMap);;MapKey of Argument[0];MapKey of Argument[-1];value.map;AbstractSortedMapDecorator;true;AbstractSortedMapDecorator;(SortedMap);;MapValue of Argument[0];MapValue of Argument[-1];value.map;CaseInsensitiveMap;true;CaseInsensitiveMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.map;CaseInsensitiveMap;true;CaseInsensitiveMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map,Map);;MapKey of Argument[0];MapKey of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map,Map);;MapKey of Argument[1];MapKey of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map,Map);;MapValue of Argument[0];MapValue of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map,Map);;MapValue of Argument[1];MapValue of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapKey of Argument[0];MapKey of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapKey of Argument[1];MapKey of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapValue of Argument[0];MapValue of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapValue of Argument[1];MapValue of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map[]);;MapKey of ArrayElement of Argument[0];MapKey of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map[]);;MapValue of ArrayElement of Argument[0];MapValue of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map[],MapMutator);;MapKey of ArrayElement of Argument[0];MapKey of Argument[-1];value.map;CompositeMap;true;CompositeMap;(Map[],MapMutator);;MapValue of ArrayElement of Argument[0];MapValue of Argument[-1];value.map;CompositeMap;true;addComposited;;;MapKey of Argument[0];MapKey of Argument[-1];value.map;CompositeMap;true;addComposited;;;MapValue of Argument[0];MapValue of Argument[-1];value.map;CompositeMap;true;removeComposited;;;Argument[0];ReturnValue;value.map;CompositeMap;true;removeComposited;;;MapKey of Argument[-1];MapKey of ReturnValue;value.map;CompositeMap;true;removeComposited;;;MapValue of Argument[-1];MapValue of ReturnValue;value.map;DefaultedMap;true;DefaultedMap;(Object);;Argument[0];MapValue of Argument[-1];value.map;DefaultedMap;true;defaultedMap;(Map,Object);;Argument[1];MapValue of ReturnValue;value.map;DefaultedMap;true;defaultedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;DefaultedMap;true;defaultedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;EntrySetToMapIteratorAdapter;true;EntrySetToMapIteratorAdapter;;;MapKey of Element of Argument[0];Element of Argument[-1];value.map;EntrySetToMapIteratorAdapter;true;EntrySetToMapIteratorAdapter;;;MapValue of Element of Argument[0];MapValue of Argument[-1];value.map;FixedSizeMap;true;fixedSizeMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;FixedSizeMap;true;fixedSizeMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;FixedSizeSortedMap;true;fixedSizeSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;FixedSizeSortedMap;true;fixedSizeSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;Flat3Map;true;Flat3Map;;;MapKey of Argument[0];MapKey of Argument[-1];value.map;Flat3Map;true;Flat3Map;;;MapValue of Argument[0];MapValue of Argument[-1];value.map;HashedMap;true;HashedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.map;HashedMap;true;HashedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.map;LRUMap;true;LRUMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.map;LRUMap;true;LRUMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.map;LRUMap;true;LRUMap;(Map,boolean);;MapKey of Argument[0];MapKey of Argument[-1];value.map;LRUMap;true;LRUMap;(Map,boolean);;MapValue of Argument[0];MapValue of Argument[-1];value.map;LRUMap;true;get;(Object,boolean);;MapValue of Argument[0];ReturnValue;value.map;LazyMap;true;lazyMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;LazyMap;true;lazyMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;LazySortedMap;true;lazySortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;LazySortedMap;true;lazySortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;LinkedMap;true;LinkedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.map;LinkedMap;true;LinkedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.map;LinkedMap;true;asList;;;MapKey of Argument[-1];Element of ReturnValue;value.map;LinkedMap;true;get;(int);;MapKey of Argument[-1];ReturnValue;value.map;LinkedMap;true;getValue;(int);;MapValue of Argument[-1];ReturnValue;value.map;LinkedMap;true;remove;(int);;MapValue of Argument[-1];ReturnValue;value.map;ListOrderedMap;true;asList;;;MapKey of Argument[-1];Element of ReturnValue;value.map;ListOrderedMap;true;get;(int);;MapKey of Argument[-1];ReturnValue;value.map;ListOrderedMap;true;getValue;(int);;MapValue of Argument[-1];ReturnValue;value.map;ListOrderedMap;true;keyList;;;MapKey of Argument[-1];Element of ReturnValue;value.map;ListOrderedMap;true;listOrderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;ListOrderedMap;true;listOrderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;ListOrderedMap;true;put;;;Argument[1];MapKey of Argument[-1];value.map;ListOrderedMap;true;put;;;Argument[2];MapValue of Argument[-1];value.map;ListOrderedMap;true;putAll;;;MapKey of Argument[1];MapKey of Argument[-1];value.map;ListOrderedMap;true;putAll;;;MapValue of Argument[1];MapValue of Argument[-1];value.map;ListOrderedMap;true;remove;(int);;MapValue of Argument[-1];ReturnValue;value.map;ListOrderedMap;true;setValue;;;Argument[1];MapValue of Argument[-1];value.map;ListOrderedMap;true;valueList;;;MapValue of Argument[-1];Element of ReturnValue;value.map;MultiKeyMap;true;get;;;MapValue of Argument[-1];ReturnValue;value.map;MultiKeyMap;true;put;(Object,Object,Object);;Argument[0..1];Element of MapKey of Argument[-1];value.map;MultiKeyMap;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value.map;MultiKeyMap;true;put;(Object,Object,Object,Object);;Argument[0..2];Element of MapKey of Argument[-1];value.map;MultiKeyMap;true;put;(Object,Object,Object,Object);;Argument[3];MapValue of Argument[-1];value.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object);;Argument[0..3];Element of MapKey of Argument[-1];value.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object);;Argument[4];MapValue of Argument[-1];value.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object,Object);;Argument[0..4];Element of MapKey of Argument[-1];value.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object,Object);;Argument[5];MapValue of Argument[-1];value.map;MultiKeyMap;true;put;;;MapValue of Argument[-1];ReturnValue;value.map;MultiKeyMap;true;removeMultiKey;;;MapValue of Argument[-1];ReturnValue;value.map;MultiValueMap;true;getCollection;;;Element of MapValue of Argument[-1];Element of ReturnValue;value.map;MultiValueMap;true;iterator;();;Element of MapValue of Argument[-1];MapValue of Element of ReturnValue;value.map;MultiValueMap;true;iterator;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value.map;MultiValueMap;true;iterator;(Object);;Element of MapValue of Argument[-1];Element of ReturnValue;value.map;MultiValueMap;true;multiValueMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;value.map;MultiValueMap;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;MultiValueMap;true;putAll;(Map);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];value.map;MultiValueMap;true;putAll;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];value.map;MultiValueMap;true;putAll;(Object,Collection);;Argument[0];MapKey of Argument[-1];value.map;MultiValueMap;true;putAll;(Object,Collection);;Element of Argument[1];Element of MapValue of Argument[-1];value.map;MultiValueMap;true;values;;;Element of MapValue of Argument[-1];Element of ReturnValue;value.map;PassiveExpiringMap;true;PassiveExpiringMap;(ExpirationPolicy,Map);;MapKey of Argument[1];MapKey of Argument[-1];value.map;PassiveExpiringMap;true;PassiveExpiringMap;(ExpirationPolicy,Map);;MapValue of Argument[1];MapValue of Argument[-1];value.map;PassiveExpiringMap;true;PassiveExpiringMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.map;PassiveExpiringMap;true;PassiveExpiringMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,Map);;MapKey of Argument[1];MapKey of Argument[-1];value.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,Map);;MapValue of Argument[1];MapValue of Argument[-1];value.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,TimeUnit,Map);;MapKey of Argument[2];MapKey of Argument[-1];value.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,TimeUnit,Map);;MapValue of Argument[2];MapValue of Argument[-1];value.map;PredicatedMap;true;predicatedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;PredicatedMap;true;predicatedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;PredicatedSortedMap;true;predicatedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;PredicatedSortedMap;true;predicatedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;SingletonMap;true;SingletonMap;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value.map;SingletonMap;true;SingletonMap;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value.map;SingletonMap;true;SingletonMap;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];value.map;SingletonMap;true;SingletonMap;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];value.map;SingletonMap;true;SingletonMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value.map;SingletonMap;true;SingletonMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value.map;SingletonMap;true;SingletonMap;(Object,Object);;Argument[0];MapKey of Argument[-1];value.map;SingletonMap;true;SingletonMap;(Object,Object);;Argument[1];MapValue of Argument[-1];value.map;SingletonMap;true;setValue;;;Argument[0];MapValue of Argument[-1];value.map;TransformedMap;true;transformingMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;TransformedMap;true;transformingMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;TransformedSortedMap;true;transformingSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;TransformedSortedMap;true;transformingSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;UnmodifiableEntrySet;true;unmodifiableEntrySet;;;MapKey of Element of Argument[0];MapKey of Element of ReturnValue;value.map;UnmodifiableEntrySet;true;unmodifiableEntrySet;;;MapValue of Element of Argument[0];MapValue of Element of ReturnValue;value.map;UnmodifiableMap;true;unmodifiableMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;UnmodifiableMap;true;unmodifiableMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;UnmodifiableOrderedMap;true;unmodifiableOrderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;UnmodifiableOrderedMap;true;unmodifiableOrderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;value.map;UnmodifiableSortedMap;true;unmodifiableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;value.map;UnmodifiableSortedMap;true;unmodifiableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueallowcacheControlcontentLocationcookieencodingentityexpireslanguagelinklinkstagvariantvariantsratpack.http;Headers;true;asMultiValueMap;;;Argument[-1];ReturnValue;taintratpack.http;Headers;true;get;;;Argument[-1];ReturnValue;taintratpack.http;Headers;true;getAll;;;Argument[-1];ReturnValue;taintratpack.http;Headers;true;getNames;;;Argument[-1];ReturnValue;taintratpack.http;TypedData;true;getBuffer;;;Argument[-1];ReturnValue;taintratpack.http;TypedData;true;getBytes;;;Argument[-1];ReturnValue;taintratpack.http;TypedData;true;getContentType;;;Argument[-1];ReturnValue;taintratpack.http;TypedData;true;getInputStream;;;Argument[-1];ReturnValue;taintratpack.http;TypedData;true;getText;;;Argument[-1];ReturnValue;taintratpack.http;TypedData;true;writeTo;;;Argument[-1];Argument[0];taintratpack.core.http;Headers;true;asMultiValueMap;;;Argument[-1];ReturnValue;taintratpack.core.http;Headers;true;get;;;Argument[-1];ReturnValue;taintratpack.core.http;Headers;true;getAll;;;Argument[-1];ReturnValue;taintratpack.core.http;Headers;true;getNames;;;Argument[-1];ReturnValue;taintratpack.core.http;TypedData;true;getBuffer;;;Argument[-1];ReturnValue;taintratpack.core.http;TypedData;true;getBytes;;;Argument[-1];ReturnValue;taintratpack.core.http;TypedData;true;getContentType;;;Argument[-1];ReturnValue;taintratpack.core.http;TypedData;true;getInputStream;;;Argument[-1];ReturnValue;taintratpack.core.http;TypedData;true;getText;;;Argument[-1];ReturnValue;taintratpack.core.http;TypedData;true;writeTo;;;Argument[-1];Argument[0];taintratpack.form;Form;true;file;;;Argument[-1];ReturnValue;taintratpack.form;Form;true;files;;;Argument[-1];ReturnValue;taintjava.util;Objects;false;toString;;;Argument[1];ReturnValue;valuejavax.ws.rs.core;Form;true;asMap;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Form;true;param;;;Argument[-1];ReturnValue;valueratpack.core.form;Form;true;file;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Response;false;ok;;;Argument[0];ReturnValue;taintratpack.core.form;Form;true;files;;;Argument[-1];ReturnValue;taintflexjson;JSONDeserializer;true;use;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Form;true;asMap;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Form;true;param;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response;false;ok;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;Form;false;Form;;;Argument[0..1];Argument[-1];taintjavax.ws.rs.core;Form;true;param;;;Argument[0..1];Argument[-1];taintjavax.ws.rs.core;Cookie;false;valueOf;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;Cookie;true;getName;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Cookie;true;getPath;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Form;false;Form;;;Argument[0..1];Argument[-1];taintjakarta.ws.rs.core;Form;true;param;;;Argument[0..1];Argument[-1];taintjava.util;Objects;false;requireNonNull;;;Argument[0];ReturnValue;valuejavax.ws.rs.core;Cookie;true;getValue;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Cookie;true;toString;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Cookie;false;valueOf;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;getName;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;getPath;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Cookie;true;getDomain;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;getValue;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;toString;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Cookie;false;Cookie;;;Argument[0..4];Argument[-1];taintjavax.ws.rs.core;Cookie;true;getVersion;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;MediaType;false;valueOf;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;MediaType;true;getType;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;NewCookie;false;valueOf;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;Response;false;accepted;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;getDomain;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;NewCookie;true;toCookie;;;Argument[-1];ReturnValue;taintandroid.os;Parcel;false;readParcelableList;;;Argument[0];ReturnValue;valuejakarta.ws.rs.core;Cookie;false;Cookie;;;Argument[0..4];Argument[-1];taintjakarta.ws.rs.core;Cookie;true;getVersion;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;MediaType;false;valueOf;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;MediaType;true;getType;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;NewCookie;false;valueOf;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;Response;false;accepted;;;Argument[0];ReturnValue;taintjava.util;Objects;false;requireNonNullElse;;;Argument[0];ReturnValue;valuejava.util;Objects;false;requireNonNullElse;;;Argument[1];ReturnValue;valuejavax.ws.rs.core;NewCookie;true;getExpiry;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;NewCookie;true;getMaxAge;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;PathSegment;true;getPath;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;NewCookie;true;toCookie;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Form;false;Form;;;MapKey of Argument[0];Argument[-1];taintjavax.ws.rs.core;MediaType;true;getSubtype;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;NewCookie;true;getComment;;;Argument[-1];ReturnValue;taintratpack.form;UploadedFile;true;getFileName;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;NewCookie;true;getExpiry;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;NewCookie;true;getMaxAge;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;PathSegment;true;getPath;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;MediaType;true;withCharset;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Response;false;fromResponse;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;Form;false;Form;;;MapKey of Argument[0];Argument[-1];taintjakarta.ws.rs.core;MediaType;true;getSubtype;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;NewCookie;true;getComment;;;Argument[-1];ReturnValue;taintjava.util;Objects;false;requireNonNullElseGet;;;Argument[0];ReturnValue;valuejavax.ws.rs.core;HttpHeaders;true;getCookies;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;MediaType;true;withCharset;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Response;false;fromResponse;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;GenericEntity;true;getEntity;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getLanguage;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;MediaType;false;MediaType;;;Argument[0..2];Argument[-1];taintjavax.ws.rs.core;MediaType;true;getParameters;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;NewCookie;false;NewCookie;;;Argument[0..9];Argument[-1];taintjakarta.ws.rs.core;HttpHeaders;true;getCookies;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getMediaType;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;GenericEntity;true;getEntity;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getLanguage;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;MediaType;false;MediaType;;;Argument[0..2];Argument[-1];taintjakarta.ws.rs.core;MediaType;true;getParameters;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;NewCookie;false;NewCookie;;;Argument[0..9];Argument[-1];taintratpack.core.form;UploadedFile;true;getFileName;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getMediaType;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getHeaderString;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;GenericEntity;false;GenericEntity;;;Argument[0];Argument[-1];taintjavax.ws.rs.core;HttpHeaders;true;getRequestHeader;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;removeAll;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getHeaderString;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getRequestHeaders;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;replaceAll;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;replaceAll;;;Argument[2];ReturnValue;taintjakarta.ws.rs.core;GenericEntity;false;GenericEntity;;;Argument[0];Argument[-1];taintjakarta.ws.rs.core;HttpHeaders;true;getRequestHeader;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Response$ResponseBuilder;true;build;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Response$ResponseBuilder;true;clone;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrLookup;false;lookup;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;removeFirst;;;Argument[0];ReturnValue;taintorg.apache.commons.collectionsorg.apache.commons.collections.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(MultiValuedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(MultiValuedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.multimap;TransformedMultiValuedMap;true;transformingMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.apache.commons.collections.multimap;TransformedMultiValuedMap;true;transformingMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.multimap;UnmodifiableMultiValuedMap;true;unmodifiableMultiValuedMap;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.apache.commons.collections.multimap;UnmodifiableMultiValuedMap;true;unmodifiableMultiValuedMap;(MultiValuedMap);;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.bag;AbstractBagDecorator;true;AbstractBagDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.bag;AbstractMapBag;true;AbstractMapBag;;;MapKey of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.bag;AbstractMapBag;true;getMap;;;Element of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections.bag;AbstractSortedBagDecorator;true;AbstractSortedBagDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.bag;CollectionBag;true;CollectionBag;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.bag;CollectionBag;true;collectionBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.bag;CollectionSortedBag;true;CollectionSortedBag;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.bag;CollectionSortedBag;true;collectionSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.bag;HashBag;true;HashBag;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.bag;PredicatedBag;true;predicatedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.bag;PredicatedSortedBag;true;predicatedSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.bag;SynchronizedBag;true;synchronizedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.bag;SynchronizedSortedBag;true;synchronizedSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.bag;TransformedBag;true;transformedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.bag;TransformedSortedBag;true;transformedSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.bag;TreeBag;true;TreeBag;(Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.bag;UnmodifiableBag;true;unmodifiableBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.bag;UnmodifiableSortedBag;true;unmodifiableSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.list;AbstractLinkedList;true;AbstractLinkedList;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.list;AbstractLinkedList;true;addFirst;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.list;AbstractLinkedList;true;addLast;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.list;AbstractLinkedList;true;getFirst;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections.list;AbstractLinkedList;true;getLast;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections.list;AbstractLinkedList;true;removeFirst;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections.list;AbstractLinkedList;true;removeLast;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections.list;AbstractListDecorator;true;AbstractListDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.list;AbstractSerializableListDecorator;true;AbstractSerializableListDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.list;CursorableLinkedList;true;CursorableLinkedList;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.list;CursorableLinkedList;true;cursor;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.list;FixedSizeList;true;fixedSizeList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.list;GrowthList;true;growthList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.list;LazyList;true;lazyList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.list;NodeCachingLinkedList;true;NodeCachingLinkedList;(Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.list;PredicatedList;true;predicatedList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.list;SetUniqueList;true;asSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.list;SetUniqueList;true;setUniqueList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.list;TransformedList;true;transformingList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.list;TreeList;true;TreeList;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.list;UnmodifiableList;true;UnmodifiableList;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.list;UnmodifiableList;true;unmodifiableList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils$SetView;true;copyInto;;;Element of Argument[-1];Element of Argument[0];valueorg.apache.commons.collections;SetUtils$SetView;true;createIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils$SetView;true;toSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;difference;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;disjunction;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;disjunction;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections;SetUtils;true;hashSet;;;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;intersection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;intersection;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;orderedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;predicatedNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;predicatedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;predicatedSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;synchronizedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;synchronizedSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;transformedNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;transformedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;transformedSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;union;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;union;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;unmodifiableNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;unmodifiableSet;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;unmodifiableSet;(Set);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SetUtils;true;unmodifiableSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;defaultIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections;ListUtils;true;defaultIfNull;;;Argument[1];ReturnValue;valueorg.apache.commons.collections;ListUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections;ListUtils;true;fixedSizeList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;intersection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;intersection;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;lazyList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;longestCommonSubsequence;(CharSequence,CharSequence);;Argument[0];ReturnValue;taintorg.apache.commons.collections;ListUtils;true;longestCommonSubsequence;(CharSequence,CharSequence);;Argument[1];ReturnValue;taintorg.apache.commons.collections;ListUtils;true;longestCommonSubsequence;(List,List);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;longestCommonSubsequence;(List,List);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;longestCommonSubsequence;(List,List,Equator);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;longestCommonSubsequence;(List,List,Equator);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;partition;;;Element of Argument[0];Element of Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;predicatedList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;removeAll;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;retainAll;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;select;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;selectRejected;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;subtract;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;sum;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;sum;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;synchronizedList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;transformedList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;union;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;union;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;ListUtils;true;unmodifiableList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;AbstractNavigableSetDecorator;true;AbstractNavigableSetDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.set;AbstractSetDecorator;true;AbstractSetDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.set;AbstractSortedSetDecorator;true;AbstractSortedSetDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.set;CompositeSet$SetMutator;true;add;;;Argument[2];Element of Argument[0];valueorg.apache.commons.collections.set;CompositeSet$SetMutator;true;add;;;Argument[2];Element of Element of Argument[1];valueorg.apache.commons.collections.set;CompositeSet$SetMutator;true;addAll;;;Element of Argument[2];Element of Argument[0];valueorg.apache.commons.collections.set;CompositeSet$SetMutator;true;addAll;;;Element of Argument[2];Element of Element of Argument[1];valueorg.apache.commons.collections.set;CompositeSet;true;CompositeSet;(Set);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.set;CompositeSet;true;CompositeSet;(Set[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.set;CompositeSet;true;addComposited;(Set);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.set;CompositeSet;true;addComposited;(Set,Set);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.set;CompositeSet;true;addComposited;(Set,Set);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.set;CompositeSet;true;addComposited;(Set[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.set;CompositeSet;true;getSets;;;Element of Argument[-1];Element of Element of ReturnValue;valueorg.apache.commons.collections.set;CompositeSet;true;toSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.set;ListOrderedSet;true;add;;;Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.set;ListOrderedSet;true;addAll;;;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.set;ListOrderedSet;true;asList;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.set;ListOrderedSet;true;get;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections.set;ListOrderedSet;true;listOrderedSet;(List);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;ListOrderedSet;true;listOrderedSet;(Set);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;MapBackedSet;true;mapBackedSet;;;MapKey of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;PredicatedNavigableSet;true;predicatedNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;PredicatedSet;true;predicatedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;PredicatedSortedSet;true;predicatedSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;TransformedNavigableSet;true;transformingNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;TransformedSet;true;transformingSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;TransformedSortedSet;true;transformingSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;UnmodifiableNavigableSet;true;unmodifiableNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;UnmodifiableSet;true;unmodifiableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.set;UnmodifiableSortedSet;true;unmodifiableSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;boundedIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;chainedIterable;(Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;chainedIterable;(Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable);;Element of Argument[2];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[2];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[3];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;chainedIterable;(Iterable[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;collatedIterable;(Comparator,Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;collatedIterable;(Comparator,Iterable,Iterable);;Element of Argument[2];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;collatedIterable;(Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;collatedIterable;(Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;filteredIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;find;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;first;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;forEachButLast;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;get;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;loopingIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;partition;;;Element of Argument[0];Element of Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;reversedIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;skippingIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;toList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;toString;;;Argument[2];ReturnValue;taintorg.apache.commons.collections;IterableUtils;true;toString;;;Argument[3];ReturnValue;taintorg.apache.commons.collections;IterableUtils;true;toString;;;Argument[4];ReturnValue;taintorg.apache.commons.collections;IterableUtils;true;uniqueIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;unmodifiableIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;zippingIterable;(Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;zippingIterable;(Iterable,Iterable[]);;Element of ArrayElement of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IterableUtils;true;zippingIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.bidimap;AbstractBidiMapDecorator;true;AbstractBidiMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractBidiMapDecorator;true;AbstractBidiMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapKey of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapKey of Argument[2];MapValue of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapValue of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapValue of Argument[2];MapKey of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractOrderedBidiMapDecorator;true;AbstractOrderedBidiMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractOrderedBidiMapDecorator;true;AbstractOrderedBidiMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractSortedBidiMapDecorator;true;AbstractSortedBidiMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.bidimap;AbstractSortedBidiMapDecorator;true;AbstractSortedBidiMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.bidimap;DualHashBidiMap;true;DualHashBidiMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.bidimap;DualHashBidiMap;true;DualHashBidiMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.bidimap;DualLinkedHashBidiMap;true;DualLinkedHashBidiMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.bidimap;DualLinkedHashBidiMap;true;DualLinkedHashBidiMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.bidimap;DualTreeBidiMap;true;DualTreeBidiMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.bidimap;DualTreeBidiMap;true;DualTreeBidiMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.bidimap;DualTreeBidiMap;true;inverseOrderedBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.bidimap;DualTreeBidiMap;true;inverseOrderedBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections.bidimap;DualTreeBidiMap;true;inverseSortedBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.bidimap;DualTreeBidiMap;true;inverseSortedBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections.bidimap;TreeBidiMap;true;TreeBidiMap;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.bidimap;TreeBidiMap;true;TreeBidiMap;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.bidimap;UnmodifiableBidiMap;true;unmodifiableBidiMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.bidimap;UnmodifiableBidiMap;true;unmodifiableBidiMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.bidimap;UnmodifiableOrderedBidiMap;true;inverseOrderedBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.bidimap;UnmodifiableOrderedBidiMap;true;inverseOrderedBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections.bidimap;UnmodifiableOrderedBidiMap;true;unmodifiableOrderedBidiMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.bidimap;UnmodifiableOrderedBidiMap;true;unmodifiableOrderedBidiMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.bidimap;UnmodifiableSortedBidiMap;true;unmodifiableSortedBidiMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.bidimap;UnmodifiableSortedBidiMap;true;unmodifiableSortedBidiMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;addAll;(Collection,Enumeration);;Element of Argument[1];Element of Argument[0];valueorg.apache.commons.collections;CollectionUtils;true;addAll;(Collection,Iterable);;Element of Argument[1];Element of Argument[0];valueorg.apache.commons.collections;CollectionUtils;true;addAll;(Collection,Iterator);;Element of Argument[1];Element of Argument[0];valueorg.apache.commons.collections;CollectionUtils;true;addAll;(Collection,Object[]);;ArrayElement of Argument[1];Element of Argument[0];valueorg.apache.commons.collections;CollectionUtils;true;addIgnoreNull;;;Argument[1];Element of Argument[0];valueorg.apache.commons.collections;CollectionUtils;true;collate;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;collate;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;disjunction;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;disjunction;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;extractSingleton;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;find;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;get;(Iterable,int);;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;get;(Iterator,int);;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;get;(Map,int);;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;get;(Map,int);;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;get;(Object,int);;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;get;(Object,int);;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;get;(Object,int);;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;get;(Object,int);;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;getCardinalityMap;;;Element of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;intersection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;intersection;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;permutations;;;Element of Argument[0];Element of Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;predicatedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;removeAll;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;retainAll;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;select;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;select;(Iterable,Predicate,Collection);;Argument[2];ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;select;(Iterable,Predicate,Collection);;Element of Argument[0];Element of Argument[2];valueorg.apache.commons.collections;CollectionUtils;true;select;(Iterable,Predicate,Collection,Collection);;Argument[2];ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;select;(Iterable,Predicate,Collection,Collection);;Element of Argument[0];Element of Argument[2];valueorg.apache.commons.collections;CollectionUtils;true;select;(Iterable,Predicate,Collection,Collection);;Element of Argument[0];Element of Argument[3];valueorg.apache.commons.collections;CollectionUtils;true;selectRejected;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;selectRejected;(Iterable,Predicate,Collection);;Argument[2];ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;selectRejected;(Iterable,Predicate,Collection);;Element of Argument[0];Element of Argument[2];valueorg.apache.commons.collections;CollectionUtils;true;subtract;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;synchronizedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;transformingCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;union;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;union;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;CollectionUtils;true;unmodifiableCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;arrayIterator;;;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;arrayListIterator;;;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;asEnumeration;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;asIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;asIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;asMultipleUseIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;boundedIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;chainedIterator;(Collection);;Element of Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;chainedIterator;(Iterator,Iterator);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;chainedIterator;(Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;chainedIterator;(Iterator[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;collatedIterator;(Comparator,Collection);;Element of Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;collatedIterator;(Comparator,Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;collatedIterator;(Comparator,Iterator,Iterator);;Element of Argument[2];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;collatedIterator;(Comparator,Iterator[]);;Element of ArrayElement of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;filteredIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;filteredListIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;find;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;first;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;forEachButLast;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;get;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;getIterator;;;Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;getIterator;;;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;getIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;getIterator;;;MapValue of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;loopingIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;loopingListIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;peekingIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;pushbackIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;singletonIterator;;;Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;singletonListIterator;;;Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;skippingIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;toArray;;;Element of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;toList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;toListIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;toString;;;Argument[2];ReturnValue;taintorg.apache.commons.collections;IteratorUtils;true;toString;;;Argument[3];ReturnValue;taintorg.apache.commons.collections;IteratorUtils;true;toString;;;Argument[4];ReturnValue;taintorg.apache.commons.collections;IteratorUtils;true;unmodifiableIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;unmodifiableListIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;unmodifiableMapIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;unmodifiableMapIterator;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;zippingIterator;(Iterator,Iterator);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;zippingIterator;(Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;zippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;zippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;zippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[2];Element of ReturnValue;valueorg.apache.commons.collections;IteratorUtils;true;zippingIterator;(Iterator[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;AbstractCollectionDecorator;true;AbstractCollectionDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;AbstractCollectionDecorator;true;decorated;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.collection;AbstractCollectionDecorator;true;setCollection;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;CompositeCollection$CollectionMutator;true;add;;;Argument[2];Element of Argument[0];valueorg.apache.commons.collections.collection;CompositeCollection$CollectionMutator;true;add;;;Argument[2];Element of Element of Argument[1];valueorg.apache.commons.collections.collection;CompositeCollection$CollectionMutator;true;addAll;;;Element of Argument[2];Element of Argument[0];valueorg.apache.commons.collections.collection;CompositeCollection$CollectionMutator;true;addAll;;;Element of Argument[2];Element of Element of Argument[1];valueorg.apache.commons.collections.collection;CompositeCollection;true;CompositeCollection;(Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;CompositeCollection;true;CompositeCollection;(Collection,Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;CompositeCollection;true;CompositeCollection;(Collection,Collection);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.collection;CompositeCollection;true;CompositeCollection;(Collection[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;CompositeCollection;true;addComposited;(Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;CompositeCollection;true;addComposited;(Collection,Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;CompositeCollection;true;addComposited;(Collection,Collection);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.collection;CompositeCollection;true;addComposited;(Collection[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;CompositeCollection;true;getCollections;;;Element of Argument[-1];Element of Element of ReturnValue;valueorg.apache.commons.collections.collection;CompositeCollection;true;toCollection;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.collection;IndexedCollection;true;IndexedCollection;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;IndexedCollection;true;get;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections.collection;IndexedCollection;true;nonUniqueIndexedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;IndexedCollection;true;uniqueIndexedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;IndexedCollection;true;values;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;add;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;addAll;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;createPredicatedBag;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;createPredicatedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;createPredicatedList;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;createPredicatedList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;createPredicatedMultiSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;createPredicatedMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;createPredicatedQueue;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;createPredicatedQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;createPredicatedSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;createPredicatedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection$Builder;true;rejectedElements;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.collection;PredicatedCollection;true;predicatedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;SynchronizedCollection;true;synchronizedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;TransformedCollection;true;transformingCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;UnmodifiableBoundedCollection;true;unmodifiableBoundedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.collection;UnmodifiableCollection;true;unmodifiableCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;fixedSizeMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;fixedSizeMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;fixedSizeSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;fixedSizeSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getMap;;;Argument[2];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getMap;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getObject;;;Argument[2];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getObject;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getString;;;Argument[2];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getString;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;invertMap;;;MapKey of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;invertMap;;;MapValue of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;iterableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;iterableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;iterableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;iterableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;lazyMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;lazyMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;lazySortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;lazySortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;multiValueMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;orderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;orderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;populateMap;(Map,Iterable,Transformer);;Element of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;populateMap;(MultiMap,Iterable,Transformer);;Element of Argument[1];Element of MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;predicatedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;predicatedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;predicatedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;predicatedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;safeAddToMap;;;Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections;MapUtils;true;safeAddToMap;;;Argument[2];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;synchronizedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;synchronizedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;synchronizedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;synchronizedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;toMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;toMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;transformedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;transformedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;transformedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;transformedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;unmodifiableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;unmodifiableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;unmodifiableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;unmodifiableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;setKey;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;setKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;setValue;;;Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object);;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object);;Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object);;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object);;Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object);;Argument[2];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[2];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[3];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[2];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[3];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[4];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object[]);;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;MultiKey;(Object[],boolean);;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.keyvalue;MultiKey;true;getKey;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections.keyvalue;MultiKey;true;getKeys;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.apache.commons.collections.keyvalue;TiedMapEntry;true;TiedMapEntry;;;Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;TiedMapEntry;true;TiedMapEntry;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections;ArrayStack;true;peek;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections;ArrayStack;true;pop;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections;ArrayStack;true;push;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections;ArrayStack;true;push;;;Argument[0];ReturnValue;valueorg.apache.commons.collections;Bag;true;add;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections;Bag;true;uniqueSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;BidiMap;true;getKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections;BidiMap;true;inverseBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections;BidiMap;true;inverseBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections;BidiMap;true;removeValue;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;append;(Iterable);;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;append;(Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;append;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;append;(Object[]);;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;asEnumeration;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;collate;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;collate;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;copyInto;;;Element of Argument[-1];Element of Argument[0];valueorg.apache.commons.collections;FluentIterable;true;eval;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;filter;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;get;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;limit;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;loop;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;of;(Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;of;(Object);;Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;of;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;reverse;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;skip;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;toArray;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;toList;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;unique;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;unmodifiable;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;zip;(Iterable);;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;zip;(Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;zip;(Iterable[]);;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;FluentIterable;true;zip;(Iterable[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;Get;true;entrySet;;;MapKey of Argument[-1];MapKey of Element of ReturnValue;valueorg.apache.commons.collections;Get;true;entrySet;;;MapValue of Argument[-1];MapValue of Element of ReturnValue;valueorg.apache.commons.collections;Get;true;get;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections;Get;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;Get;true;remove;(Object);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections;Get;true;values;();;MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;IterableGet;true;mapIterator;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;IterableGet;true;mapIterator;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections;KeyValue;true;getKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections;KeyValue;true;getValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections;MapIterator;true;getKey;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections;MapIterator;true;getValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections;MapIterator;true;setValue;;;Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections;MapIterator;true;setValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections;MultiMap;true;get;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;MultiMap;true;put;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections;MultiMap;true;put;;;Argument[1];Element of MapValue of Argument[-1];valueorg.apache.commons.collections;MultiMap;true;values;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;MultiSet$Entry;true;getElement;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections;MultiSet;true;add;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections;MultiSet;true;entrySet;;;Element of Argument[-1];Element of Element of ReturnValue;valueorg.apache.commons.collections;MultiSet;true;uniqueSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;asMap;;;Element of MapValue of Argument[-1];Element of MapValue of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;asMap;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;entries;;;Element of MapValue of Argument[-1];MapValue of Element of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;entries;;;MapKey of Argument[-1];MapKey of Element of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;get;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;keySet;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;keys;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;mapIterator;;;Element of MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;mapIterator;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;put;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections;MultiValuedMap;true;put;;;Argument[1];Element of MapValue of Argument[-1];valueorg.apache.commons.collections;MultiValuedMap;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections;MultiValuedMap;true;putAll;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections;MultiValuedMap;true;putAll;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections;MultiValuedMap;true;putAll;(MultiValuedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections;MultiValuedMap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections;MultiValuedMap;true;putAll;(Object,Iterable);;Element of Argument[1];Element of MapValue of Argument[-1];valueorg.apache.commons.collections;MultiValuedMap;true;remove;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;MultiValuedMap;true;values;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections;OrderedIterator;true;previous;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections;OrderedMap;true;firstKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections;OrderedMap;true;lastKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections;OrderedMap;true;nextKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections;OrderedMap;true;previousKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections;Put;true;put;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections;Put;true;put;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections;Put;true;put;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections;Put;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections;Put;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections;SortedBag;true;first;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections;SortedBag;true;last;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections;Trie;true;prefixMap;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections;Trie;true;prefixMap;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.iterators;AbstractIteratorDecorator;true;AbstractIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;AbstractListIteratorDecorator;true;AbstractListIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;AbstractListIteratorDecorator;true;getListIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.iterators;AbstractMapIteratorDecorator;true;AbstractMapIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;AbstractMapIteratorDecorator;true;AbstractMapIteratorDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.iterators;AbstractMapIteratorDecorator;true;getMapIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.iterators;AbstractMapIteratorDecorator;true;getMapIterator;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.iterators;AbstractOrderedMapIteratorDecorator;true;AbstractOrderedMapIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;AbstractOrderedMapIteratorDecorator;true;AbstractOrderedMapIteratorDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.iterators;AbstractOrderedMapIteratorDecorator;true;getOrderedMapIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.iterators;AbstractOrderedMapIteratorDecorator;true;getOrderedMapIterator;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.iterators;AbstractUntypedIteratorDecorator;true;AbstractUntypedIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;AbstractUntypedIteratorDecorator;true;getIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.iterators;ArrayIterator;true;ArrayIterator;;;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;ArrayIterator;true;getArray;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.apache.commons.collections.iterators;ArrayListIterator;true;ArrayListIterator;;;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;BoundedIterator;true;BoundedIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Collection);;Element of Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Iterator,Iterator);;Element of Argument[2];Element of Argument[-1];valueorg.apache.commons.collections.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Iterator[]);;Element of ArrayElement of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.iterators;CollatingIterator;true;addIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;CollatingIterator;true;getIterators;;;Element of Argument[-1];Element of Element of ReturnValue;valueorg.apache.commons.collections.iterators;CollatingIterator;true;setIterator;;;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.iterators;EnumerationIterator;true;EnumerationIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;EnumerationIterator;true;getEnumeration;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.iterators;EnumerationIterator;true;setEnumeration;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;FilterIterator;true;FilterIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;FilterIterator;true;getIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.iterators;FilterIterator;true;setIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;FilterListIterator;true;FilterListIterator;(ListIterator);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;FilterListIterator;true;FilterListIterator;(ListIterator,Predicate);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;FilterListIterator;true;getListIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.iterators;FilterListIterator;true;setListIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;IteratorChain;true;IteratorChain;(Collection);;Element of Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;IteratorChain;true;IteratorChain;(Iterator);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;IteratorChain;true;IteratorChain;(Iterator,Iterator);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;IteratorChain;true;IteratorChain;(Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.iterators;IteratorChain;true;IteratorChain;(Iterator[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;IteratorChain;true;addIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;IteratorEnumeration;true;IteratorEnumeration;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;IteratorEnumeration;true;getIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.iterators;IteratorEnumeration;true;setIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;IteratorIterable;true;IteratorIterable;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;ListIteratorWrapper;true;ListIteratorWrapper;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;LoopingIterator;true;LoopingIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;LoopingListIterator;true;LoopingListIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;ObjectArrayIterator;true;ObjectArrayIterator;;;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;ObjectArrayIterator;true;getArray;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.apache.commons.collections.iterators;ObjectArrayListIterator;true;ObjectArrayListIterator;;;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;PeekingIterator;true;PeekingIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;PeekingIterator;true;element;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections.iterators;PeekingIterator;true;peek;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections.iterators;PeekingIterator;true;peekingIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.iterators;PermutationIterator;true;PermutationIterator;;;Element of Argument[0];Element of Element of Argument[-1];valueorg.apache.commons.collections.iterators;PushbackIterator;true;PushbackIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;PushbackIterator;true;pushback;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;PushbackIterator;true;pushbackIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.iterators;ReverseListIterator;true;ReverseListIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;SingletonIterator;true;SingletonIterator;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;SingletonListIterator;true;SingletonListIterator;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;SkippingIterator;true;SkippingIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;UniqueFilterIterator;true;UniqueFilterIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;UnmodifiableIterator;true;unmodifiableIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.iterators;UnmodifiableListIterator;true;umodifiableListIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.iterators;UnmodifiableMapIterator;true;unmodifiableMapIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.iterators;UnmodifiableMapIterator;true;unmodifiableMapIterator;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.iterators;UnmodifiableOrderedMapIterator;true;unmodifiableOrderedMapIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.iterators;UnmodifiableOrderedMapIterator;true;unmodifiableOrderedMapIterator;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[2];Element of Argument[-1];valueorg.apache.commons.collections.iterators;ZippingIterator;true;ZippingIterator;(Iterator[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.map;AbstractHashedMap;true;AbstractHashedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;AbstractHashedMap;true;AbstractHashedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;AbstractLinkedMap;true;AbstractLinkedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;AbstractLinkedMap;true;AbstractLinkedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;AbstractMapDecorator;true;AbstractMapDecorator;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;AbstractMapDecorator;true;AbstractMapDecorator;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;AbstractMapDecorator;true;decorated;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections.map;AbstractMapDecorator;true;decorated;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.map;AbstractOrderedMapDecorator;true;AbstractOrderedMapDecorator;(OrderedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;AbstractOrderedMapDecorator;true;AbstractOrderedMapDecorator;(OrderedMap);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;AbstractSortedMapDecorator;true;AbstractSortedMapDecorator;(SortedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;AbstractSortedMapDecorator;true;AbstractSortedMapDecorator;(SortedMap);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;CaseInsensitiveMap;true;CaseInsensitiveMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;CaseInsensitiveMap;true;CaseInsensitiveMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map,Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map,Map);;MapKey of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map,Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map,Map);;MapValue of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapKey of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapValue of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map[]);;MapKey of ArrayElement of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map[]);;MapValue of ArrayElement of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map[],MapMutator);;MapKey of ArrayElement of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;CompositeMap;(Map[],MapMutator);;MapValue of ArrayElement of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;addComposited;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;addComposited;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;CompositeMap;true;removeComposited;;;Argument[0];ReturnValue;valueorg.apache.commons.collections.map;CompositeMap;true;removeComposited;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections.map;CompositeMap;true;removeComposited;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.map;DefaultedMap;true;DefaultedMap;(Object);;Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;DefaultedMap;true;defaultedMap;(Map,Object);;Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections.map;DefaultedMap;true;defaultedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;DefaultedMap;true;defaultedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;EntrySetToMapIteratorAdapter;true;EntrySetToMapIteratorAdapter;;;MapKey of Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.map;EntrySetToMapIteratorAdapter;true;EntrySetToMapIteratorAdapter;;;MapValue of Element of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;FixedSizeMap;true;fixedSizeMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;FixedSizeMap;true;fixedSizeMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;FixedSizeSortedMap;true;fixedSizeSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;FixedSizeSortedMap;true;fixedSizeSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;Flat3Map;true;Flat3Map;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;Flat3Map;true;Flat3Map;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;HashedMap;true;HashedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;HashedMap;true;HashedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;LRUMap;true;LRUMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;LRUMap;true;LRUMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;LRUMap;true;LRUMap;(Map,boolean);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;LRUMap;true;LRUMap;(Map,boolean);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;LRUMap;true;get;(Object,boolean);;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections.map;LazyMap;true;lazyMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;LazyMap;true;lazyMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;LazySortedMap;true;lazySortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;LazySortedMap;true;lazySortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;LinkedMap;true;LinkedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;LinkedMap;true;LinkedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;LinkedMap;true;asList;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.map;LinkedMap;true;get;(int);;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections.map;LinkedMap;true;getValue;(int);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections.map;LinkedMap;true;remove;(int);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections.map;ListOrderedMap;true;asList;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.map;ListOrderedMap;true;get;(int);;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections.map;ListOrderedMap;true;getValue;(int);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections.map;ListOrderedMap;true;keyList;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.map;ListOrderedMap;true;listOrderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;ListOrderedMap;true;listOrderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;ListOrderedMap;true;put;;;Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections.map;ListOrderedMap;true;put;;;Argument[2];MapValue of Argument[-1];valueorg.apache.commons.collections.map;ListOrderedMap;true;putAll;;;MapKey of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections.map;ListOrderedMap;true;putAll;;;MapValue of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.map;ListOrderedMap;true;remove;(int);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections.map;ListOrderedMap;true;setValue;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.map;ListOrderedMap;true;valueList;;;MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.map;MultiKeyMap;true;get;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections.map;MultiKeyMap;true;put;(Object,Object,Object);;Argument[0..1];Element of MapKey of Argument[-1];valueorg.apache.commons.collections.map;MultiKeyMap;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];valueorg.apache.commons.collections.map;MultiKeyMap;true;put;(Object,Object,Object,Object);;Argument[0..2];Element of MapKey of Argument[-1];valueorg.apache.commons.collections.map;MultiKeyMap;true;put;(Object,Object,Object,Object);;Argument[3];MapValue of Argument[-1];valueorg.apache.commons.collections.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object);;Argument[0..3];Element of MapKey of Argument[-1];valueorg.apache.commons.collections.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object);;Argument[4];MapValue of Argument[-1];valueorg.apache.commons.collections.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object,Object);;Argument[0..4];Element of MapKey of Argument[-1];valueorg.apache.commons.collections.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object,Object);;Argument[5];MapValue of Argument[-1];valueorg.apache.commons.collections.map;MultiKeyMap;true;put;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections.map;MultiKeyMap;true;removeMultiKey;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections.map;MultiValueMap;true;getCollection;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.map;MultiValueMap;true;iterator;();;Element of MapValue of Argument[-1];MapValue of Element of ReturnValue;valueorg.apache.commons.collections.map;MultiValueMap;true;iterator;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;valueorg.apache.commons.collections.map;MultiValueMap;true;iterator;(Object);;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.map;MultiValueMap;true;multiValueMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.apache.commons.collections.map;MultiValueMap;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;MultiValueMap;true;putAll;(Map);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections.map;MultiValueMap;true;putAll;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections.map;MultiValueMap;true;putAll;(Object,Collection);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;MultiValueMap;true;putAll;(Object,Collection);;Element of Argument[1];Element of MapValue of Argument[-1];valueorg.apache.commons.collections.map;MultiValueMap;true;values;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections.map;PassiveExpiringMap;true;PassiveExpiringMap;(ExpirationPolicy,Map);;MapKey of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections.map;PassiveExpiringMap;true;PassiveExpiringMap;(ExpirationPolicy,Map);;MapValue of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.map;PassiveExpiringMap;true;PassiveExpiringMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;PassiveExpiringMap;true;PassiveExpiringMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,Map);;MapKey of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,Map);;MapValue of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,TimeUnit,Map);;MapKey of Argument[2];MapKey of Argument[-1];valueorg.apache.commons.collections.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,TimeUnit,Map);;MapValue of Argument[2];MapValue of Argument[-1];valueorg.apache.commons.collections.map;PredicatedMap;true;predicatedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;PredicatedMap;true;predicatedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;PredicatedSortedMap;true;predicatedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;PredicatedSortedMap;true;predicatedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;SingletonMap;true;SingletonMap;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;SingletonMap;true;SingletonMap;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;SingletonMap;true;SingletonMap;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;SingletonMap;true;SingletonMap;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;SingletonMap;true;SingletonMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;SingletonMap;true;SingletonMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;SingletonMap;true;SingletonMap;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.map;SingletonMap;true;SingletonMap;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.map;SingletonMap;true;setValue;;;Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.map;TransformedMap;true;transformingMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;TransformedMap;true;transformingMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;TransformedSortedMap;true;transformingSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;TransformedSortedMap;true;transformingSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;UnmodifiableEntrySet;true;unmodifiableEntrySet;;;MapKey of Element of Argument[0];MapKey of Element of ReturnValue;valueorg.apache.commons.collections.map;UnmodifiableEntrySet;true;unmodifiableEntrySet;;;MapValue of Element of Argument[0];MapValue of Element of ReturnValue;valueorg.apache.commons.collections.map;UnmodifiableMap;true;unmodifiableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;UnmodifiableMap;true;unmodifiableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;UnmodifiableOrderedMap;true;unmodifiableOrderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;UnmodifiableOrderedMap;true;unmodifiableOrderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.map;UnmodifiableSortedMap;true;unmodifiableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.map;UnmodifiableSortedMap;true;unmodifiableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4org.apache.commons.collections4.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4.multimap;ArrayListValuedHashMap;true;ArrayListValuedHashMap;(MultiValuedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4.multimap;HashSetValuedHashMap;true;HashSetValuedHashMap;(MultiValuedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.multimap;TransformedMultiValuedMap;true;transformingMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.apache.commons.collections4.multimap;TransformedMultiValuedMap;true;transformingMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.multimap;UnmodifiableMultiValuedMap;true;unmodifiableMultiValuedMap;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.apache.commons.collections4.multimap;UnmodifiableMultiValuedMap;true;unmodifiableMultiValuedMap;(MultiValuedMap);;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.bag;AbstractBagDecorator;true;AbstractBagDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.bag;AbstractMapBag;true;AbstractMapBag;;;MapKey of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.bag;AbstractMapBag;true;getMap;;;Element of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4.bag;AbstractSortedBagDecorator;true;AbstractSortedBagDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.bag;CollectionBag;true;CollectionBag;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.bag;CollectionBag;true;collectionBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.bag;CollectionSortedBag;true;CollectionSortedBag;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.bag;CollectionSortedBag;true;collectionSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.bag;HashBag;true;HashBag;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.bag;PredicatedBag;true;predicatedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.bag;PredicatedSortedBag;true;predicatedSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.bag;SynchronizedBag;true;synchronizedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.bag;SynchronizedSortedBag;true;synchronizedSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.bag;TransformedBag;true;transformedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.bag;TransformedSortedBag;true;transformedSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.bag;TreeBag;true;TreeBag;(Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.bag;UnmodifiableBag;true;unmodifiableBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.bag;UnmodifiableSortedBag;true;unmodifiableSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.list;AbstractLinkedList;true;AbstractLinkedList;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.list;AbstractLinkedList;true;addFirst;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.list;AbstractLinkedList;true;addLast;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.list;AbstractLinkedList;true;getFirst;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.list;AbstractLinkedList;true;getLast;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.list;AbstractLinkedList;true;removeFirst;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.list;AbstractLinkedList;true;removeLast;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.list;AbstractListDecorator;true;AbstractListDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.list;AbstractSerializableListDecorator;true;AbstractSerializableListDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.list;CursorableLinkedList;true;CursorableLinkedList;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.list;CursorableLinkedList;true;cursor;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.list;FixedSizeList;true;fixedSizeList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.list;GrowthList;true;growthList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.list;LazyList;true;lazyList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.list;NodeCachingLinkedList;true;NodeCachingLinkedList;(Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.list;PredicatedList;true;predicatedList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.list;SetUniqueList;true;asSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.list;SetUniqueList;true;setUniqueList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.list;TransformedList;true;transformingList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.list;TreeList;true;TreeList;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.list;UnmodifiableList;true;UnmodifiableList;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.list;UnmodifiableList;true;unmodifiableList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils$SetView;true;copyInto;;;Element of Argument[-1];Element of Argument[0];valueorg.apache.commons.collections4;SetUtils$SetView;true;createIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils$SetView;true;toSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;difference;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;disjunction;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;disjunction;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;hashSet;;;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;intersection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;intersection;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;orderedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;predicatedNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;predicatedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;predicatedSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;synchronizedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;synchronizedSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;transformedNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;transformedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;transformedSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;union;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;union;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;unmodifiableNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;unmodifiableSet;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;unmodifiableSet;(Set);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;SetUtils;true;unmodifiableSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;defaultIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;defaultIfNull;;;Argument[1];ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;fixedSizeList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;intersection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;intersection;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;lazyList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;longestCommonSubsequence;(CharSequence,CharSequence);;Argument[0];ReturnValue;taintorg.apache.commons.collections4;ListUtils;true;longestCommonSubsequence;(CharSequence,CharSequence);;Argument[1];ReturnValue;taintorg.apache.commons.collections4;ListUtils;true;longestCommonSubsequence;(List,List);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;longestCommonSubsequence;(List,List);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;longestCommonSubsequence;(List,List,Equator);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;longestCommonSubsequence;(List,List,Equator);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;partition;;;Element of Argument[0];Element of Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;predicatedList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;removeAll;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;retainAll;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;select;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;selectRejected;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;subtract;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;sum;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;sum;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;synchronizedList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;transformedList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;union;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;union;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;ListUtils;true;unmodifiableList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;AbstractNavigableSetDecorator;true;AbstractNavigableSetDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.set;AbstractSetDecorator;true;AbstractSetDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.set;AbstractSortedSetDecorator;true;AbstractSortedSetDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.set;CompositeSet$SetMutator;true;add;;;Argument[2];Element of Argument[0];valueorg.apache.commons.collections4.set;CompositeSet$SetMutator;true;add;;;Argument[2];Element of Element of Argument[1];valueorg.apache.commons.collections4.set;CompositeSet$SetMutator;true;addAll;;;Element of Argument[2];Element of Argument[0];valueorg.apache.commons.collections4.set;CompositeSet$SetMutator;true;addAll;;;Element of Argument[2];Element of Element of Argument[1];valueorg.apache.commons.collections4.set;CompositeSet;true;CompositeSet;(Set);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.set;CompositeSet;true;CompositeSet;(Set[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.set;CompositeSet;true;addComposited;(Set);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.set;CompositeSet;true;addComposited;(Set,Set);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.set;CompositeSet;true;addComposited;(Set,Set);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.set;CompositeSet;true;addComposited;(Set[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.set;CompositeSet;true;getSets;;;Element of Argument[-1];Element of Element of ReturnValue;valueorg.apache.commons.collections4.set;CompositeSet;true;toSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.set;ListOrderedSet;true;add;;;Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.set;ListOrderedSet;true;addAll;;;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.set;ListOrderedSet;true;asList;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.set;ListOrderedSet;true;get;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.set;ListOrderedSet;true;listOrderedSet;(List);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;ListOrderedSet;true;listOrderedSet;(Set);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;MapBackedSet;true;mapBackedSet;;;MapKey of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;PredicatedNavigableSet;true;predicatedNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;PredicatedSet;true;predicatedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;PredicatedSortedSet;true;predicatedSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;TransformedNavigableSet;true;transformingNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;TransformedSet;true;transformingSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;TransformedSortedSet;true;transformingSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;UnmodifiableNavigableSet;true;unmodifiableNavigableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;UnmodifiableSet;true;unmodifiableSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.set;UnmodifiableSortedSet;true;unmodifiableSortedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;boundedIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;chainedIterable;(Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;chainedIterable;(Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable);;Element of Argument[2];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[2];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;chainedIterable;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[3];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;chainedIterable;(Iterable[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;collatedIterable;(Comparator,Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;collatedIterable;(Comparator,Iterable,Iterable);;Element of Argument[2];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;collatedIterable;(Iterable,Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;collatedIterable;(Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;filteredIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;find;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;first;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;forEachButLast;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;get;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;loopingIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;partition;;;Element of Argument[0];Element of Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;reversedIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;skippingIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;toList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;toString;;;Argument[2];ReturnValue;taintorg.apache.commons.collections4;IterableUtils;true;toString;;;Argument[3];ReturnValue;taintorg.apache.commons.collections4;IterableUtils;true;toString;;;Argument[4];ReturnValue;taintorg.apache.commons.collections4;IterableUtils;true;uniqueIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;unmodifiableIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;zippingIterable;(Iterable,Iterable);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;zippingIterable;(Iterable,Iterable[]);;Element of ArrayElement of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IterableUtils;true;zippingIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.bidimap;AbstractBidiMapDecorator;true;AbstractBidiMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractBidiMapDecorator;true;AbstractBidiMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapKey of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapKey of Argument[2];MapValue of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapValue of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractDualBidiMap;true;AbstractDualBidiMap;;;MapValue of Argument[2];MapKey of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractOrderedBidiMapDecorator;true;AbstractOrderedBidiMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractOrderedBidiMapDecorator;true;AbstractOrderedBidiMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractSortedBidiMapDecorator;true;AbstractSortedBidiMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.bidimap;AbstractSortedBidiMapDecorator;true;AbstractSortedBidiMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.bidimap;DualHashBidiMap;true;DualHashBidiMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.bidimap;DualHashBidiMap;true;DualHashBidiMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.bidimap;DualLinkedHashBidiMap;true;DualLinkedHashBidiMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.bidimap;DualLinkedHashBidiMap;true;DualLinkedHashBidiMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.bidimap;DualTreeBidiMap;true;DualTreeBidiMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.bidimap;DualTreeBidiMap;true;DualTreeBidiMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.bidimap;DualTreeBidiMap;true;inverseOrderedBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.bidimap;DualTreeBidiMap;true;inverseOrderedBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4.bidimap;DualTreeBidiMap;true;inverseSortedBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.bidimap;DualTreeBidiMap;true;inverseSortedBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4.bidimap;TreeBidiMap;true;TreeBidiMap;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.bidimap;TreeBidiMap;true;TreeBidiMap;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.bidimap;UnmodifiableBidiMap;true;unmodifiableBidiMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.bidimap;UnmodifiableBidiMap;true;unmodifiableBidiMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.bidimap;UnmodifiableOrderedBidiMap;true;inverseOrderedBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.bidimap;UnmodifiableOrderedBidiMap;true;inverseOrderedBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4.bidimap;UnmodifiableOrderedBidiMap;true;unmodifiableOrderedBidiMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.bidimap;UnmodifiableOrderedBidiMap;true;unmodifiableOrderedBidiMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.bidimap;UnmodifiableSortedBidiMap;true;unmodifiableSortedBidiMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.bidimap;UnmodifiableSortedBidiMap;true;unmodifiableSortedBidiMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;addAll;(Collection,Enumeration);;Element of Argument[1];Element of Argument[0];valueorg.apache.commons.collections4;CollectionUtils;true;addAll;(Collection,Iterable);;Element of Argument[1];Element of Argument[0];valueorg.apache.commons.collections4;CollectionUtils;true;addAll;(Collection,Iterator);;Element of Argument[1];Element of Argument[0];valueorg.apache.commons.collections4;CollectionUtils;true;addAll;(Collection,Object[]);;ArrayElement of Argument[1];Element of Argument[0];valueorg.apache.commons.collections4;CollectionUtils;true;addIgnoreNull;;;Argument[1];Element of Argument[0];valueorg.apache.commons.collections4;CollectionUtils;true;collate;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;collate;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;disjunction;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;disjunction;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;extractSingleton;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;find;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;get;(Iterable,int);;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;get;(Iterator,int);;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;get;(Map,int);;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;get;(Map,int);;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;get;(Object,int);;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;get;(Object,int);;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;get;(Object,int);;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;get;(Object,int);;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;getCardinalityMap;;;Element of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;intersection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;intersection;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;permutations;;;Element of Argument[0];Element of Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;predicatedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;removeAll;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;retainAll;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;select;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;select;(Iterable,Predicate,Collection);;Argument[2];ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;select;(Iterable,Predicate,Collection);;Element of Argument[0];Element of Argument[2];valueorg.apache.commons.collections4;CollectionUtils;true;select;(Iterable,Predicate,Collection,Collection);;Argument[2];ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;select;(Iterable,Predicate,Collection,Collection);;Element of Argument[0];Element of Argument[2];valueorg.apache.commons.collections4;CollectionUtils;true;select;(Iterable,Predicate,Collection,Collection);;Element of Argument[0];Element of Argument[3];valueorg.apache.commons.collections4;CollectionUtils;true;selectRejected;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;selectRejected;(Iterable,Predicate,Collection);;Argument[2];ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;selectRejected;(Iterable,Predicate,Collection);;Element of Argument[0];Element of Argument[2];valueorg.apache.commons.collections4;CollectionUtils;true;subtract;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;synchronizedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;transformingCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;union;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;union;;;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;CollectionUtils;true;unmodifiableCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;arrayIterator;;;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;arrayListIterator;;;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;asEnumeration;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;asIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;asIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;asMultipleUseIterable;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;boundedIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;chainedIterator;(Collection);;Element of Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;chainedIterator;(Iterator,Iterator);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;chainedIterator;(Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;chainedIterator;(Iterator[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;collatedIterator;(Comparator,Collection);;Element of Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;collatedIterator;(Comparator,Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;collatedIterator;(Comparator,Iterator,Iterator);;Element of Argument[2];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;collatedIterator;(Comparator,Iterator[]);;Element of ArrayElement of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;filteredIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;filteredListIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;find;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;first;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;forEachButLast;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;get;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;getIterator;;;Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;getIterator;;;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;getIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;getIterator;;;MapValue of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;loopingIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;loopingListIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;peekingIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;pushbackIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;singletonIterator;;;Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;singletonListIterator;;;Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;skippingIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;toArray;;;Element of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;toList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;toListIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;toString;;;Argument[2];ReturnValue;taintorg.apache.commons.collections4;IteratorUtils;true;toString;;;Argument[3];ReturnValue;taintorg.apache.commons.collections4;IteratorUtils;true;toString;;;Argument[4];ReturnValue;taintorg.apache.commons.collections4;IteratorUtils;true;unmodifiableIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;unmodifiableListIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;unmodifiableMapIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;unmodifiableMapIterator;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;zippingIterator;(Iterator,Iterator);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;zippingIterator;(Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;zippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;zippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[1];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;zippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[2];Element of ReturnValue;valueorg.apache.commons.collections4;IteratorUtils;true;zippingIterator;(Iterator[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;AbstractCollectionDecorator;true;AbstractCollectionDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;AbstractCollectionDecorator;true;decorated;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.collection;AbstractCollectionDecorator;true;setCollection;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;CompositeCollection$CollectionMutator;true;add;;;Argument[2];Element of Argument[0];valueorg.apache.commons.collections4.collection;CompositeCollection$CollectionMutator;true;add;;;Argument[2];Element of Element of Argument[1];valueorg.apache.commons.collections4.collection;CompositeCollection$CollectionMutator;true;addAll;;;Element of Argument[2];Element of Argument[0];valueorg.apache.commons.collections4.collection;CompositeCollection$CollectionMutator;true;addAll;;;Element of Argument[2];Element of Element of Argument[1];valueorg.apache.commons.collections4.collection;CompositeCollection;true;CompositeCollection;(Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;CompositeCollection;true;CompositeCollection;(Collection,Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;CompositeCollection;true;CompositeCollection;(Collection,Collection);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.collection;CompositeCollection;true;CompositeCollection;(Collection[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;CompositeCollection;true;addComposited;(Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;CompositeCollection;true;addComposited;(Collection,Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;CompositeCollection;true;addComposited;(Collection,Collection);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.collection;CompositeCollection;true;addComposited;(Collection[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;CompositeCollection;true;getCollections;;;Element of Argument[-1];Element of Element of ReturnValue;valueorg.apache.commons.collections4.collection;CompositeCollection;true;toCollection;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.collection;IndexedCollection;true;IndexedCollection;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;IndexedCollection;true;get;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.collection;IndexedCollection;true;nonUniqueIndexedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;IndexedCollection;true;uniqueIndexedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;IndexedCollection;true;values;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;add;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;addAll;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;createPredicatedBag;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;createPredicatedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;createPredicatedList;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;createPredicatedList;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;createPredicatedMultiSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;createPredicatedMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;createPredicatedQueue;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;createPredicatedQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;createPredicatedSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;createPredicatedSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection$Builder;true;rejectedElements;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.collection;PredicatedCollection;true;predicatedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;SynchronizedCollection;true;synchronizedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;TransformedCollection;true;transformingCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;UnmodifiableBoundedCollection;true;unmodifiableBoundedCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.collection;UnmodifiableCollection;true;unmodifiableCollection;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;fixedSizeMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;fixedSizeMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;fixedSizeSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;fixedSizeSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getMap;;;Argument[2];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getMap;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getObject;;;Argument[2];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getObject;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getString;;;Argument[2];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getString;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;invertMap;;;MapKey of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;invertMap;;;MapValue of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;iterableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;iterableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;iterableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;iterableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;lazyMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;lazyMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;lazySortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;lazySortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;multiValueMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;orderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;orderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;populateMap;(Map,Iterable,Transformer);;Element of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;populateMap;(MultiMap,Iterable,Transformer);;Element of Argument[1];Element of MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;predicatedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;predicatedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;predicatedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;predicatedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;safeAddToMap;;;Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;safeAddToMap;;;Argument[2];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;synchronizedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;synchronizedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;synchronizedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;synchronizedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;toMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;toMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;transformedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;transformedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;transformedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;transformedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;unmodifiableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;unmodifiableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;unmodifiableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;unmodifiableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setKey;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object);;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object);;Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object);;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object);;Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object);;Argument[2];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[2];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object);;Argument[3];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[2];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[3];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object,Object,Object,Object,Object);;Argument[4];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object[]);;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;MultiKey;(Object[],boolean);;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.keyvalue;MultiKey;true;getKey;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.keyvalue;MultiKey;true;getKeys;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.apache.commons.collections4.keyvalue;TiedMapEntry;true;TiedMapEntry;;;Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;TiedMapEntry;true;TiedMapEntry;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4;ArrayStack;true;peek;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;ArrayStack;true;pop;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;ArrayStack;true;push;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4;ArrayStack;true;push;;;Argument[0];ReturnValue;valueorg.apache.commons.collections4;Bag;true;add;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4;Bag;true;uniqueSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;BidiMap;true;getKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;BidiMap;true;inverseBidiMap;;;MapKey of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4;BidiMap;true;inverseBidiMap;;;MapValue of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4;BidiMap;true;removeValue;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;append;(Iterable);;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;append;(Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;append;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;append;(Object[]);;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;asEnumeration;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;collate;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;collate;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;copyInto;;;Element of Argument[-1];Element of Argument[0];valueorg.apache.commons.collections4;FluentIterable;true;eval;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;filter;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;get;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;limit;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;loop;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;of;(Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;of;(Object);;Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;of;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;reverse;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;skip;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;toArray;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;toList;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;unique;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;unmodifiable;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;zip;(Iterable);;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;zip;(Iterable);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;zip;(Iterable[]);;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;FluentIterable;true;zip;(Iterable[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;Get;true;entrySet;;;MapKey of Argument[-1];MapKey of Element of ReturnValue;valueorg.apache.commons.collections4;Get;true;entrySet;;;MapValue of Argument[-1];MapValue of Element of ReturnValue;valueorg.apache.commons.collections4;Get;true;get;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;Get;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;Get;true;remove;(Object);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;Get;true;values;();;MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;IterableGet;true;mapIterator;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;IterableGet;true;mapIterator;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4;KeyValue;true;getKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;KeyValue;true;getValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;MapIterator;true;getKey;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;MapIterator;true;getValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;MapIterator;true;setValue;;;Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4;MapIterator;true;setValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;MultiMap;true;get;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;MultiMap;true;put;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4;MultiMap;true;put;;;Argument[1];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4;MultiMap;true;values;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;MultiSet$Entry;true;getElement;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;MultiSet;true;add;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4;MultiSet;true;entrySet;;;Element of Argument[-1];Element of Element of ReturnValue;valueorg.apache.commons.collections4;MultiSet;true;uniqueSet;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;asMap;;;Element of MapValue of Argument[-1];Element of MapValue of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;asMap;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;entries;;;Element of MapValue of Argument[-1];MapValue of Element of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;entries;;;MapKey of Argument[-1];MapKey of Element of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;get;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;keySet;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;keys;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;mapIterator;;;Element of MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;mapIterator;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;put;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4;MultiValuedMap;true;put;;;Argument[1];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4;MultiValuedMap;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4;MultiValuedMap;true;putAll;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4;MultiValuedMap;true;putAll;(MultiValuedMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4;MultiValuedMap;true;putAll;(MultiValuedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4;MultiValuedMap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4;MultiValuedMap;true;putAll;(Object,Iterable);;Element of Argument[1];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4;MultiValuedMap;true;remove;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;MultiValuedMap;true;values;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4;OrderedIterator;true;previous;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;OrderedMap;true;firstKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;OrderedMap;true;lastKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;OrderedMap;true;nextKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;OrderedMap;true;previousKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;Put;true;put;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4;Put;true;put;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4;Put;true;put;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;Put;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4;Put;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4;SortedBag;true;first;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;SortedBag;true;last;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;Trie;true;prefixMap;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4;Trie;true;prefixMap;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.iterators;AbstractIteratorDecorator;true;AbstractIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;AbstractListIteratorDecorator;true;AbstractListIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;AbstractListIteratorDecorator;true;getListIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;AbstractMapIteratorDecorator;true;AbstractMapIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;AbstractMapIteratorDecorator;true;AbstractMapIteratorDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.iterators;AbstractMapIteratorDecorator;true;getMapIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;AbstractMapIteratorDecorator;true;getMapIterator;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.iterators;AbstractOrderedMapIteratorDecorator;true;AbstractOrderedMapIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;AbstractOrderedMapIteratorDecorator;true;AbstractOrderedMapIteratorDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.iterators;AbstractOrderedMapIteratorDecorator;true;getOrderedMapIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;AbstractOrderedMapIteratorDecorator;true;getOrderedMapIterator;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.iterators;AbstractUntypedIteratorDecorator;true;AbstractUntypedIteratorDecorator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;AbstractUntypedIteratorDecorator;true;getIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;ArrayIterator;true;ArrayIterator;;;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;ArrayIterator;true;getArray;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.apache.commons.collections4.iterators;ArrayListIterator;true;ArrayListIterator;;;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;BoundedIterator;true;BoundedIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Collection);;Element of Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Iterator,Iterator);;Element of Argument[2];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;CollatingIterator;true;CollatingIterator;(Comparator,Iterator[]);;Element of ArrayElement of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;CollatingIterator;true;addIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;CollatingIterator;true;getIterators;;;Element of Argument[-1];Element of Element of ReturnValue;valueorg.apache.commons.collections4.iterators;CollatingIterator;true;setIterator;;;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;EnumerationIterator;true;EnumerationIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;EnumerationIterator;true;getEnumeration;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;EnumerationIterator;true;setEnumeration;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;FilterIterator;true;FilterIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;FilterIterator;true;getIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;FilterIterator;true;setIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;FilterListIterator;true;FilterListIterator;(ListIterator);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;FilterListIterator;true;FilterListIterator;(ListIterator,Predicate);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;FilterListIterator;true;getListIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;FilterListIterator;true;setListIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;IteratorChain;true;IteratorChain;(Collection);;Element of Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;IteratorChain;true;IteratorChain;(Iterator);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;IteratorChain;true;IteratorChain;(Iterator,Iterator);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;IteratorChain;true;IteratorChain;(Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;IteratorChain;true;IteratorChain;(Iterator[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;IteratorChain;true;addIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;IteratorEnumeration;true;IteratorEnumeration;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;IteratorEnumeration;true;getIterator;;;Element of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;IteratorEnumeration;true;setIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;IteratorIterable;true;IteratorIterable;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;ListIteratorWrapper;true;ListIteratorWrapper;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;LoopingIterator;true;LoopingIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;LoopingListIterator;true;LoopingListIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;ObjectArrayIterator;true;ObjectArrayIterator;;;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;ObjectArrayIterator;true;getArray;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.apache.commons.collections4.iterators;ObjectArrayListIterator;true;ObjectArrayListIterator;;;ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;PeekingIterator;true;PeekingIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;PeekingIterator;true;element;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.iterators;PeekingIterator;true;peek;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.iterators;PeekingIterator;true;peekingIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;PermutationIterator;true;PermutationIterator;;;Element of Argument[0];Element of Element of Argument[-1];valueorg.apache.commons.collections4.iterators;PushbackIterator;true;PushbackIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;PushbackIterator;true;pushback;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;PushbackIterator;true;pushbackIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;ReverseListIterator;true;ReverseListIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;SingletonIterator;true;SingletonIterator;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;SingletonListIterator;true;SingletonListIterator;;;Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;SkippingIterator;true;SkippingIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;UniqueFilterIterator;true;UniqueFilterIterator;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;UnmodifiableIterator;true;unmodifiableIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;UnmodifiableListIterator;true;umodifiableListIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;UnmodifiableMapIterator;true;unmodifiableMapIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;UnmodifiableMapIterator;true;unmodifiableMapIterator;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.iterators;UnmodifiableOrderedMapIterator;true;unmodifiableOrderedMapIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.iterators;UnmodifiableOrderedMapIterator;true;unmodifiableOrderedMapIterator;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[1];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;ZippingIterator;true;ZippingIterator;(Iterator,Iterator,Iterator);;Element of Argument[2];Element of Argument[-1];valueorg.apache.commons.collections4.iterators;ZippingIterator;true;ZippingIterator;(Iterator[]);;Element of ArrayElement of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.map;AbstractHashedMap;true;AbstractHashedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;AbstractHashedMap;true;AbstractHashedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;AbstractLinkedMap;true;AbstractLinkedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;AbstractLinkedMap;true;AbstractLinkedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;AbstractMapDecorator;true;AbstractMapDecorator;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;AbstractMapDecorator;true;AbstractMapDecorator;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;AbstractMapDecorator;true;decorated;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;AbstractMapDecorator;true;decorated;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;AbstractOrderedMapDecorator;true;AbstractOrderedMapDecorator;(OrderedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;AbstractOrderedMapDecorator;true;AbstractOrderedMapDecorator;(OrderedMap);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;AbstractSortedMapDecorator;true;AbstractSortedMapDecorator;(SortedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;AbstractSortedMapDecorator;true;AbstractSortedMapDecorator;(SortedMap);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;CaseInsensitiveMap;true;CaseInsensitiveMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;CaseInsensitiveMap;true;CaseInsensitiveMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map,Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map,Map);;MapKey of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map,Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map,Map);;MapValue of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapKey of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map,Map,MapMutator);;MapValue of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map[]);;MapKey of ArrayElement of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map[]);;MapValue of ArrayElement of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map[],MapMutator);;MapKey of ArrayElement of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;CompositeMap;(Map[],MapMutator);;MapValue of ArrayElement of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;addComposited;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;addComposited;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;CompositeMap;true;removeComposited;;;Argument[0];ReturnValue;valueorg.apache.commons.collections4.map;CompositeMap;true;removeComposited;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;CompositeMap;true;removeComposited;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;DefaultedMap;true;DefaultedMap;(Object);;Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;DefaultedMap;true;defaultedMap;(Map,Object);;Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;DefaultedMap;true;defaultedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;DefaultedMap;true;defaultedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;EntrySetToMapIteratorAdapter;true;EntrySetToMapIteratorAdapter;;;MapKey of Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.map;EntrySetToMapIteratorAdapter;true;EntrySetToMapIteratorAdapter;;;MapValue of Element of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;FixedSizeMap;true;fixedSizeMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;FixedSizeMap;true;fixedSizeMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;FixedSizeSortedMap;true;fixedSizeSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;FixedSizeSortedMap;true;fixedSizeSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;Flat3Map;true;Flat3Map;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;Flat3Map;true;Flat3Map;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;HashedMap;true;HashedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;HashedMap;true;HashedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;LRUMap;true;LRUMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;LRUMap;true;LRUMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;LRUMap;true;LRUMap;(Map,boolean);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;LRUMap;true;LRUMap;(Map,boolean);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;LRUMap;true;get;(Object,boolean);;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections4.map;LazyMap;true;lazyMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;LazyMap;true;lazyMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;LazySortedMap;true;lazySortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;LazySortedMap;true;lazySortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;LinkedMap;true;LinkedMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;LinkedMap;true;LinkedMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;LinkedMap;true;asList;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.map;LinkedMap;true;get;(int);;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.map;LinkedMap;true;getValue;(int);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.map;LinkedMap;true;remove;(int);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.map;ListOrderedMap;true;asList;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.map;ListOrderedMap;true;get;(int);;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.map;ListOrderedMap;true;getValue;(int);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.map;ListOrderedMap;true;keyList;;;MapKey of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.map;ListOrderedMap;true;listOrderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;ListOrderedMap;true;listOrderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;ListOrderedMap;true;put;;;Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;ListOrderedMap;true;put;;;Argument[2];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;ListOrderedMap;true;putAll;;;MapKey of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;ListOrderedMap;true;putAll;;;MapValue of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;ListOrderedMap;true;remove;(int);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.map;ListOrderedMap;true;setValue;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;ListOrderedMap;true;valueList;;;MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.map;MultiKeyMap;true;get;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.map;MultiKeyMap;true;put;(Object,Object,Object);;Argument[0..1];Element of MapKey of Argument[-1];valueorg.apache.commons.collections4.map;MultiKeyMap;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;MultiKeyMap;true;put;(Object,Object,Object,Object);;Argument[0..2];Element of MapKey of Argument[-1];valueorg.apache.commons.collections4.map;MultiKeyMap;true;put;(Object,Object,Object,Object);;Argument[3];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object);;Argument[0..3];Element of MapKey of Argument[-1];valueorg.apache.commons.collections4.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object);;Argument[4];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object,Object);;Argument[0..4];Element of MapKey of Argument[-1];valueorg.apache.commons.collections4.map;MultiKeyMap;true;put;(Object,Object,Object,Object,Object,Object);;Argument[5];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;MultiKeyMap;true;put;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.map;MultiKeyMap;true;removeMultiKey;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.map;MultiValueMap;true;getCollection;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.map;MultiValueMap;true;iterator;();;Element of MapValue of Argument[-1];MapValue of Element of ReturnValue;valueorg.apache.commons.collections4.map;MultiValueMap;true;iterator;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;valueorg.apache.commons.collections4.map;MultiValueMap;true;iterator;(Object);;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.map;MultiValueMap;true;multiValueMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.apache.commons.collections4.map;MultiValueMap;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;MultiValueMap;true;putAll;(Map);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4.map;MultiValueMap;true;putAll;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4.map;MultiValueMap;true;putAll;(Object,Collection);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;MultiValueMap;true;putAll;(Object,Collection);;Element of Argument[1];Element of MapValue of Argument[-1];valueorg.apache.commons.collections4.map;MultiValueMap;true;values;;;Element of MapValue of Argument[-1];Element of ReturnValue;valueorg.apache.commons.collections4.map;PassiveExpiringMap;true;PassiveExpiringMap;(ExpirationPolicy,Map);;MapKey of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;PassiveExpiringMap;true;PassiveExpiringMap;(ExpirationPolicy,Map);;MapValue of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;PassiveExpiringMap;true;PassiveExpiringMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;PassiveExpiringMap;true;PassiveExpiringMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,Map);;MapKey of Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,Map);;MapValue of Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,TimeUnit,Map);;MapKey of Argument[2];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;PassiveExpiringMap;true;PassiveExpiringMap;(long,TimeUnit,Map);;MapValue of Argument[2];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;PredicatedMap;true;predicatedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;PredicatedMap;true;predicatedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;PredicatedSortedMap;true;predicatedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;PredicatedSortedMap;true;predicatedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;SingletonMap;true;SingletonMap;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;SingletonMap;true;SingletonMap;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;SingletonMap;true;SingletonMap;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;SingletonMap;true;SingletonMap;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;SingletonMap;true;SingletonMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;SingletonMap;true;SingletonMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;SingletonMap;true;SingletonMap;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.map;SingletonMap;true;SingletonMap;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;SingletonMap;true;setValue;;;Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.map;TransformedMap;true;transformingMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;TransformedMap;true;transformingMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;TransformedSortedMap;true;transformingSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;TransformedSortedMap;true;transformingSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;UnmodifiableEntrySet;true;unmodifiableEntrySet;;;MapKey of Element of Argument[0];MapKey of Element of ReturnValue;valueorg.apache.commons.collections4.map;UnmodifiableEntrySet;true;unmodifiableEntrySet;;;MapValue of Element of Argument[0];MapValue of Element of ReturnValue;valueorg.apache.commons.collections4.map;UnmodifiableMap;true;unmodifiableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;UnmodifiableMap;true;unmodifiableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;UnmodifiableOrderedMap;true;unmodifiableOrderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;UnmodifiableOrderedMap;true;unmodifiableOrderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.map;UnmodifiableSortedMap;true;unmodifiableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.map;UnmodifiableSortedMap;true;unmodifiableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valuejakarta.ws.rs.core;HttpHeaders;true;getRequestHeaders;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;PathSegment;true;getMatrixParameters;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Response$ResponseBuilder;true;entity;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3;RegExUtils;false;replaceFirst;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;replaceFirst;;;Argument[2];ReturnValue;taintjakarta.ws.rs.core;Response$ResponseBuilder;true;build;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Response$ResponseBuilder;true;clone;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;removePattern;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;PathSegment;true;getMatrixParameters;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Response$ResponseBuilder;true;entity;;;Argument[0];Argument[-1];taintjavax.ws.rs.core;Form;false;Form;;;Element of MapValue of Argument[0];Argument[-1];taintorg.apache.commons.lang3;RegExUtils;false;replacePattern;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;replacePattern;;;Argument[2];ReturnValue;taintorg.apache.commons.text.lookup;StringLookup;true;lookup;;;Argument[-1];ReturnValue;taintcom.fasterxml.jackson.core;JsonFactory;false;createParser;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getAcceptableLanguages;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Form;false;Form;;;Element of MapValue of Argument[0];Argument[-1];taintjavax.ws.rs.core;HttpHeaders;true;getAcceptableMediaTypes;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getAcceptableLanguages;;;Argument[-1];ReturnValue;taintratpack.func;MultiValueMap;true;getAll;;;MapKey of Argument[-1];MapKey of ReturnValue;valueratpack.util;MultiValueMap;true;getAll;;;MapKey of Argument[-1];MapKey of ReturnValue;valuecom.fasterxml.jackson.databind;ObjectMapper;true;valueToTree;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getAcceptableMediaTypes;;;Argument[-1];ReturnValue;taintcom.fasterxml.jackson.databind;ObjectMapper;true;convertValue;;;Argument[0];ReturnValue;taintorg.apache.commons.collections;MultiMapUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valuecom.fasterxml.jackson.databind;ObjectMapper;false;createParser;;;Argument[0];ReturnValue;taintcom.fasterxml.jackson.databind;ObjectReader;false;createParser;;;Argument[0];ReturnValue;taintorg.apache.commons.collections4;MultiMapUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueratpack.func;MultiValueMap;true;asMultimap;;;MapKey of Argument[-1];MapKey of ReturnValue;valueratpack.util;MultiValueMap;true;asMultimap;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections;EnumerationUtils;true;get;;;Element of Argument[0];ReturnValue;valueorg.apache.commons.lang3.text;StrLookup;false;mapLookup;;;MapValue of Argument[0];ReturnValue;taintratpack.func;MultiValueMap;true;asMultimap;;;MapValue of Argument[-1];MapValue of ReturnValue;valueratpack.util;MultiValueMap;true;asMultimap;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4;EnumerationUtils;true;get;;;Element of Argument[0];ReturnValue;valueratpack.func;MultiValueMap;true;getAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;valueratpack.util;MultiValueMap;true;getAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;valuecom.fasterxml.jackson.databind;ObjectMapper;true;valueToTree;;;MapValue of Argument[0];ReturnValue;taintorg.apache.commons.collections.queue;CircularFifoQueue;true;get;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections;MultiMapUtils;true;getCollection;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections4.queue;CircularFifoQueue;true;get;;;Element of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;MultiMapUtils;true;getCollection;;;MapValue of Argument[0];ReturnValue;valueratpack.func;MultiValueMap;true;getAll;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;valueratpack.util;MultiValueMap;true;getAll;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;valueratpack.handling;Context;true;parse;(ratpack.http.TypedData,ratpack.parse.Parse);;Argument[0];ReturnValue;taintorg.apache.commons.collections;BagUtils;true;collectionBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;BagUtils;true;predicatedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;BagUtils;true;collectionBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;BagUtils;true;predicatedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SplitMapUtils;true;readableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;SplitMapUtils;true;writableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.properties;AbstractPropertiesFactory;true;load;(URI);;Argument[0];ReturnValue;taintorg.apache.commons.collections.properties;AbstractPropertiesFactory;true;load;(URL);;Argument[0];ReturnValue;taintorg.apache.commons.collections.trie;AbstractPatriciaTrie;true;selectKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;SplitMapUtils;true;readableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;SplitMapUtils;true;writableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;BagUtils;true;synchronizedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;BagUtils;true;transformingBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;BagUtils;true;unmodifiableBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;TrieUtils;true;unmodifiableTrie;;;MapKey of Argument[0];MapKey of ReturnValue;valuecom.fasterxml.jackson.databind;ObjectMapper;true;valueToTree;;;Element of MapValue of Argument[0];ReturnValue;taintorg.apache.commons.collections.properties;AbstractPropertiesFactory;true;load;(File);;Argument[0];ReturnValue;taintorg.apache.commons.collections.properties;AbstractPropertiesFactory;true;load;(Path);;Argument[0];ReturnValue;taintorg.apache.commons.collections4.properties;AbstractPropertiesFactory;true;load;(URI);;Argument[0];ReturnValue;taintorg.apache.commons.collections4.properties;AbstractPropertiesFactory;true;load;(URL);;Argument[0];ReturnValue;taintorg.apache.commons.collections4.trie;AbstractPatriciaTrie;true;selectKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;BagUtils;true;synchronizedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;BagUtils;true;transformingBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;BagUtils;true;unmodifiableBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;TrieUtils;true;unmodifiableTrie;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.properties;AbstractPropertiesFactory;true;load;(File);;Argument[0];ReturnValue;taintorg.apache.commons.collections4.properties;AbstractPropertiesFactory;true;load;(Path);;Argument[0];ReturnValue;taintorg.apache.commons.collections;QueueUtils;true;predicatedQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.text.lookup;StringLookupFactory;false;mapStringLookup;;;MapValue of Argument[0];ReturnValue;taintratpack.core.handling;Context;true;parse;(ratpack.http.TypedData,ratpack.parse.Parse);;Argument[0];ReturnValue;taintorg.apache.commons.collections.properties;AbstractPropertiesFactory;true;load;(Reader);;Argument[0];ReturnValue;taintorg.apache.commons.collections.properties;AbstractPropertiesFactory;true;load;(String);;Argument[0];ReturnValue;taintorg.apache.commons.collections4;QueueUtils;true;predicatedQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;SplitMapUtils;true;readableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;SplitMapUtils;true;writableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valuejavax.json.stream;JsonParserFactory;false;createParser;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createArrayBuilder;(Collection);;Element of Argument[0];ReturnValue;taintjavax.json;Json;false;createArrayBuilder;(JsonArray);;Argument[0];ReturnValue;taintjavax.json;Json;false;createDiff;;;Argument[0..1];ReturnValue;taintjavax.json;Json;false;createMergeDiff;;;Argument[0..1];ReturnValue;taintjavax.json;Json;false;createMergePatch;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createObjectBuilder;(JsonObject);;Argument[0];ReturnValue;taintjavax.json;Json;false;createObjectBuilder;(Map);;MapKey of Argument[0];ReturnValue;taintjavax.json;Json;false;createObjectBuilder;(Map);;MapValue of Argument[0];ReturnValue;taintjavax.json;Json;false;createPatch;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createPatchBuilder;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createPointer;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createReader;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createValue;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createWriter;;;Argument[0];ReturnValue;taintjavax.json;Json;false;decodePointer;;;Argument[0];ReturnValue;taintjavax.json;Json;false;encodePointer;;;Argument[0];ReturnValue;taintjavax.json;JsonArray;false;getBoolean;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getBoolean;;;Argument[1];ReturnValue;valuejavax.json;JsonArray;false;getInt;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getInt;;;Argument[1];ReturnValue;valuejavax.json;JsonArray;false;getJsonArray;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getJsonNumber;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getJsonObject;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getJsonString;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getString;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getString;;;Argument[1];ReturnValue;valuejavax.json;JsonArray;false;getValuesAs;;;Argument[-1];ReturnValue;taintjavax.json;JsonArrayBuilder;false;add;(BigDecimal);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(BigInteger);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(JsonArrayBuilder);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(JsonObjectBuilder);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(JsonValue);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(String);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(boolean);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(double);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,BigDecimal);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,BigInteger);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,JsonArrayBuilder);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,JsonObjectBuilder);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,JsonValue);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,String);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,boolean);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,double);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,int);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,long);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(long);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;;;Argument[-1];ReturnValue;valuejavax.json;JsonArrayBuilder;false;addAll;;;Argument[-1];ReturnValue;valuejavax.json;JsonArrayBuilder;false;addAll;;;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;addNull;;;Argument[-1];ReturnValue;valuejavax.json;JsonArrayBuilder;false;build;;;Argument[-1];ReturnValue;taintjavax.json;JsonArrayBuilder;false;remove;;;Argument[-1];ReturnValue;valuejavax.json;JsonArrayBuilder;false;set;;;Argument[-1];ReturnValue;valuejavax.json;JsonArrayBuilder;false;set;;;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;setNull;;;Argument[-1];ReturnValue;valuejavax.json;JsonMergePatch;false;apply;;;Argument[-1];ReturnValue;taintjavax.json;JsonMergePatch;false;apply;;;Argument[0];ReturnValue;taintjavax.json;JsonMergePatch;false;toJsonValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;bigDecimalValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;bigIntegerValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;bigIntegerValueExact;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;doubleValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;intValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;intValueExact;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;longValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;longValueExact;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;numberValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getBoolean;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getBoolean;;;Argument[1];ReturnValue;valuejavax.json;JsonObject;false;getInt;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getInt;;;Argument[1];ReturnValue;valuejavax.json;JsonObject;false;getJsonArray;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getJsonNumber;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getJsonObject;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getJsonString;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getString;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getString;;;Argument[1];ReturnValue;valuejavax.json;JsonObjectBuilder;false;add;;;Argument[-1];ReturnValue;valuejavax.json;JsonObjectBuilder;false;add;;;Argument[1];Argument[-1];taintjavax.json;JsonObjectBuilder;false;addAll;;;Argument[-1];ReturnValue;valuejavax.json;JsonObjectBuilder;false;addAll;;;Argument[0];ReturnValue;valuejavax.json;JsonObjectBuilder;false;addNull;;;Argument[-1];ReturnValue;valuejavax.json;JsonObjectBuilder;false;build;;;Argument[-1];ReturnValue;taintjavax.json;JsonObjectBuilder;false;remove;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatch;false;apply;;;Argument[-1];ReturnValue;taintjavax.json;JsonPatch;false;apply;;;Argument[0];ReturnValue;taintjavax.json;JsonPatch;false;toJsonArray;;;Argument[-1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;add;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;add;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;build;;;Argument[-1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;copy;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;copy;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;move;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;move;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;remove;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;remove;;;Argument[0];ReturnValue;taintjavax.json;JsonPatchBuilder;false;replace;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;replace;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;test;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;test;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPointer;false;add;;;Argument[-1];ReturnValue;taintjavax.json;JsonPointer;false;add;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPointer;false;getValue;;;Argument[0];ReturnValue;taintjavax.json;JsonPointer;false;remove;;;Argument[0];ReturnValue;taintjavax.json;JsonPointer;false;replace;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPointer;false;toString;;;Argument[-1];ReturnValue;taintjavax.json;JsonReader;false;read;;;Argument[-1];ReturnValue;taintjavax.json;JsonReader;false;readArray;;;Argument[-1];ReturnValue;taintjavax.json;JsonReader;false;readObject;;;Argument[-1];ReturnValue;taintjavax.json;JsonReader;false;readValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonReaderFactory;false;createReader;;;Argument[0];ReturnValue;taintjavax.json;JsonString;false;getChars;;;Argument[-1];ReturnValue;taintjavax.json;JsonString;false;getString;;;Argument[-1];ReturnValue;taintjavax.json;JsonStructure;true;getValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonValue;true;asJsonArray;;;Argument[-1];ReturnValue;taintjavax.json;JsonValue;true;asJsonObject;;;Argument[-1];ReturnValue;taintjavax.json;JsonValue;true;toString;;;Argument[-1];ReturnValue;taintjavax.json;JsonWriter;false;write;;;Argument[0];Argument[-1];taintjavax.json;JsonWriter;false;writeArray;;;Argument[0];Argument[-1];taintjavax.json;JsonWriter;false;writeObject;;;Argument[0];Argument[-1];taintjavax.json;JsonWriterFactory;false;createWriter;;;Argument[-1];Argument[0];taintjavax.ws.rs.core;UriBuilder;false;fromLink;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;false;fromPath;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;false;fromUri;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;build;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;build;;;ArrayElement of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromEncoded;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromEncoded;;;ArrayElement of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;MapKey of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;MapValue of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromMap;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromMap;;;MapKey of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromMap;;;MapValue of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;clone;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;fragment;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;fragment;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;host;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;host;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;matrixParam;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;matrixParam;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;matrixParam;;;ArrayElement of Argument[1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;path;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;path;;;Argument[0..1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;queryParam;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;queryParam;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;queryParam;;;ArrayElement of Argument[1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceMatrix;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;replaceMatrix;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;ArrayElement of Argument[1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replacePath;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;replacePath;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceQuery;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;replaceQuery;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceQueryParam;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;replaceQueryParam;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceQueryParam;;;ArrayElement of Argument[1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplate;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;resolveTemplate;;;Argument[0..2];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplateFromEncoded;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;resolveTemplateFromEncoded;;;Argument[0..1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplates;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;resolveTemplates;;;MapKey of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplates;;;MapValue of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;MapKey of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;MapValue of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;scheme;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;scheme;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;schemeSpecificPart;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;schemeSpecificPart;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;segment;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;segment;;;ArrayElement of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;toTemplate;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;uri;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;uri;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;userInfo;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;userInfo;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getAbsolutePath;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getAbsolutePathBuilder;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getPath;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getPathParameters;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getPathSegments;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getQueryParameters;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getRequestUri;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getRequestUriBuilder;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;relativize;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;resolve;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;resolve;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;MultivaluedMap;true;add;;;Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;add;;;Argument[1];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;addAll;(Object,List);;Element of Argument[1];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;addAll;(Object,Object[]);;ArrayElement of Argument[1];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;addAll;;;Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;addFirst;;;Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;addFirst;;;Argument[1];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;getFirst;;;Element of MapValue of Argument[-1];ReturnValue;valuejavax.ws.rs.core;MultivaluedMap;true;putSingle;;;Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;putSingle;;;Argument[1];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;Response$ResponseBuilder;true;type;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;status;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;lastModified;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;replaceAll;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;location;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;header;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;allow;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;cacheControl;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;contentLocation;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;cookie;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;encoding;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;entity;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;expires;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;language;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;link;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;links;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;tag;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;variant;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;variants;;;Argument[-1];ReturnValue;valuejakartajakarta.json.stream;JsonParserFactory;false;createParser;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createArrayBuilder;(Collection);;Element of Argument[0];ReturnValue;taintjakarta.json;Json;false;createArrayBuilder;(JsonArray);;Argument[0];ReturnValue;taintjakarta.json;Json;false;createDiff;;;Argument[0..1];ReturnValue;taintjakarta.json;Json;false;createMergeDiff;;;Argument[0..1];ReturnValue;taintjakarta.json;Json;false;createMergePatch;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createObjectBuilder;(JsonObject);;Argument[0];ReturnValue;taintjakarta.json;Json;false;createObjectBuilder;(Map);;MapKey of Argument[0];ReturnValue;taintjakarta.json;Json;false;createObjectBuilder;(Map);;MapValue of Argument[0];ReturnValue;taintjakarta.json;Json;false;createPatch;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createPatchBuilder;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createPointer;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createReader;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createValue;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createWriter;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;decodePointer;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;encodePointer;;;Argument[0];ReturnValue;taintjakarta.json;JsonArray;false;getBoolean;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getBoolean;;;Argument[1];ReturnValue;valuejakarta.json;JsonArray;false;getInt;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getInt;;;Argument[1];ReturnValue;valuejakarta.json;JsonArray;false;getJsonArray;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getJsonNumber;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getJsonObject;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getJsonString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getString;;;Argument[1];ReturnValue;valuejakarta.json;JsonArray;false;getValuesAs;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArrayBuilder;false;add;(BigDecimal);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(BigInteger);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(JsonArrayBuilder);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(JsonObjectBuilder);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(JsonValue);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(String);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(boolean);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(double);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,BigDecimal);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,BigInteger);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,JsonArrayBuilder);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,JsonObjectBuilder);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,JsonValue);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,String);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,boolean);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,double);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,int);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,long);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(long);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;;;Argument[-1];ReturnValue;valuejakarta.json;JsonArrayBuilder;false;addAll;;;Argument[-1];ReturnValue;valuejakarta.json;JsonArrayBuilder;false;addAll;;;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;addNull;;;Argument[-1];ReturnValue;valuejakarta.json;JsonArrayBuilder;false;build;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArrayBuilder;false;remove;;;Argument[-1];ReturnValue;valuejakarta.json;JsonArrayBuilder;false;set;;;Argument[-1];ReturnValue;valuejakarta.json;JsonArrayBuilder;false;set;;;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;setNull;;;Argument[-1];ReturnValue;valuejakarta.json;JsonMergePatch;false;apply;;;Argument[-1];ReturnValue;taintjakarta.json;JsonMergePatch;false;apply;;;Argument[0];ReturnValue;taintjakarta.json;JsonMergePatch;false;toJsonValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;bigDecimalValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;bigIntegerValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;bigIntegerValueExact;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;doubleValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;intValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;intValueExact;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;longValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;longValueExact;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;numberValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getBoolean;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getBoolean;;;Argument[1];ReturnValue;valuejakarta.json;JsonObject;false;getInt;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getInt;;;Argument[1];ReturnValue;valuejakarta.json;JsonObject;false;getJsonArray;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getJsonNumber;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getJsonObject;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getJsonString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getString;;;Argument[1];ReturnValue;valuejakarta.json;JsonObjectBuilder;false;add;;;Argument[-1];ReturnValue;valuejakarta.json;JsonObjectBuilder;false;add;;;Argument[1];Argument[-1];taintjakarta.json;JsonObjectBuilder;false;addAll;;;Argument[-1];ReturnValue;valuejakarta.json;JsonObjectBuilder;false;addAll;;;Argument[0];ReturnValue;valuejakarta.json;JsonObjectBuilder;false;addNull;;;Argument[-1];ReturnValue;valuejakarta.json;JsonObjectBuilder;false;build;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObjectBuilder;false;remove;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatch;false;apply;;;Argument[-1];ReturnValue;taintjakarta.json;JsonPatch;false;apply;;;Argument[0];ReturnValue;taintjakarta.json;JsonPatch;false;toJsonArray;;;Argument[-1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;add;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;add;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;build;;;Argument[-1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;copy;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;copy;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;move;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;move;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;remove;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;remove;;;Argument[0];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;replace;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;replace;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;test;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;test;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPointer;false;add;;;Argument[-1];ReturnValue;taintjakarta.json;JsonPointer;false;add;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPointer;false;getValue;;;Argument[0];ReturnValue;taintjakarta.json;JsonPointer;false;remove;;;Argument[0];ReturnValue;taintjakarta.json;JsonPointer;false;replace;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPointer;false;toString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonReader;false;read;;;Argument[-1];ReturnValue;taintjakarta.json;JsonReader;false;readArray;;;Argument[-1];ReturnValue;taintjakarta.json;JsonReader;false;readObject;;;Argument[-1];ReturnValue;taintjakarta.json;JsonReader;false;readValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonReaderFactory;false;createReader;;;Argument[0];ReturnValue;taintjakarta.json;JsonString;false;getChars;;;Argument[-1];ReturnValue;taintjakarta.json;JsonString;false;getString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonStructure;true;getValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonValue;true;asJsonArray;;;Argument[-1];ReturnValue;taintjakarta.json;JsonValue;true;asJsonObject;;;Argument[-1];ReturnValue;taintjakarta.json;JsonValue;true;toString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonWriter;false;write;;;Argument[0];Argument[-1];taintjakarta.json;JsonWriter;false;writeArray;;;Argument[0];Argument[-1];taintjakarta.json;JsonWriter;false;writeObject;;;Argument[0];Argument[-1];taintjakarta.json;JsonWriterFactory;false;createWriter;;;Argument[-1];Argument[0];taintjakarta.ws.rs.core;UriBuilder;false;fromLink;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;false;fromPath;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;false;fromUri;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;build;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;build;;;ArrayElement of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromEncoded;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromEncoded;;;ArrayElement of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;MapKey of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;MapValue of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromMap;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromMap;;;MapKey of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromMap;;;MapValue of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;clone;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;fragment;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;fragment;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;host;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;host;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;matrixParam;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;matrixParam;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;matrixParam;;;ArrayElement of Argument[1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;path;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;path;;;Argument[0..1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;queryParam;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;queryParam;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;queryParam;;;ArrayElement of Argument[1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceMatrix;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;replaceMatrix;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;ArrayElement of Argument[1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replacePath;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;replacePath;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceQuery;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;replaceQuery;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceQueryParam;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;replaceQueryParam;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceQueryParam;;;ArrayElement of Argument[1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplate;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;resolveTemplate;;;Argument[0..2];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplateFromEncoded;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;resolveTemplateFromEncoded;;;Argument[0..1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplates;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;resolveTemplates;;;MapKey of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplates;;;MapValue of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;MapKey of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;MapValue of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;scheme;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;scheme;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;schemeSpecificPart;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;schemeSpecificPart;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;segment;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;segment;;;ArrayElement of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;toTemplate;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;uri;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;uri;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;userInfo;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;userInfo;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getAbsolutePath;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getAbsolutePathBuilder;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getPath;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getPathParameters;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getPathSegments;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getQueryParameters;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getRequestUri;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getRequestUriBuilder;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;relativize;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;resolve;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;resolve;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;MultivaluedMap;true;add;;;Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;add;;;Argument[1];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;addAll;(Object,List);;Element of Argument[1];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;addAll;(Object,Object[]);;ArrayElement of Argument[1];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;addAll;;;Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;addFirst;;;Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;addFirst;;;Argument[1];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;getFirst;;;Element of MapValue of Argument[-1];ReturnValue;valuejakarta.ws.rs.core;MultivaluedMap;true;putSingle;;;Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;putSingle;;;Argument[1];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;Response$ResponseBuilder;true;type;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;status;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;lastModified;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;replaceAll;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;location;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;header;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;allow;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;cacheControl;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;contentLocation;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;cookie;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;encoding;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;entity;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;expires;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;language;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;link;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;links;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;tag;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;variant;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;variants;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.trie;AbstractPatriciaTrie;true;selectValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.properties;AbstractPropertiesFactory;true;load;(Reader);;Argument[0];ReturnValue;taintorg.apache.commons.collections4.properties;AbstractPropertiesFactory;true;load;(String);;Argument[0];ReturnValue;taintorg.apache.commons.collections4;SplitMapUtils;true;readableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;SplitMapUtils;true;writableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;BagUtils;true;predicatedSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;QueueUtils;true;synchronizedQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;QueueUtils;true;transformingQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;QueueUtils;true;unmodifiableQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;TrieUtils;true;unmodifiableTrie;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections.trie;PatriciaTrie;true;PatriciaTrie;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.trie;AbstractPatriciaTrie;true;selectValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;BagUtils;true;predicatedSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;QueueUtils;true;synchronizedQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;QueueUtils;true;transformingQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;QueueUtils;true;unmodifiableQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;TrieUtils;true;unmodifiableTrie;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;EnumerationUtils;true;toList;(StringTokenizer);;Argument[0];Element of ReturnValue;taintjakarta.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.trie;PatriciaTrie;true;PatriciaTrie;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4;EnumerationUtils;true;toList;(StringTokenizer);;Argument[0];Element of ReturnValue;taintorg.apache.commons.collections;BagUtils;true;synchronizedSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;BagUtils;true;transformingSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;BagUtils;true;unmodifiableSortedBag;;;Element of Argument[0];Element of ReturnValue;valuejavax.ws.rs.core;AbstractMultivaluedMap;false;AbstractMultivaluedMap;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.trie;AbstractPatriciaTrie;true;select;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4;BagUtils;true;synchronizedSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;BagUtils;true;transformingSortedBag;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;BagUtils;true;unmodifiableSortedBag;;;Element of Argument[0];Element of ReturnValue;valueratpack.handling;Context;true;parse;(ratpack.core.http.TypedData,ratpack.core.parse.Parse);;Argument[0];ReturnValue;taintorg.apache.commons.collections.properties;AbstractPropertiesFactory;true;load;(InputStream);;Argument[0];ReturnValue;taintorg.apache.commons.collections4.trie;AbstractPatriciaTrie;true;select;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections;MultiSetUtils;true;predicatedMultiSet;;;Element of Argument[0];Element of ReturnValue;valuejakarta.ws.rs.core;AbstractMultivaluedMap;false;AbstractMultivaluedMap;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.trie;PatriciaTrie;true;PatriciaTrie;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.properties;AbstractPropertiesFactory;true;load;(InputStream);;Argument[0];ReturnValue;taintorg.apache.commons.collections4;MultiSetUtils;true;predicatedMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.trie;PatriciaTrie;true;PatriciaTrie;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections;MultiSetUtils;true;synchronizedMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;MultiSetUtils;true;unmodifiableMultiSet;;;Element of Argument[0];Element of ReturnValue;valuejavax.ws.rs.core;AbstractMultivaluedMap;false;AbstractMultivaluedMap;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.multiset;HashMultiSet;true;HashMultiSet;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections.trie;AbstractPatriciaTrie;true;select;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4;MultiSetUtils;true;synchronizedMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;MultiSetUtils;true;unmodifiableMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.trie;UnmodifiableTrie;true;unmodifiableTrie;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.multiset;HashMultiSet;true;HashMultiSet;;;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.trie;AbstractPatriciaTrie;true;select;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections;EnumerationUtils;true;toList;(Enumeration);;Element of Argument[0];Element of ReturnValue;valueratpack.core.handling;Context;true;parse;(ratpack.core.http.TypedData,ratpack.core.parse.Parse);;Argument[0];ReturnValue;taintjakarta.ws.rs.core;AbstractMultivaluedMap;false;AbstractMultivaluedMap;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.queue;PredicatedQueue;true;predicatedQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.trie;UnmodifiableTrie;true;unmodifiableTrie;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;EnumerationUtils;true;toList;(Enumeration);;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;MultiMapUtils;true;transformedMultiValuedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.queue;PredicatedQueue;true;predicatedQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;MultiMapUtils;true;transformedMultiValuedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MultiMapUtils;true;unmodifiableMultiValuedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valuejavax.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(MultivaluedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.properties;AbstractPropertiesFactory;true;load;(ClassLoader,String);;Argument[1];ReturnValue;taintorg.apache.commons.collections4;MultiMapUtils;true;unmodifiableMultiValuedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections.queue;TransformedQueue;true;transformingQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.trie;UnmodifiableTrie;true;unmodifiableTrie;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4.properties;AbstractPropertiesFactory;true;load;(ClassLoader,String);;Argument[1];ReturnValue;taintorg.apache.commons.collections;MultiMapUtils;true;getValuesAsBag;;;Element of MapValue of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;MultiMapUtils;true;getValuesAsSet;;;Element of MapValue of Argument[0];Element of ReturnValue;valuejakarta.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(MultivaluedMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.queue;SynchronizedQueue;true;synchronizedQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.queue;UnmodifiableQueue;true;unmodifiableQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.queue;TransformedQueue;true;transformingQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.trie;UnmodifiableTrie;true;unmodifiableTrie;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MultiMapUtils;true;getValuesAsBag;;;Element of MapValue of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;MultiMapUtils;true;getValuesAsSet;;;Element of MapValue of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections;MultiMapUtils;true;getValuesAsList;;;Element of MapValue of Argument[0];Element of ReturnValue;valueratpack.handling;Context;true;parse;(ratpack.core.http.TypedData,ratpack.core.parse.Parse);;Argument[0];MapKey of ReturnValue;taintorg.apache.commons.collections.splitmap;TransformedSplitMap;true;transformingMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4.queue;SynchronizedQueue;true;synchronizedQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.queue;UnmodifiableQueue;true;unmodifiableQueue;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4;MultiMapUtils;true;getValuesAsList;;;Element of MapValue of Argument[0];Element of ReturnValue;valuejavax.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(MultivaluedMap);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.splitmap;TransformedSplitMap;true;transformingMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueratpack.handling;Context;true;parse;(ratpack.core.http.TypedData,ratpack.core.parse.Parse);;Argument[0];MapValue of ReturnValue;taintjakarta.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(MultivaluedMap);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.multiset;PredicatedMultiSet;true;predicatedMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.splitmap;TransformedSplitMap;true;transformingMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueratpack.core.handling;Context;true;parse;(ratpack.core.http.TypedData,ratpack.core.parse.Parse);;Argument[0];MapKey of ReturnValue;taintorg.apache.commons.collections4.multiset;PredicatedMultiSet;true;predicatedMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.splitmap;TransformedSplitMap;true;transformingMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueratpack.core.handling;Context;true;parse;(ratpack.core.http.TypedData,ratpack.core.parse.Parse);;Argument[0];MapValue of ReturnValue;taintorg.apache.commons.collections.multiset;SynchronizedMultiSet;true;synchronizedMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.multiset;UnmodifiableMultiSet;true;unmodifiableMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.multiset;SynchronizedMultiSet;true;synchronizedMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections4.multiset;UnmodifiableMultiSet;true;unmodifiableMultiSet;;;Element of Argument[0];Element of ReturnValue;valueorg.apache.commons.collections.queue;CircularFifoQueue;true;CircularFifoQueue;(Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections4.queue;CircularFifoQueue;true;CircularFifoQueue;(Collection);;Element of Argument[0];Element of Argument[-1];valueorg.apache.commons.collections;MultiMapUtils;true;transformedMultiValuedMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.apache.commons.collections4;MultiMapUtils;true;transformedMultiValuedMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.apache.commons.collections;MultiMapUtils;true;unmodifiableMultiValuedMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.apache.commons.collections4;MultiMapUtils;true;unmodifiableMultiValuedMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.apache.commons.collections.splitmap;AbstractIterableGetMapDecorator;true;AbstractIterableGetMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.splitmap;AbstractIterableGetMapDecorator;true;AbstractIterableGetMapDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.splitmap;AbstractIterableGetMapDecorator;true;AbstractIterableGetMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.splitmap;AbstractIterableGetMapDecorator;true;AbstractIterableGetMapDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.lang3.mutable;MutableObject;false;getValue;;;SyntheticField[org.apache.commons.lang3.mutable.MutableObject.value] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.mutable;MutableObject;false;setValue;;;Argument[0];SyntheticField[org.apache.commons.lang3.mutable.MutableObject.value] of Argument[-1];valueorg.apache.commons.lang3.mutable;MutableObject;false;MutableObject;;;Argument[0];SyntheticField[org.apache.commons.lang3.mutable.MutableObject.value] of Argument[-1];valueBinderArrayandroid.os;Parcel;false;readBinderArray;;;Argument[-1];Argument[0];taintBinderListandroid.os;Parcel;false;readBinderList;;;Argument[-1];Argument[0];taintBooleanArrayandroid.os;Parcel;false;readBooleanArray;;;Argument[-1];Argument[0];taintByteArrayandroid.os;Parcel;false;readByteArray;;;Argument[-1];Argument[0];taintCharArrayandroid.os;Parcel;false;readCharArray;;;Argument[-1];Argument[0];taintDoubleArrayandroid.os;Parcel;false;readDoubleArray;;;Argument[-1];Argument[0];taintFloatArrayandroid.os;Parcel;false;readFloatArray;;;Argument[-1];Argument[0];taintIntArrayandroid.os;Parcel;false;readIntArray;;;Argument[-1];Argument[0];taintandroid.os;Parcel;false;readList;;;Argument[-1];Argument[0];taintLongArrayandroid.os;Parcel;false;readLongArray;;;Argument[-1];Argument[0];taintandroid.os;Parcel;false;readMap;;;Argument[-1];Argument[0];taintParcelableListandroid.os;Parcel;false;readParcelableList;;;Argument[-1];Argument[0];taintStringArrayandroid.os;Parcel;false;readStringArray;;;Argument[-1];Argument[0];taintStringListandroid.os;Parcel;false;readStringList;;;Argument[-1];Argument[0];taintTypedArrayandroid.os;Parcel;false;readTypedArray;;;Argument[-1];Argument[0];taintTypedListandroid.os;Parcel;false;readTypedList;;;Argument[-1];Argument[0];taintArrayandroid.os;Parcel;false;readArray;;;Argument[-1];ReturnValue;taintArrayListandroid.os;Parcel;false;readArrayList;;;Argument[-1];ReturnValue;taintandroid.os;Parcel;false;readBoolean;;;Argument[-1];ReturnValue;taintBundleandroid.os;Parcel;false;readBundle;;;Argument[-1];ReturnValue;taintandroid.os;Parcel;false;readByte;;;Argument[-1];ReturnValue;taintandroid.os;Parcel;false;readDouble;;;Argument[-1];ReturnValue;taintandroid.os;Parcel;false;readFileDescriptor;;;Argument[-1];ReturnValue;taintandroid.os;Parcel;false;readFloat;;;Argument[-1];ReturnValue;taintHashMapandroid.os;Parcel;false;readHashMap;;;Argument[-1];ReturnValue;taintIntandroid.os;Parcel;false;readInt;;;Argument[-1];ReturnValue;taintandroid.os;Parcel;false;readLong;;;Argument[-1];ReturnValue;taintParcelableandroid.os;Parcel;false;readParcelable;;;Argument[-1];ReturnValue;taintParcelableArrayandroid.os;Parcel;false;readParcelableArray;;;Argument[-1];ReturnValue;taintPersistableBundleandroid.os;Parcel;false;readPersistableBundle;;;Argument[-1];ReturnValue;taintandroid.os;Parcel;false;readSerializable;;;Argument[-1];ReturnValue;taintSizeandroid.os;Parcel;false;readSize;;;Argument[-1];ReturnValue;taintSizeFandroid.os;Parcel;false;readSizeF;;;Argument[-1];ReturnValue;taintSparseArrayandroid.os;Parcel;false;readSparseArray;;;Argument[-1];ReturnValue;taintSparseBooleanArrayandroid.os;Parcel;false;readSparseBooleanArray;;;Argument[-1];ReturnValue;taintandroid.os;Parcel;false;readString;;;Argument[-1];ReturnValue;taintStrongBinderandroid.os;Parcel;false;readStrongBinder;;;Argument[-1];ReturnValue;taintTypedObjectandroid.os;Parcel;false;readTypedObject;;;Argument[-1];ReturnValue;taintValueandroid.os;Parcel;false;readValue;;;Argument[-1];ReturnValue;taintjodd.json;JsonParser;false;allowAllClasses;;;Argument[-1];ReturnValue;valuejodd.json;JsonParser;false;allowClass;;;Argument[-1];ReturnValue;valuejodd.json;JsonParser;false;lazy;;;Argument[-1];ReturnValue;valuejodd.json;JsonParser;false;looseMode;;;Argument[-1];ReturnValue;valuejodd.json;JsonParser;false;map;;;Argument[-1];ReturnValue;valuejodd.json;JsonParser;false;setClassMetadataName;;;Argument[-1];ReturnValue;valuejodd.json;JsonParser;false;strictTypes;;;Argument[-1];ReturnValue;valuejodd.json;JsonParser;false;useAltPaths;;;Argument[-1];ReturnValue;valuejodd.json;JsonParser;false;withClassMetadata;;;Argument[-1];ReturnValue;valuejodd.json;JsonParser;false;withValueConverter;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;CONST;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;CONST_BYTE;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;CONST_SHORT;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;clone;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;cloneIfPossible;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;defaultIfNull;;;Argument[0..1];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;firstNonNull;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;getIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;max;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;median;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;min;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;mode;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;requireNonEmpty;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;toString;(Object,String);;Argument[1];ReturnValue;valueorg.springframework.validation;Errors;true;addAllErrors;;;Argument[0];Argument[-1];taintorg.springframework.validation;Errors;true;getAllErrors;;;Argument[-1];ReturnValue;taintorg.springframework.validation;Errors;true;getFieldError;;;Argument[-1];ReturnValue;taintorg.springframework.validation;Errors;true;getFieldErrors;;;Argument[-1];ReturnValue;taintorg.springframework.validation;Errors;true;getGlobalError;;;Argument[-1];ReturnValue;taintorg.springframework.validation;Errors;true;getGlobalErrors;;;Argument[-1];ReturnValue;taintorg.springframework.validation;Errors;true;reject;;;Argument[0];Argument[-1];taintorg.springframework.validation;Errors;true;reject;;;Argument[2];Argument[-1];taintorg.springframework.validation;Errors;true;reject;;;ArrayElement of Argument[1];Argument[-1];taintorg.springframework.validation;Errors;true;rejectValue;(java.lang.String,java.lang.String,java.lang.Object[],java.lang.String);;ArrayElement of Argument[2];Argument[-1];taintorg.springframework.validation;Errors;true;rejectValue;(java.lang.String,java.lang.String,java.lang.String);;Argument[2];Argument[-1];taintorg.springframework.validation;Errors;true;rejectValue;;;Argument[1];Argument[-1];taintorg.springframework.validation;Errors;true;rejectValue;;;Argument[3];Argument[-1];taintorg.springframework.cache;Cache$ValueRetrievalException;false;ValueRetrievalException;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.cache;Cache$ValueRetrievalException;false;getKey;;;MapKey of Argument[-1];ReturnValue;valueorg.springframework.cache;Cache$ValueWrapper;true;get;;;MapValue of Argument[-1];ReturnValue;valueorg.springframework.cache;Cache;true;get;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.cache;Cache;true;get;(Object,Callable);;MapValue of Argument[-1];ReturnValue;valueorg.springframework.cache;Cache;true;get;(Object,Class);;MapValue of Argument[-1];ReturnValue;valueorg.springframework.cache;Cache;true;getNativeCache;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.cache;Cache;true;getNativeCache;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.cache;Cache;true;put;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.cache;Cache;true;put;;;Argument[1];MapValue of Argument[-1];valueorg.springframework.cache;Cache;true;putIfAbsent;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.cache;Cache;true;putIfAbsent;;;Argument[1];MapValue of Argument[-1];valueorg.springframework.cache;Cache;true;putIfAbsent;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.web.multipart;MultipartFile;true;getBytes;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartFile;true;getInputStream;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartFile;true;getName;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartFile;true;getOriginalFilename;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartFile;true;getResource;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartHttpServletRequest;true;getMultipartHeaders;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartHttpServletRequest;true;getRequestHeaders;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartRequest;true;getFile;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartRequest;true;getFileMap;;;Argument[-1];MapValue of ReturnValue;taintorg.springframework.web.multipart;MultipartRequest;true;getFileNames;;;Argument[-1];Element of ReturnValue;taintorg.springframework.web.multipart;MultipartRequest;true;getFiles;;;Argument[-1];Element of ReturnValue;taintorg.springframework.web.multipart;MultipartRequest;true;getMultiFileMap;;;Argument[-1];MapValue of ReturnValue;taintorg.springframework.web.multipart;MultipartResolver;true;resolveMultipart;;;Argument[0];ReturnValue;taintjava.util;Optional;false;filter;;;Element of Argument[-1];Element of ReturnValue;valuejava.util;Optional;false;filter;;;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util;Optional;false;flatMap;;;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util;Optional;false;flatMap;;;ReturnValue of Argument[0];ReturnValue;valuejava.util;Optional;false;get;;;Element of Argument[-1];ReturnValue;valuejava.util;Optional;false;ifPresent;;;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util;Optional;false;ifPresentOrElse;;;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util;Optional;false;map;;;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util;Optional;false;map;;;ReturnValue of Argument[0];Element of ReturnValue;valuejava.util;Optional;false;of;;;Argument[0];Element of ReturnValue;valuejava.util;Optional;false;ofNullable;;;Argument[0];Element of ReturnValue;valuejava.util;Optional;false;or;;;Element of Argument[-1];Element of ReturnValue;valuejava.util;Optional;false;or;;;ReturnValue of Argument[0];ReturnValue;valuejava.util;Optional;false;orElse;;;Argument[0];ReturnValue;valuejava.util;Optional;false;orElse;;;Element of Argument[-1];ReturnValue;valuejava.util;Optional;false;orElseGet;;;Element of Argument[-1];ReturnValue;valuejava.util;Optional;false;orElseGet;;;ReturnValue of Argument[0];ReturnValue;valuejava.util;Optional;false;orElseThrow;;;Element of Argument[-1];ReturnValue;valuejava.util;Optional;false;stream;;;Element of Argument[-1];Element of ReturnValue;valueapply;;;Element of Argument[-1];Element of Parameter[0] of Argument[0];valueratpack.exec;Promise;true;apply;;;Element of Argument[-1];Element of Parameter[0] of Argument[0];valueapply;;;Element of ReturnValue of Argument[0];Element of ReturnValue;valueratpack.exec;Promise;true;apply;;;Element of ReturnValue of Argument[0];Element of ReturnValue;valueblockingMap;;;Element of Argument[-1];Parameter[0] of Argument[0];valueratpack.exec;Promise;true;blockingMap;;;Element of Argument[-1];Parameter[0] of Argument[0];valueblockingMap;;;ReturnValue of Argument[0];Element of ReturnValue;valueratpack.exec;Promise;true;blockingMap;;;ReturnValue of Argument[0];Element of ReturnValue;valuecacheIf;;;Argument[-1];ReturnValue;valueratpack.exec;Promise;true;cacheIf;;;Argument[-1];ReturnValue;valuecacheIf;;;Element of Argument[-1];Parameter[0] of Argument[0];valueratpack.exec;Promise;true;cacheIf;;;Element of Argument[-1];Parameter[0] of Argument[0];valueflatMap;;;Element of Argument[-1];Parameter[0] of Argument[0];valueratpack.exec;Promise;true;flatMap;;;Element of Argument[-1];Parameter[0] of Argument[0];valueflatMap;;;Element of ReturnValue of Argument[0];Element of ReturnValue;valueratpack.exec;Promise;true;flatMap;;;Element of ReturnValue of Argument[0];Element of ReturnValue;valueflatMapError;;;Element of ReturnValue of Argument[1];Element of ReturnValue;valueratpack.exec;Promise;true;flatMapError;;;Element of ReturnValue of Argument[1];Element of ReturnValue;valueflatten;;;Element of ReturnValue of Argument[0];Element of ReturnValue;valueratpack.exec;Promise;true;flatten;;;Element of ReturnValue of Argument[0];Element of ReturnValue;valuemap;;;Element of Argument[-1];Parameter[0] of Argument[0];valueratpack.exec;Promise;true;map;;;Element of Argument[-1];Parameter[0] of Argument[0];valuemap;;;ReturnValue of Argument[0];Element of ReturnValue;valueratpack.exec;Promise;true;map;;;ReturnValue of Argument[0];Element of ReturnValue;valuemapError;;;ReturnValue of Argument[1];Element of ReturnValue;valueratpack.exec;Promise;true;mapError;;;ReturnValue of Argument[1];Element of ReturnValue;valuemapIf;;;Element of Argument[-1];Parameter[0] of Argument[0];valueratpack.exec;Promise;true;mapIf;;;Element of Argument[-1];Parameter[0] of Argument[0];valuemapIf;;;Element of Argument[-1];Parameter[0] of Argument[1];valueratpack.exec;Promise;true;mapIf;;;Element of Argument[-1];Parameter[0] of Argument[1];valuemapIf;;;Element of Argument[-1];Parameter[0] of Argument[2];valueratpack.exec;Promise;true;mapIf;;;Element of Argument[-1];Parameter[0] of Argument[2];valuemapIf;;;ReturnValue of Argument[1];Element of ReturnValue;valueratpack.exec;Promise;true;mapIf;;;ReturnValue of Argument[1];Element of ReturnValue;valuemapIf;;;ReturnValue of Argument[2];Element of ReturnValue;valueratpack.exec;Promise;true;mapIf;;;ReturnValue of Argument[2];Element of ReturnValue;valuenext;;;Argument[-1];ReturnValue;valueratpack.exec;Promise;true;next;;;Argument[-1];ReturnValue;valuenext;;;Element of Argument[-1];Parameter[0] of Argument[0];valueratpack.exec;Promise;true;next;;;Element of Argument[-1];Parameter[0] of Argument[0];valueroute;;;Argument[-1];ReturnValue;valueratpack.exec;Promise;true;route;;;Argument[-1];ReturnValue;valueroute;;;Element of Argument[-1];Parameter[0] of Argument[0];valueratpack.exec;Promise;true;route;;;Element of Argument[-1];Parameter[0] of Argument[0];valueroute;;;Element of Argument[-1];Parameter[0] of Argument[1];valueratpack.exec;Promise;true;route;;;Element of Argument[-1];Parameter[0] of Argument[1];valuesync;;;ReturnValue of Argument[0];Element of ReturnValue;valueratpack.exec;Promise;true;sync;;;ReturnValue of Argument[0];Element of ReturnValue;valuethen;;;Element of Argument[-1];Parameter[0] of Argument[0];valueratpack.exec;Promise;true;then;;;Element of Argument[-1];Parameter[0] of Argument[0];valuevalue;;;Argument[0];Element of ReturnValue;valueratpack.exec;Promise;true;value;;;Argument[0];Element of ReturnValue;valuecom.google.common.cache;Cache;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;valuecom.google.common.cache;Cache;true;asMap;();;MapValue of Argument[-1];MapValue of ReturnValue;valuecom.google.common.cache;Cache;true;get;(Object,Callable);;MapValue of Argument[-1];ReturnValue;valuecom.google.common.cache;Cache;true;getAllPresent;(Iterable);;Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.cache;Cache;true;getAllPresent;(Iterable);;MapKey of Argument[-1];MapKey of ReturnValue;valuecom.google.common.cache;Cache;true;getAllPresent;(Iterable);;MapValue of Argument[-1];MapValue of ReturnValue;valuecom.google.common.cache;Cache;true;getIfPresent;(Object);;MapValue of Argument[-1];ReturnValue;valuecom.google.common.cache;Cache;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];valuecom.google.common.cache;Cache;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];valuecom.google.common.cache;Cache;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuecom.google.common.cache;Cache;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valuecom.google.common.cache;LoadingCache;true;apply;(Object);;MapValue of Argument[-1];ReturnValue;valuecom.google.common.cache;LoadingCache;true;get;(Object);;MapValue of Argument[-1];ReturnValue;valuecom.google.common.cache;LoadingCache;true;getAll;(Iterable);;Element of Argument[0];MapKey of Argument[-1];valuecom.google.common.cache;LoadingCache;true;getAll;(Iterable);;Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.cache;LoadingCache;true;getAll;(Iterable);;MapValue of Argument[-1];MapValue of ReturnValue;valuecom.google.common.cache;LoadingCache;true;getUnchecked;(Object);;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.io;IOUtils;false;buffer;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;copy;;;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;copyLarge;;;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;read;;;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(InputStream,ByteBuffer);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(InputStream,byte[]);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(InputStream,byte[],int,int);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(InputStream,int);;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;readFully;(ReadableByteChannel,ByteBuffer);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(Reader,char[]);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(Reader,char[],int,int);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readLines;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toBufferedInputStream;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toBufferedReader;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toByteArray;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toCharArray;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toInputStream;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toString;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;write;;;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;writeChunked;;;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;writeLines;;;Argument[0];Argument[2];taintorg.apache.commons.io;IOUtils;false;writeLines;;;Argument[1];Argument[2];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.Object[]);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,boolean);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,java.lang.Object);;Argument[0..1];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,java.lang.Object[],boolean);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,java.lang.Object[],boolean);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.builder;ToStringBuilder;false;appendAsObjectToString;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.builder;ToStringBuilder;false;appendSuper;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.builder;ToStringBuilder;false;appendSuper;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;appendToString;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.builder;ToStringBuilder;false;appendToString;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;build;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.builder;ToStringBuilder;false;getStringBuffer;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.builder;ToStringBuilder;false;toString;;;Argument[-1];ReturnValue;taintandroid.content;ComponentName;false;ComponentName;(Context,Class);;Argument[1];Argument[-1];taintandroid.content;ComponentName;false;ComponentName;(Context,String);;Argument[1];Argument[-1];taintandroid.content;ComponentName;false;ComponentName;(Parcel);;Argument[0];Argument[-1];taintandroid.content;ComponentName;false;ComponentName;(String,String);;Argument[0..1];Argument[-1];taintandroid.content;ComponentName;false;createRelative;(Context,String);;Argument[1];ReturnValue;taintandroid.content;ComponentName;false;createRelative;(String,String);;Argument[0..1];ReturnValue;taintandroid.content;ComponentName;false;flattenToShortString;;;Argument[-1];ReturnValue;taintandroid.content;ComponentName;false;flattenToString;;;Argument[-1];ReturnValue;taintandroid.content;ComponentName;false;getClassName;;;Argument[-1];ReturnValue;taintandroid.content;ComponentName;false;getPackageName;;;Argument[-1];ReturnValue;taintandroid.content;ComponentName;false;getShortClassName;;;Argument[-1];ReturnValue;taintandroid.content;ComponentName;false;unflattenFromString;;;Argument[0];ReturnValue;taintandroid.content;Intent;true;Intent;(Context,Class);;Argument[1];Argument[-1];taintandroid.content;Intent;true;Intent;(Intent);;Argument[0];Argument[-1];taintandroid.content;Intent;true;Intent;(String,Uri,Context,Class);;Argument[3];Argument[-1];taintandroid.content;Intent;true;getIntent;(String);;Argument[0];ReturnValue;taintandroid.content;Intent;true;getIntentOld;(String);;Argument[0];ReturnValue;taintandroid.content;Intent;true;parseUri;(String,int);;Argument[0];ReturnValue;taintandroid.content;Intent;true;setClass;;;Argument[1];Argument[-1];taintandroid.content;Intent;true;setClassName;(Context,String);;Argument[1];Argument[-1];taintandroid.content;Intent;true;setClassName;(String,String);;Argument[0..1];Argument[-1];taintandroid.content;Intent;true;setComponent;;;Argument[0];Argument[-1];taintandroid.content;Intent;true;setPackage;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;WordUtils;false;capitalize;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;capitalize;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;capitalizeFully;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;capitalizeFully;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;initials;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;initials;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;swapCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;uncapitalize;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;uncapitalize;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;wrap;(java.lang.String,int,java.lang.String,boolean);;Argument[2];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;wrap;(java.lang.String,int,java.lang.String,boolean,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;wrap;;;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;abbreviate;;;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;abbreviate;;;Argument[3];ReturnValue;taintorg.apache.commons.text;WordUtils;false;capitalize;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;capitalize;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;capitalizeFully;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;capitalizeFully;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;initials;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;initials;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;swapCase;;;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;uncapitalize;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;uncapitalize;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;wrap;(java.lang.String,int,java.lang.String,boolean);;Argument[2];ReturnValue;taintorg.apache.commons.text;WordUtils;false;wrap;(java.lang.String,int,java.lang.String,boolean,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.text;WordUtils;false;wrap;;;Argument[0];ReturnValue;taintorg.springframework.beans;MutablePropertyValues;true;add;(String,Object);;Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;add;(String,Object);;Argument[0];MapKey of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;add;(String,Object);;Argument[1];MapValue of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValue;(PropertyValue);;Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValue;(PropertyValue);;Argument[0];Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValue;(String,Object);;Argument[0];MapKey of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValue;(String,Object);;Argument[1];MapValue of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValues;(Map);;Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValues;(Map);;MapKey of Argument[0];MapKey of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValues;(Map);;MapValue of Argument[0];MapValue of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValues;(PropertyValues);;Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValues;(PropertyValues);;Element of Argument[0];Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;get;;;MapValue of Element of Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;getPropertyValue;;;Element of Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;getPropertyValueList;;;Element of Argument[-1];Element of ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;getPropertyValues;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;setPropertyValueAt;;;Argument[0];Element of Argument[-1];valueorg.springframework.beans;PropertyValue;false;PropertyValue;(PropertyValue);;Argument[0];Argument[-1];valueorg.springframework.beans;PropertyValue;false;PropertyValue;(PropertyValue,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.beans;PropertyValue;false;PropertyValue;(PropertyValue,Object);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.beans;PropertyValue;false;PropertyValue;(String,Object);;Argument[0];MapKey of Argument[-1];valueorg.springframework.beans;PropertyValue;false;PropertyValue;(String,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.beans;PropertyValue;false;getName;;;MapKey of Argument[-1];ReturnValue;valueorg.springframework.beans;PropertyValue;false;getValue;;;MapValue of Argument[-1];ReturnValue;valueorg.springframework.beans;PropertyValues;true;getPropertyValue;;;Element of Argument[-1];ReturnValue;valueorg.springframework.beans;PropertyValues;true;getPropertyValues;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.springframework.ui;ConcurrentModel;false;ConcurrentModel;(Object);;Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ConcurrentModel;false;ConcurrentModel;(String,Object);;Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;ConcurrentModel;false;ConcurrentModel;(String,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.ui;Model;true;addAllAttributes;(Collection);;Element of Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;Model;true;addAllAttributes;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;Model;true;addAllAttributes;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;Model;true;addAllAttributes;;;Argument[-1];ReturnValue;valueorg.springframework.ui;Model;true;addAttribute;(Object);;Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;Model;true;addAttribute;(String,Object);;Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;Model;true;addAttribute;(String,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.ui;Model;true;addAttribute;;;Argument[-1];ReturnValue;valueorg.springframework.ui;Model;true;asMap;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.ui;Model;true;asMap;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.ui;Model;true;getAttribute;;;MapValue of Argument[-1];ReturnValue;valueorg.springframework.ui;Model;true;mergeAttributes;;;Argument[-1];ReturnValue;valueorg.springframework.ui;Model;true;mergeAttributes;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;Model;true;mergeAttributes;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;ModelMap;(Object);;Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;ModelMap;(String,Object);;Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;ModelMap;false;ModelMap;(String,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAllAttributes;(Collection);;Element of Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAllAttributes;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAllAttributes;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAllAttributes;;;Argument[-1];ReturnValue;valueorg.springframework.ui;ModelMap;false;addAttribute;(Object);;Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAttribute;(String,Object);;Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAttribute;(String,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAttribute;;;Argument[-1];ReturnValue;valueorg.springframework.ui;ModelMap;false;getAttribute;;;MapValue of Argument[-1];ReturnValue;valueorg.springframework.ui;ModelMap;false;mergeAttributes;;;Argument[-1];ReturnValue;valueorg.springframework.ui;ModelMap;false;mergeAttributes;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;ModelMap;false;mergeAttributes;;;MapValue of Argument[0];MapValue of Argument[-1];valuejava.io;StringWriter;true;append;;;Argument[-1];ReturnValue;valuejava.io;StringWriter;true;append;;;Argument[0];Argument[-1];taintjava.io;StringWriter;true;write;;;Argument[0];Argument[-1];taintjava.lang;AbstractStringBuilder;true;AbstractStringBuilder;(String);;Argument[0];Argument[-1];taintjava.lang;AbstractStringBuilder;true;append;;;Argument[-1];ReturnValue;valuejava.lang;AbstractStringBuilder;true;append;;;Argument[0];Argument[-1];taintjava.lang;AbstractStringBuilder;true;insert;;;Argument[-1];ReturnValue;valuejava.lang;AbstractStringBuilder;true;insert;;;Argument[1];Argument[-1];taintjava.lang;AbstractStringBuilder;true;replace;;;Argument[-1];ReturnValue;valuejava.lang;AbstractStringBuilder;true;replace;;;Argument[2];Argument[-1];taintjava.lang;AbstractStringBuilder;true;toString;;;Argument[-1];ReturnValue;taintjava.lang;CharSequence;true;subSequence;;;Argument[-1];ReturnValue;taintjava.lang;String;false;String;;;Argument[0];Argument[-1];taintjava.lang;String;false;concat;(String);;Argument[-1];ReturnValue;taintjava.lang;String;false;concat;(String);;Argument[0];ReturnValue;taintjava.lang;String;false;copyValueOf;;;Argument[0];ReturnValue;taintjava.lang;String;false;endsWith;;;Argument[-1];ReturnValue;taintjava.lang;String;false;format;(Locale,String,Object[]);;Argument[1];ReturnValue;taintjava.lang;String;false;format;(Locale,String,Object[]);;ArrayElement of Argument[2];ReturnValue;taintjava.lang;String;false;format;(String,Object[]);;Argument[0];ReturnValue;taintjava.lang;String;false;format;(String,Object[]);;ArrayElement of Argument[1];ReturnValue;taintjava.lang;String;false;formatted;(Object[]);;Argument[-1];ReturnValue;taintjava.lang;String;false;formatted;(Object[]);;ArrayElement of Argument[0];ReturnValue;taintjava.lang;String;false;getBytes;;;Argument[-1];ReturnValue;taintjava.lang;String;false;getChars;;;Argument[-1];Argument[2];taintjava.lang;String;false;indent;;;Argument[-1];ReturnValue;taintjava.lang;String;false;intern;;;Argument[-1];ReturnValue;taintjava.lang;String;false;join;;;Argument[0..1];ReturnValue;taintjava.lang;String;false;repeat;(int);;Argument[-1];ReturnValue;taintjava.lang;String;false;split;;;Argument[-1];ReturnValue;taintjava.lang;String;false;strip;;;Argument[-1];ReturnValue;taintjava.lang;String;false;stripIndent;;;Argument[-1];ReturnValue;taintjava.lang;String;false;stripLeading;;;Argument[-1];ReturnValue;taintjava.lang;String;false;stripTrailing;;;Argument[-1];ReturnValue;taintjava.lang;String;false;substring;;;Argument[-1];ReturnValue;taintjava.lang;String;false;toCharArray;;;Argument[-1];ReturnValue;taintjava.lang;String;false;toLowerCase;;;Argument[-1];ReturnValue;taintjava.lang;String;false;toString;;;Argument[-1];ReturnValue;valuejava.lang;String;false;toUpperCase;;;Argument[-1];ReturnValue;taintjava.lang;String;false;translateEscapes;;;Argument[-1];ReturnValue;taintjava.lang;String;false;trim;;;Argument[-1];ReturnValue;taintjava.lang;String;false;valueOf;(char);;Argument[0];ReturnValue;taintjava.lang;String;false;valueOf;(char[]);;Argument[0];ReturnValue;taintjava.lang;String;false;valueOf;(char[],int,int);;Argument[0];ReturnValue;taintjava.lang;StringBuffer;true;StringBuffer;(CharSequence);;Argument[0];Argument[-1];taintjava.lang;StringBuffer;true;StringBuffer;(String);;Argument[0];Argument[-1];taintjava.lang;StringBuilder;true;StringBuilder;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.tuple;ImmutablePair;false;ImmutablePair;(java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutablePair;false;ImmutablePair;(java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutablePair;false;getLeft;;;Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutablePair;false;getRight;;;Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutablePair;false;left;;;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutablePair;false;of;(java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutablePair;false;of;(java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutablePair;false;right;;;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutablePair;false;MutablePair;(java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.MutablePair.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutablePair;false;MutablePair;(java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutablePair;false;getLeft;;;Field[org.apache.commons.lang3.tuple.MutablePair.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;MutablePair;false;getRight;;;Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;MutablePair;false;of;(java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.MutablePair.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutablePair;false;of;(java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.MutablePair.right] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutablePair;false;setLeft;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutablePair.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutablePair;false;setRight;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutablePair;false;setValue;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;Pair;false;getKey;;;Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;Pair;false;getKey;;;Field[org.apache.commons.lang3.tuple.MutablePair.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;Pair;false;getValue;;;Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;Pair;false;getValue;;;Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;Pair;false;of;(java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;Pair;false;of;(java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of ReturnValue;valueorg.apache.commons.lang3.text;StrTokenizer;false;StrTokenizer;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrTokenizer;false;clone;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;getCSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;getContent;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;getTSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;getTokenArray;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;getTokenList;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;next;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;nextToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;previous;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;previousToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;reset;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrTokenizer;false;reset;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;StrTokenizer;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StrTokenizer;false;clone;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;getCSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;getContent;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;getTSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;getTokenArray;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;getTokenList;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;next;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;nextToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;previous;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;previousToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;reset;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StrTokenizer;false;reset;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;StringTokenizer;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StringTokenizer;false;clone;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;getCSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;getContent;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;getTSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;getTokenArray;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;getTokenList;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;next;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;nextToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;previous;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;previousToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;reset;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StringTokenizer;false;reset;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3;ArrayUtils;false;add;(boolean[],boolean);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(byte[],byte);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(char[],char);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(double[],double);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(float[],float);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(int[],int);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(java.lang.Object[],java.lang.Object);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(long[],long);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(short[],short);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;;;Argument[2];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;addAll;;;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;addFirst;;;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;addFirst;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;clone;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;get;(java.lang.Object[],int,java.lang.Object);;Argument[2];ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;get;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;insert;;;ArrayElement of Argument[1..2];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;nullToEmpty;(java.lang.Object[],java.lang.Class);;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;nullToEmpty;(java.lang.String[]);;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;remove;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;removeAll;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;removeAllOccurences;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;removeAllOccurrences;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;removeElement;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;removeElements;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;subarray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toArray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toMap;;;ArrayElement of ArrayElement of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toMap;;;ArrayElement of ArrayElement of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toMap;;;MapKey of ArrayElement of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toMap;;;MapValue of ArrayElement of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toObject;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toPrimitive;;;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toPrimitive;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueandroid.net;Uri$Builder;false;appendEncodedPath;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;appendEncodedPath;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;appendPath;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;appendPath;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;appendQueryParameter;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;appendQueryParameter;;;Argument[0..1];Argument[-1];taintandroid.net;Uri$Builder;false;authority;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;authority;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;build;;;Argument[-1];ReturnValue;taintandroid.net;Uri$Builder;false;clearQuery;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;encodedAuthority;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;encodedAuthority;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;encodedFragment;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;encodedFragment;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;encodedOpaquePart;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;encodedOpaquePart;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;encodedPath;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;encodedPath;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;encodedQuery;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;encodedQuery;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;fragment;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;fragment;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;opaquePart;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;opaquePart;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;path;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;path;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;query;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;query;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;scheme;;;Argument[-1];ReturnValue;valueandroid.net;Uri$Builder;false;scheme;;;Argument[0];Argument[-1];taintandroid.net;Uri$Builder;false;toString;;;Argument[-1];ReturnValue;taintandroid.net;Uri;false;decode;;;Argument[0];ReturnValue;taintandroid.net;Uri;false;encode;;;Argument[0];ReturnValue;taintandroid.net;Uri;false;fromFile;;;Argument[0];ReturnValue;taintandroid.net;Uri;false;fromParts;;;Argument[0..2];ReturnValue;taintandroid.net;Uri;false;parse;;;Argument[0];ReturnValue;taintandroid.net;Uri;false;withAppendedPath;;;Argument[0..1];ReturnValue;taintandroid.net;Uri;false;writeToParcel;;;Argument[1];Argument[0];taintandroid.net;Uri;true;buildUpon;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getAuthority;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getEncodedAuthority;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getEncodedFragment;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getEncodedPath;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getEncodedQuery;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getEncodedSchemeSpecificPart;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getEncodedUserInfo;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getFragment;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getHost;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getLastPathSegment;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getPath;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getPathSegments;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getQuery;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getQueryParameter;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getQueryParameterNames;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getQueryParameters;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getScheme;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getSchemeSpecificPart;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;getUserInfo;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;normalizeScheme;;;Argument[-1];ReturnValue;taintandroid.net;Uri;true;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.tuple;ImmutableTriple;false;ImmutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutableTriple.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;ImmutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutableTriple.middle] of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;ImmutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[2];Field[org.apache.commons.lang3.tuple.ImmutableTriple.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;getLeft;;;Field[org.apache.commons.lang3.tuple.ImmutableTriple.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;getMiddle;;;Field[org.apache.commons.lang3.tuple.ImmutableTriple.middle] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;getRight;;;Field[org.apache.commons.lang3.tuple.ImmutableTriple.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutableTriple.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutableTriple.middle] of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[2];Field[org.apache.commons.lang3.tuple.ImmutableTriple.right] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;MutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.MutableTriple.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutableTriple;false;MutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.MutableTriple.middle] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutableTriple;false;MutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[2];Field[org.apache.commons.lang3.tuple.MutableTriple.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutableTriple;false;getLeft;;;Field[org.apache.commons.lang3.tuple.MutableTriple.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;getMiddle;;;Field[org.apache.commons.lang3.tuple.MutableTriple.middle] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;getRight;;;Field[org.apache.commons.lang3.tuple.MutableTriple.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.MutableTriple.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.MutableTriple.middle] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[2];Field[org.apache.commons.lang3.tuple.MutableTriple.right] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;setLeft;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutableTriple.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutableTriple;false;setMiddle;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutableTriple.middle] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutableTriple;false;setRight;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutableTriple.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;Triple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutableTriple.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;Triple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutableTriple.middle] of ReturnValue;valueorg.apache.commons.lang3.tuple;Triple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[2];Field[org.apache.commons.lang3.tuple.ImmutableTriple.right] of ReturnValue;valueandroid.content;ContentProvider;true;query;(Uri,String[],String,String[],String);;Argument[0];ReturnValue;taintandroid.content;ContentProvider;true;query;(Uri,String[],String,String[],String,CancellationSignal);;Argument[0];ReturnValue;taintandroid.content;ContentResolver;true;query;(Uri,String[],String,String[],String);;Argument[0];ReturnValue;taintandroid.content;ContentResolver;true;query;(Uri,String[],String,String[],String,CancellationSignal);;Argument[0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;appendColumns;(StringBuilder,String[]);;ArrayElement of Argument[1];Argument[0];taintandroid.database.sqlite;SQLiteQueryBuilder;true;appendWhere;(CharSequence);;Argument[0];Argument[-1];taintandroid.database.sqlite;SQLiteQueryBuilder;true;appendWhereStandalone;(CharSequence);;Argument[0];Argument[-1];taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String,String,String,String);;Argument[-1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String,String,String,String);;Argument[1..5];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String,String,String,String);;ArrayElement of Argument[0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String[],String,String,String,String);;Argument[-1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String[],String,String,String,String);;Argument[1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String[],String,String,String,String);;Argument[3..6];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String[],String,String,String,String);;ArrayElement of Argument[0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQueryString;(boolean,String,String[],String,String,String,String,String);;Argument[1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQueryString;(boolean,String,String[],String,String,String,String,String);;Argument[3..7];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQueryString;(boolean,String,String[],String,String,String,String,String);;ArrayElement of Argument[2];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionQuery;(String[],String,String);;Argument[-1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionQuery;(String[],String,String);;Argument[1..2];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionQuery;(String[],String,String);;ArrayElement of Argument[0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String,String);;Argument[-1..0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String,String);;Argument[4..7];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String,String);;ArrayElement of Argument[1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String,String);;Element of Argument[2];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String[],String,String);;Argument[-1..0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String[],String,String);;Argument[4..5];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String[],String,String);;Argument[7..8];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String[],String,String);;ArrayElement of Argument[1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String[],String,String);;Element of Argument[2];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;setProjectionMap;(Map);;MapKey of Argument[0];Argument[-1];taintandroid.database.sqlite;SQLiteQueryBuilder;true;setProjectionMap;(Map);;MapValue of Argument[0];Argument[-1];taintandroid.database.sqlite;SQLiteQueryBuilder;true;setTables;(String);;Argument[0];Argument[-1];taintandroid.database;DatabaseUtils;false;appendSelectionArgs;(String[],String[]);;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;taintandroid.database;DatabaseUtils;false;concatenateWhere;(String,String);;Argument[0..1];ReturnValue;taintcn.hutool.core.codec;Base64;true;decode;;;Argument[0];ReturnValue;taintcom.esotericsoftware.kryo.io;Input;false;Input;;;Argument[0];Argument[-1];taintcom.esotericsoftware.kryo5.io;Input;false;Input;;;Argument[0];Argument[-1];taintjava.beans;XMLDecoder;false;XMLDecoder;;;Argument[0];Argument[-1];taintjava.io;BufferedInputStream;false;BufferedInputStream;;;Argument[0];Argument[-1];taintjava.io;BufferedReader;false;BufferedReader;;;Argument[0];Argument[-1];taintjava.io;BufferedReader;true;readLine;;;Argument[-1];ReturnValue;taintjava.io;ByteArrayInputStream;false;ByteArrayInputStream;;;Argument[0];Argument[-1];taintjava.io;ByteArrayOutputStream;false;toByteArray;;;Argument[-1];ReturnValue;taintjava.io;ByteArrayOutputStream;false;toString;;;Argument[-1];ReturnValue;taintjava.io;ByteArrayOutputStream;false;writeTo;;;Argument[-1];Argument[0];taintjava.io;CharArrayReader;false;CharArrayReader;;;Argument[0];Argument[-1];taintjava.io;DataInputStream;false;DataInputStream;;;Argument[0];Argument[-1];taintjava.io;File;false;File;;;Argument[0];Argument[-1];taintjava.io;File;false;File;;;Argument[1];Argument[-1];taintjava.io;File;false;toPath;;;Argument[-1];ReturnValue;taintjava.io;File;false;toURI;;;Argument[-1];ReturnValue;taintjava.io;FilterOutputStream;true;FilterOutputStream;(OutputStream);;Argument[0];Argument[-1];taintjava.io;InputStream;true;read;(byte[]);;Argument[-1];Argument[0];taintjava.io;InputStream;true;read;(byte[],int,int);;Argument[-1];Argument[0];taintjava.io;InputStream;true;readAllBytes;;;Argument[-1];ReturnValue;taintjava.io;InputStream;true;readNBytes;(byte[],int,int);;Argument[-1];Argument[0];taintjava.io;InputStream;true;readNBytes;(int);;Argument[-1];ReturnValue;taintjava.io;InputStream;true;transferTo;(OutputStream);;Argument[-1];Argument[0];taintjava.io;InputStreamReader;false;InputStreamReader;;;Argument[0];Argument[-1];taintjava.io;ObjectInputStream;false;ObjectInputStream;;;Argument[0];Argument[-1];taintjava.io;OutputStream;true;write;(byte[]);;Argument[0];Argument[-1];taintjava.io;OutputStream;true;write;(byte[],int,int);;Argument[0];Argument[-1];taintjava.io;OutputStream;true;write;(int);;Argument[0];Argument[-1];taintjava.io;Reader;true;read;();;Argument[-1];ReturnValue;taintjava.io;Reader;true;read;;;Argument[-1];Argument[0];taintjava.io;StringReader;false;StringReader;;;Argument[0];Argument[-1];taintjava.lang;System;false;arraycopy;;;Argument[0];Argument[2];taintjava.net;URI;false;URI;(String);;Argument[0];Argument[-1];taintjava.net;URI;false;create;;;Argument[0];ReturnValue;taintjava.net;URI;false;toAsciiString;;;Argument[-1];ReturnValue;taintjava.net;URI;false;toString;;;Argument[-1];ReturnValue;taintjava.net;URI;false;toURL;;;Argument[-1];ReturnValue;taintjava.net;URL;false;URL;(String);;Argument[0];Argument[-1];taintjava.net;URLDecoder;false;decode;;;Argument[0];ReturnValue;taintjava.nio.file;Path;false;toFile;;;Argument[-1];ReturnValue;taintjava.nio;ByteBuffer;false;array;();;Argument[-1];ReturnValue;taintjava.nio;ByteBuffer;false;get;;;Argument[-1];ReturnValue;taintjava.nio;ByteBuffer;false;wrap;(byte[]);;Argument[0];ReturnValue;taintjava.util.zip;GZIPInputStream;false;GZIPInputStream;;;Argument[0];Argument[-1];taintjava.util.zip;ZipInputStream;false;ZipInputStream;;;Argument[0];Argument[-1];taintjava.util;Base64$Decoder;false;decode;(ByteBuffer);;Argument[0];ReturnValue;taintjava.util;Base64$Decoder;false;decode;(String);;Argument[0];ReturnValue;taintjava.util;Base64$Decoder;false;decode;(byte[]);;Argument[0];ReturnValue;taintjava.util;Base64$Decoder;false;wrap;(InputStream);;Argument[0];ReturnValue;taintjava.util;Base64$Encoder;false;encode;(ByteBuffer);;Argument[0];ReturnValue;taintjava.util;Base64$Encoder;false;encode;(byte[]);;Argument[0];ReturnValue;taintjava.util;Base64$Encoder;false;encodeToString;(byte[]);;Argument[0];ReturnValue;taintjava.util;Base64$Encoder;false;wrap;(OutputStream);;Argument[0];ReturnValue;taintjava.util;StringTokenizer;false;StringTokenizer;;;Argument[0];Argument[-1];taintjava.util;StringTokenizer;false;nextElement;();;Argument[-1];ReturnValue;taintjava.util;StringTokenizer;false;nextToken;;;Argument[-1];ReturnValue;taintjavax.servlet.http;Cookie;false;Cookie;;;Argument[0];Argument[-1];taintjavax.servlet.http;Cookie;false;Cookie;;;Argument[1];Argument[-1];taintjavax.xml.transform.sax;SAXSource;false;SAXSource;(InputSource);;Argument[0];Argument[-1];taintjavax.xml.transform.sax;SAXSource;false;SAXSource;(XMLReader,InputSource);;Argument[1];Argument[-1];taintjavax.xml.transform.sax;SAXSource;false;getInputSource;;;Argument[-1];ReturnValue;taintjavax.xml.transform.sax;SAXSource;false;sourceToInputSource;;;Argument[0];ReturnValue;taintjavax.xml.transform.stream;StreamSource;false;StreamSource;;;Argument[0];Argument[-1];taintjavax.xml.transform.stream;StreamSource;false;getInputStream;;;Argument[-1];ReturnValue;taintorg.apache.commons.codec;BinaryDecoder;true;decode;(byte[]);;Argument[0];ReturnValue;taintorg.apache.commons.codec;BinaryEncoder;true;encode;(byte[]);;Argument[0];ReturnValue;taintorg.apache.commons.codec;Decoder;true;decode;(Object);;Argument[0];ReturnValue;taintorg.apache.commons.codec;Encoder;true;encode;(Object);;Argument[0];ReturnValue;taintorg.apache.commons.codec;StringDecoder;true;decode;(String);;Argument[0];ReturnValue;taintorg.apache.commons.codec;StringEncoder;true;encode;(String);;Argument[0];ReturnValue;taintorg.apache.shiro.codec;Base64;false;decode;(String);;Argument[0];ReturnValue;taintorg.xml.sax;InputSource;false;InputSource;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrSubstitutor;false;StrSubstitutor;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrSubstitutor;false;StrSubstitutor;;;MapValue of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(char[]);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(char[],int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.CharSequence);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.CharSequence,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Map);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Map);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Map,java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Map,java.lang.String,java.lang.String);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Properties);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Properties);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.String,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.StringBuffer);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.StringBuffer,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(org.apache.commons.lang3.text.StrBuilder);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(org.apache.commons.lang3.text.StrBuilder,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(java.lang.StringBuffer);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(java.lang.StringBuffer,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(java.lang.StringBuilder);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(java.lang.StringBuilder,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(org.apache.commons.lang3.text.StrBuilder);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(org.apache.commons.lang3.text.StrBuilder,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;setVariableResolver;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StringSubstitutor;false;StringSubstitutor;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StringSubstitutor;false;StringSubstitutor;;;MapValue of Argument[0];Argument[-1];taintorg.apache.commons.text;StringSubstitutor;false;replace;(char[]);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(char[],int,int);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.CharSequence);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.CharSequence,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Map);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Map);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Map,java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Map,java.lang.String,java.lang.String);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Properties);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Properties);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.String,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.StringBuffer);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.StringBuffer,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(org.apache.commons.text.TextStringBuilder);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(org.apache.commons.text.TextStringBuilder,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(java.lang.StringBuffer);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(java.lang.StringBuffer,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(java.lang.StringBuilder);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(java.lang.StringBuilder,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(org.apache.commons.text.TextStringBuilder);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(org.apache.commons.text.TextStringBuilder,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;setVariableResolver;;;Argument[0];Argument[-1];taintcom.google.common.io;BaseEncoding;true;decode;(CharSequence);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;decode;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.io;BaseEncoding;true;decodingSource;(CharSource);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;decodingSource;(CharSource);;Argument[0];ReturnValue;taintcom.google.common.io;BaseEncoding;true;decodingStream;(Reader);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;decodingStream;(Reader);;Argument[0];ReturnValue;taintcom.google.common.io;BaseEncoding;true;encode;(byte[]);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;encode;(byte[]);;Argument[0];ReturnValue;taintcom.google.common.io;BaseEncoding;true;encode;(byte[],int,int);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;encode;(byte[],int,int);;Argument[0];ReturnValue;taintcom.google.common.io;BaseEncoding;true;lowerCase;();;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;omitPadding;();;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;upperCase;();;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;withPadChar;(char);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;withSeparator;(String,int);;Argument[0];ReturnValue;taintcom.google.common.io;ByteArrayDataOutput;true;toByteArray;();;Argument[-1];ReturnValue;taintcom.google.common.io;ByteArrayDataOutput;true;write;(byte[]);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;write;(byte[],int,int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;write;(int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeByte;(int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeBytes;(String);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeChar;(int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeChars;(String);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeDouble;(double);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeFloat;(float);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeInt;(int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeLong;(long);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeShort;(int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeUTF;(String);;Argument[0];Argument[-1];taintcom.google.common.io;ByteSource;true;asCharSource;(Charset);;Argument[-1];ReturnValue;taintcom.google.common.io;ByteSource;true;concat;(ByteSource[]);;ArrayElement of Argument[0];ReturnValue;taintcom.google.common.io;ByteSource;true;concat;(Iterable);;Element of Argument[0];ReturnValue;taintcom.google.common.io;ByteSource;true;concat;(Iterator);;Element of Argument[0];ReturnValue;taintcom.google.common.io;ByteSource;true;copyTo;(OutputStream);;Argument[-1];Argument[0];taintcom.google.common.io;ByteSource;true;openBufferedStream;();;Argument[-1];ReturnValue;taintcom.google.common.io;ByteSource;true;openStream;();;Argument[-1];ReturnValue;taintcom.google.common.io;ByteSource;true;read;();;Argument[-1];ReturnValue;taintcom.google.common.io;ByteSource;true;slice;(long,long);;Argument[-1];ReturnValue;taintcom.google.common.io;ByteSource;true;wrap;(byte[]);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;copy;(InputStream,OutputStream);;Argument[0];Argument[1];taintcom.google.common.io;ByteStreams;false;copy;(ReadableByteChannel,WritableByteChannel);;Argument[0];Argument[1];taintcom.google.common.io;ByteStreams;false;limit;(InputStream,long);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;newDataInput;(ByteArrayInputStream);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;newDataInput;(byte[]);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;newDataInput;(byte[],int);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;newDataOutput;(ByteArrayOutputStream);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;read;(InputStream,byte[],int,int);;Argument[0];Argument[1];taintcom.google.common.io;ByteStreams;false;readFully;(InputStream,byte[]);;Argument[0];Argument[1];taintcom.google.common.io;ByteStreams;false;readFully;(InputStream,byte[],int,int);;Argument[0];Argument[1];taintcom.google.common.io;ByteStreams;false;toByteArray;(InputStream);;Argument[0];ReturnValue;taintcom.google.common.io;CharSource;true;asByteSource;(Charset);;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;concat;(CharSource[]);;ArrayElement of Argument[0];ReturnValue;taintcom.google.common.io;CharSource;true;concat;(Iterable);;Element of Argument[0];ReturnValue;taintcom.google.common.io;CharSource;true;concat;(Iterator);;Element of Argument[0];ReturnValue;taintcom.google.common.io;CharSource;true;copyTo;(Appendable);;Argument[-1];Argument[0];taintcom.google.common.io;CharSource;true;lines;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;openBufferedStream;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;openStream;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;read;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;readFirstLine;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;readLines;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;wrap;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.io;CharStreams;false;copy;(Readable,Appendable);;Argument[0];Argument[1];taintcom.google.common.io;CharStreams;false;readLines;(Readable);;Argument[0];ReturnValue;taintcom.google.common.io;CharStreams;false;toString;(Readable);;Argument[0];ReturnValue;taintcom.google.common.io;Closer;true;register;;;Argument[0];ReturnValue;valuecom.google.common.io;Files;false;getFileExtension;(String);;Argument[0];ReturnValue;taintcom.google.common.io;Files;false;getNameWithoutExtension;(String);;Argument[0];ReturnValue;taintcom.google.common.io;Files;false;simplifyPath;(String);;Argument[0];ReturnValue;taintcom.google.common.io;LineReader;false;LineReader;(Readable);;Argument[0];Argument[-1];taintcom.google.common.io;LineReader;true;readLine;();;Argument[-1];ReturnValue;taintcom.google.common.io;MoreFiles;false;getFileExtension;(Path);;Argument[0];ReturnValue;taintcom.google.common.io;MoreFiles;false;getNameWithoutExtension;(Path);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;append;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendNewLine;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendNull;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendPadding;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendSeparator;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendln;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;delete;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;deleteAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;deleteCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;deleteFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;ensureCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;insert;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;minimizeCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;replace;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;replaceAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;replaceFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;reverse;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;setCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;setLength;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;setNewLineText;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;setNullText;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;trim;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;append;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendNewLine;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendNull;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendPadding;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendSeparator;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendWithSeparators;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendln;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;delete;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;deleteAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;deleteCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;deleteFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;ensureCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;insert;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;minimizeCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;replace;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;replaceAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;replaceFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;reverse;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;setCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;setLength;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;setNewLineText;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;setNullText;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;trim;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;append;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendNewLine;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendNull;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendPadding;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendSeparator;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendWithSeparators;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendln;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;delete;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;deleteAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;deleteCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;deleteFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;ensureCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;insert;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;minimizeCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;replace;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;replaceAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;replaceFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;reverse;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;setCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;setLength;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;setNewLineText;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;setNullText;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;trim;;;Argument[-1];ReturnValue;valueorg.springframework.http;HttpEntity;true;HttpEntity;(MultiValueMap);;Element of MapValue of Argument[0];Argument[-1];taintorg.springframework.http;HttpEntity;true;HttpEntity;(MultiValueMap);;MapKey of Argument[0];Argument[-1];taintorg.springframework.http;HttpEntity;true;HttpEntity;(Object);;Argument[0];Argument[-1];taintorg.springframework.http;HttpEntity;true;HttpEntity;(Object,MultiValueMap);;Argument[0];Argument[-1];taintorg.springframework.http;HttpEntity;true;HttpEntity;(Object,MultiValueMap);;Element of MapValue of Argument[1];Argument[-1];taintorg.springframework.http;HttpEntity;true;HttpEntity;(Object,MultiValueMap);;MapKey of Argument[1];Argument[-1];taintorg.springframework.http;HttpEntity;true;getBody;;;Argument[-1];ReturnValue;taintorg.springframework.http;HttpEntity;true;getHeaders;;;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;HttpHeaders;(MultiValueMap);;Element of MapValue of Argument[0];Argument[-1];taintorg.springframework.http;HttpHeaders;true;HttpHeaders;(MultiValueMap);;MapKey of Argument[0];Argument[-1];taintorg.springframework.http;HttpHeaders;true;add;(String,String);;Argument[0..1];Argument[-1];taintorg.springframework.http;HttpHeaders;true;addAll;(MultiValueMap);;Element of MapValue of Argument[0];Argument[-1];taintorg.springframework.http;HttpHeaders;true;addAll;(MultiValueMap);;MapKey of Argument[0];Argument[-1];taintorg.springframework.http;HttpHeaders;true;addAll;(String,List);;Argument[0];Argument[-1];taintorg.springframework.http;HttpHeaders;true;addAll;(String,List);;Element of Argument[1];Argument[-1];taintorg.springframework.http;HttpHeaders;true;encodeBasicAuth;(String,String,Charset);;Argument[0..1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;formatHeaders;(MultiValueMap);;Element of MapValue of Argument[0];ReturnValue;taintorg.springframework.http;HttpHeaders;true;formatHeaders;(MultiValueMap);;MapKey of Argument[0];ReturnValue;taintorg.springframework.http;HttpHeaders;true;get;(Object);;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getAccessControlAllowHeaders;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getAccessControlAllowOrigin;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getAccessControlExposeHeaders;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getAccessControlRequestHeaders;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getCacheControl;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getConnection;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getETag;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getETagValuesAsList;(String);;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getFieldValues;(String);;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getFirst;(String);;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getHost;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getIfMatch;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getIfNoneMatch;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getLocation;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getOrEmpty;(Object);;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getOrigin;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getPragma;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getUpgrade;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getValuesAsList;(String);;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getVary;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;set;(String,String);;Argument[0..1];Argument[-1];taintorg.springframework.http;RequestEntity;true;getUrl;();;Argument[-1];ReturnValue;taintorg.springframework.http;ResponseEntity$BodyBuilder;true;body;(Object);;Argument[-1..0];ReturnValue;taintorg.springframework.http;ResponseEntity$BodyBuilder;true;contentLength;(long);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$BodyBuilder;true;contentType;(MediaType);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;allow;(HttpMethod[]);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;build;();;Argument[-1];ReturnValue;taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;eTag;(String);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;eTag;(String);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;header;(String,String[]);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;header;(String,String[]);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;header;(String,String[]);;ArrayElement of Argument[1];Argument[-1];taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;headers;(Consumer);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;headers;(HttpHeaders);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;headers;(HttpHeaders);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;lastModified;;;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;location;(URI);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;location;(URI);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;varyBy;(String[]);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity;true;ResponseEntity;(MultiValueMap,HttpStatus);;Element of MapValue of Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(MultiValueMap,HttpStatus);;MapKey of Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,HttpStatus);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,HttpStatus);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,HttpStatus);;Element of MapValue of Argument[1];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,HttpStatus);;MapKey of Argument[1];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,int);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,int);;Element of MapValue of Argument[1];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,int);;MapKey of Argument[1];Argument[-1];taintorg.springframework.http;ResponseEntity;true;created;(URI);;Argument[0];ReturnValue;taintorg.springframework.http;ResponseEntity;true;of;(Optional);;Element of Argument[0];ReturnValue;taintorg.springframework.http;ResponseEntity;true;ok;(Object);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;toLowerCase;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;toLowerCase;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;toUpperCase;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;toUpperCase;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;truncate;(CharSequence,int,String);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;truncate;(CharSequence,int,String);;Argument[2];ReturnValue;taintcom.google.common.base;CaseFormat;true;to;(CaseFormat,String);;Argument[1];ReturnValue;taintcom.google.common.base;Converter;true;apply;(Object);;Argument[0];ReturnValue;taintcom.google.common.base;Converter;true;convert;(Object);;Argument[0];ReturnValue;taintcom.google.common.base;Converter;true;convertAll;(Iterable);;Element of Argument[0];Element of ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;appendTo;;;Argument[0];ReturnValue;valuecom.google.common.base;Joiner$MapJoiner;false;appendTo;;;Argument[1];Argument[0];taintcom.google.common.base;Joiner$MapJoiner;false;join;(Iterable);;MapKey of Element of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;(Iterable);;MapValue of Element of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;(Iterator);;MapKey of Element of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;(Iterator);;MapValue of Element of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;(Map);;MapKey of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;(Map);;MapValue of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;;;Argument[-1];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;useForNull;(String);;Argument[-1];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;useForNull;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Joiner;false;appendTo;(Appendable,Iterable);;Element of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;(Appendable,Iterator);;Element of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;(Appendable,Object,Object,Object[]);;Argument[1..2];Argument[0];taintcom.google.common.base;Joiner;false;appendTo;(Appendable,Object,Object,Object[]);;ArrayElement of Argument[3];Argument[0];taintcom.google.common.base;Joiner;false;appendTo;(Appendable,Object[]);;ArrayElement of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;(StringBuilder,Iterable);;Element of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;(StringBuilder,Iterator);;Element of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;(StringBuilder,Object,Object,Object[]);;Argument[1..2];Argument[0];taintcom.google.common.base;Joiner;false;appendTo;(StringBuilder,Object,Object,Object[]);;ArrayElement of Argument[3];Argument[0];taintcom.google.common.base;Joiner;false;appendTo;(StringBuilder,Object[]);;ArrayElement of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;;;Argument[-1];Argument[0];taintcom.google.common.base;Joiner;false;appendTo;;;Argument[0];ReturnValue;valuecom.google.common.base;Joiner;false;join;;;Argument[-1..2];ReturnValue;taintcom.google.common.base;Joiner;false;on;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Joiner;false;skipNulls;();;Argument[-1];ReturnValue;taintcom.google.common.base;Joiner;false;useForNull;(String);;Argument[-1];ReturnValue;taintcom.google.common.base;Joiner;false;useForNull;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Joiner;false;withKeyValueSeparator;(String);;Argument[-1];ReturnValue;taintcom.google.common.base;Joiner;false;withKeyValueSeparator;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Joiner;false;withKeyValueSeparator;(char);;Argument[-1];ReturnValue;taintcom.google.common.base;MoreObjects$ToStringHelper;false;add;(String,Object);;Argument[1];Argument[-1];taintcom.google.common.base;MoreObjects$ToStringHelper;false;add;(String,Object);;Argument[1];ReturnValue;taintcom.google.common.base;MoreObjects$ToStringHelper;false;add;;;Argument[-1];ReturnValue;valuecom.google.common.base;MoreObjects$ToStringHelper;false;add;;;Argument[0];Argument[-1];taintcom.google.common.base;MoreObjects$ToStringHelper;false;add;;;Argument[0];ReturnValue;taintcom.google.common.base;MoreObjects$ToStringHelper;false;addValue;(Object);;Argument[0];Argument[-1];taintcom.google.common.base;MoreObjects$ToStringHelper;false;addValue;(Object);;Argument[0];ReturnValue;taintcom.google.common.base;MoreObjects$ToStringHelper;false;addValue;;;Argument[-1];ReturnValue;valuecom.google.common.base;MoreObjects$ToStringHelper;false;omitNullValues;();;Argument[-1];ReturnValue;valuecom.google.common.base;MoreObjects$ToStringHelper;false;toString;();;Argument[-1];ReturnValue;taintcom.google.common.base;MoreObjects;false;firstNonNull;(Object,Object);;Argument[0..1];ReturnValue;valuecom.google.common.base;MoreObjects;false;toStringHelper;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Optional;true;asSet;();;Element of Argument[-1];Element of ReturnValue;valuecom.google.common.base;Optional;true;fromJavaUtil;(Optional);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.base;Optional;true;fromNullable;(Object);;Argument[0];Element of ReturnValue;valuecom.google.common.base;Optional;true;get;();;Element of Argument[-1];ReturnValue;valuecom.google.common.base;Optional;true;of;(Object);;Argument[0];Element of ReturnValue;valuecom.google.common.base;Optional;true;or;(Object);;Argument[0];ReturnValue;valuecom.google.common.base;Optional;true;or;(Object);;Element of Argument[-1];ReturnValue;valuecom.google.common.base;Optional;true;or;(Optional);;Element of Argument[-1..0];Element of ReturnValue;valuecom.google.common.base;Optional;true;or;(Supplier);;Argument[0];ReturnValue;taintcom.google.common.base;Optional;true;or;(Supplier);;Element of Argument[-1];ReturnValue;valuecom.google.common.base;Optional;true;orNull;();;Element of Argument[-1];ReturnValue;valuecom.google.common.base;Optional;true;presentInstances;(Iterable);;Element of Element of Argument[0];Element of ReturnValue;valuecom.google.common.base;Optional;true;toJavaUtil;();;Element of Argument[-1];Element of ReturnValue;valuecom.google.common.base;Optional;true;toJavaUtil;(Optional);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.base;Preconditions;false;checkNotNull;;;Argument[0];ReturnValue;valuecom.google.common.base;Splitter$MapSplitter;false;split;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Splitter;false;split;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Splitter;false;splitToList;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Splitter;false;splitToStream;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Strings;false;emptyToNull;(String);;Argument[0];ReturnValue;valuecom.google.common.base;Strings;false;lenientFormat;(String,Object[]);;Argument[0];ReturnValue;taintcom.google.common.base;Strings;false;lenientFormat;(String,Object[]);;ArrayElement of Argument[1];ReturnValue;taintcom.google.common.base;Strings;false;nullToEmpty;(String);;Argument[0];ReturnValue;valuecom.google.common.base;Strings;false;padEnd;(String,int,char);;Argument[0];ReturnValue;taintcom.google.common.base;Strings;false;padStart;(String,int,char);;Argument[0];ReturnValue;taintcom.google.common.base;Strings;false;repeat;(String,int);;Argument[0];ReturnValue;taintcom.google.common.base;Supplier;true;get;();;Argument[-1];ReturnValue;taintcom.google.common.base;Suppliers;false;memoize;(Supplier);;Argument[0];ReturnValue;taintcom.google.common.base;Suppliers;false;memoizeWithExpiration;(Supplier,long,TimeUnit);;Argument[0];ReturnValue;taintcom.google.common.base;Suppliers;false;ofInstance;(Object);;Argument[0];ReturnValue;taintcom.google.common.base;Suppliers;false;synchronizedSupplier;(Supplier);;Argument[0];ReturnValue;taintcom.google.common.base;Verify;false;verifyNotNull;;;Argument[0];ReturnValue;valuejava.util.stream;BaseStream;true;iterator;();;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;BaseStream;true;onClose;(Runnable);;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;BaseStream;true;parallel;();;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;BaseStream;true;sequential;();;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;BaseStream;true;spliterator;();;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;BaseStream;true;unordered;();;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;allMatch;(Predicate);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;anyMatch;(Predicate);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;collect;(Supplier,BiConsumer,BiConsumer);;Element of Argument[-1];Parameter[1] of Argument[1];valuejava.util.stream;Stream;true;collect;(Supplier,BiConsumer,BiConsumer);;Parameter[0..1] of Argument[2];Parameter[0] of Argument[1];valuejava.util.stream;Stream;true;collect;(Supplier,BiConsumer,BiConsumer);;Parameter[0] of Argument[1];Parameter[0..1] of Argument[2];valuejava.util.stream;Stream;true;collect;(Supplier,BiConsumer,BiConsumer);;Parameter[0] of Argument[1];ReturnValue;valuejava.util.stream;Stream;true;collect;(Supplier,BiConsumer,BiConsumer);;ReturnValue of Argument[0];Parameter[0] of Argument[1];valuejava.util.stream;Stream;true;concat;(Stream,Stream);;Element of Argument[0..1];Element of ReturnValue;valuejava.util.stream;Stream;true;distinct;();;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;dropWhile;(Predicate);;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;dropWhile;(Predicate);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;filter;(Predicate);;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;filter;(Predicate);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;findAny;();;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;findFirst;();;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;flatMap;(Function);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;flatMap;(Function);;Element of ReturnValue of Argument[0];Element of ReturnValue;valuejava.util.stream;Stream;true;flatMapToDouble;(Function);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;flatMapToInt;(Function);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;flatMapToLong;(Function);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;forEach;(Consumer);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;forEachOrdered;(Consumer);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;generate;(Supplier);;ReturnValue of Argument[0];Element of ReturnValue;valuejava.util.stream;Stream;true;iterate;(Object,Predicate,UnaryOperator);;Argument[0];Element of ReturnValue;valuejava.util.stream;Stream;true;iterate;(Object,Predicate,UnaryOperator);;Argument[0];Parameter[0] of Argument[1..2];valuejava.util.stream;Stream;true;iterate;(Object,Predicate,UnaryOperator);;ReturnValue of Argument[2];Element of ReturnValue;valuejava.util.stream;Stream;true;iterate;(Object,Predicate,UnaryOperator);;ReturnValue of Argument[2];Parameter[0] of Argument[1..2];valuejava.util.stream;Stream;true;iterate;(Object,UnaryOperator);;Argument[0];Element of ReturnValue;valuejava.util.stream;Stream;true;iterate;(Object,UnaryOperator);;Argument[0];Parameter[0] of Argument[1];valuejava.util.stream;Stream;true;iterate;(Object,UnaryOperator);;ReturnValue of Argument[1];Element of ReturnValue;valuejava.util.stream;Stream;true;iterate;(Object,UnaryOperator);;ReturnValue of Argument[1];Parameter[0] of Argument[1];valuejava.util.stream;Stream;true;limit;(long);;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;map;(Function);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;map;(Function);;ReturnValue of Argument[0];Element of ReturnValue;valuejava.util.stream;Stream;true;mapMulti;(BiConsumer);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;mapMultiToDouble;(BiConsumer);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;mapMultiToInt;(BiConsumer);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;mapMultiToLong;(BiConsumer);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;mapToDouble;(ToDoubleFunction);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;mapToInt;(ToIntFunction);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;mapToLong;(ToLongFunction);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;max;(Comparator);;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;max;(Comparator);;Element of Argument[-1];Parameter[0..1] of Argument[0];valuejava.util.stream;Stream;true;min;(Comparator);;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;min;(Comparator);;Element of Argument[-1];Parameter[0..1] of Argument[0];valuejava.util.stream;Stream;true;noneMatch;(Predicate);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;of;(Object);;Argument[0];Element of ReturnValue;valuejava.util.stream;Stream;true;of;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuejava.util.stream;Stream;true;ofNullable;(Object);;Argument[0];Element of ReturnValue;valuejava.util.stream;Stream;true;peek;(Consumer);;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;peek;(Consumer);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;reduce;(BinaryOperator);;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;reduce;(BinaryOperator);;Element of Argument[-1];Parameter[0..1] of Argument[0];valuejava.util.stream;Stream;true;reduce;(BinaryOperator);;ReturnValue of Argument[0];Element of ReturnValue;valuejava.util.stream;Stream;true;reduce;(BinaryOperator);;ReturnValue of Argument[0];Parameter[0..1] of Argument[0];valuejava.util.stream;Stream;true;reduce;(Object,BiFunction,BinaryOperator);;Argument[0];Parameter[0..1] of Argument[2];valuejava.util.stream;Stream;true;reduce;(Object,BiFunction,BinaryOperator);;Argument[0];Parameter[0] of Argument[1];valuejava.util.stream;Stream;true;reduce;(Object,BiFunction,BinaryOperator);;Argument[0];ReturnValue;valuejava.util.stream;Stream;true;reduce;(Object,BiFunction,BinaryOperator);;Element of Argument[-1];Parameter[1] of Argument[1];valuejava.util.stream;Stream;true;reduce;(Object,BiFunction,BinaryOperator);;ReturnValue of Argument[1..2];Parameter[0..1] of Argument[2];valuejava.util.stream;Stream;true;reduce;(Object,BiFunction,BinaryOperator);;ReturnValue of Argument[1..2];Parameter[0] of Argument[1];valuejava.util.stream;Stream;true;reduce;(Object,BiFunction,BinaryOperator);;ReturnValue of Argument[1..2];ReturnValue;valuejava.util.stream;Stream;true;reduce;(Object,BinaryOperator);;Argument[0];Parameter[0..1] of Argument[1];valuejava.util.stream;Stream;true;reduce;(Object,BinaryOperator);;Argument[0];ReturnValue;valuejava.util.stream;Stream;true;reduce;(Object,BinaryOperator);;Element of Argument[-1];Parameter[0..1] of Argument[1];valuejava.util.stream;Stream;true;reduce;(Object,BinaryOperator);;ReturnValue of Argument[1];Parameter[0..1] of Argument[1];valuejava.util.stream;Stream;true;reduce;(Object,BinaryOperator);;ReturnValue of Argument[1];ReturnValue;valuejava.util.stream;Stream;true;skip;(long);;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;sorted;(Comparator);;Element of Argument[-1];Parameter[0..1] of Argument[0];valuejava.util.stream;Stream;true;sorted;;;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;takeWhile;(Predicate);;Element of Argument[-1];Element of ReturnValue;valuejava.util.stream;Stream;true;takeWhile;(Predicate);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util.stream;Stream;true;toArray;;;Element of Argument[-1];ArrayElement of ReturnValue;valuejava.util.stream;Stream;true;toList;();;Element of Argument[-1];Element of ReturnValue;valueorg.apache.hc.core5.function;Supplier;true;get;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http.io.entity;BasicHttpEntity;true;BasicHttpEntity;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;BufferedHttpEntity;true;BufferedHttpEntity;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;ByteArrayEntity;true;ByteArrayEntity;;;Argument[0];Argument[-1];taintorg.apache.hc.core5.http.io.entity;EntityUtils;true;parse;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;EntityUtils;true;toByteArray;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;EntityUtils;true;toString;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntities;true;create;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntities;true;createGzipped;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntities;true;createUrlEncoded;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntities;true;gzip;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntities;true;withTrailers;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntityWrapper;true;HttpEntityWrapper;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;InputStreamEntity;true;InputStreamEntity;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;StringEntity;true;StringEntity;;;Argument[0];Argument[-1];taintorg.apache.hc.core5.http.message;RequestLine;true;RequestLine;(HttpRequest);;Argument[0];Argument[-1];taintorg.apache.hc.core5.http.message;RequestLine;true;RequestLine;(String,String,ProtocolVersion);;Argument[1];Argument[-1];taintorg.apache.hc.core5.http.message;RequestLine;true;getMethod;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http.message;RequestLine;true;getUri;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http.message;RequestLine;true;toString;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;EntityDetails;true;getContentEncoding;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;EntityDetails;true;getContentType;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;EntityDetails;true;getTrailerNames;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpEntity;true;getContent;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpEntity;true;getTrailers;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpEntityContainer;true;getEntity;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpRequest;true;getAuthority;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpRequest;true;getMethod;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpRequest;true;getPath;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpRequest;true;getRequestUri;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpRequest;true;getUri;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;getFirstHeader;(String);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;getHeader;(String);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;getHeaders;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;getHeaders;(String);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;getLastHeader;(String);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;headerIterator;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;headerIterator;(String);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;NameValuePair;true;getName;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;NameValuePair;true;getValue;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.net;URIAuthority;true;getHostName;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.net;URIAuthority;true;toString;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;Args;true;containsNoBlanks;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;Args;true;notBlank;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;Args;true;notEmpty;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;Args;true;notEmpty;(Collection,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;Args;true;notEmpty;(Object,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;Args;true;notNull;(Object,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;ByteArrayBuffer;true;append;(CharArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;ByteArrayBuffer;true;append;(byte[],int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;ByteArrayBuffer;true;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;ByteArrayBuffer;true;array;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;ByteArrayBuffer;true;toByteArray;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(ByteArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(CharArrayBuffer);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(CharArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(Object);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(String);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(byte[],int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;array;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;subSequence;(int,int);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;substring;(int,int);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;substringTrimmed;(int,int);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;toCharArray;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;toString;();;Argument[-1];ReturnValue;taintorg.apache.http.entity;BasicHttpEntity;true;setContent;(InputStream);;Argument[0];Argument[-1];taintorg.apache.http.entity;BufferedHttpEntity;true;BufferedHttpEntity;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.http.entity;ByteArrayEntity;true;ByteArrayEntity;;;Argument[0];Argument[-1];taintorg.apache.http.entity;HttpEntityWrapper;true;HttpEntityWrapper;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.http.entity;InputStreamEntity;true;InputStreamEntity;;;Argument[0];ReturnValue;taintorg.apache.http.entity;StringEntity;true;StringEntity;;;Argument[0];Argument[-1];taintorg.apache.http.message;BasicRequestLine;false;BasicRequestLine;;;Argument[1];Argument[-1];taintorg.apache.http.params;HttpParams;true;getDoubleParameter;(String,double);;Argument[-1];ReturnValue;taintorg.apache.http.params;HttpParams;true;getDoubleParameter;(String,double);;Argument[1];ReturnValue;valueorg.apache.http.params;HttpParams;true;getIntParameter;(String,int);;Argument[-1];ReturnValue;taintorg.apache.http.params;HttpParams;true;getIntParameter;(String,int);;Argument[1];ReturnValue;valueorg.apache.http.params;HttpParams;true;getLongParameter;(String,long);;Argument[-1];ReturnValue;taintorg.apache.http.params;HttpParams;true;getLongParameter;(String,long);;Argument[1];ReturnValue;valueorg.apache.http.params;HttpParams;true;getParameter;(String);;Argument[-1];ReturnValue;taintorg.apache.http.util;Args;true;containsNoBlanks;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.http.util;Args;true;notBlank;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.http.util;Args;true;notEmpty;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.http.util;Args;true;notEmpty;(Collection,String);;Argument[0];ReturnValue;valueorg.apache.http.util;Args;true;notNull;(Object,String);;Argument[0];ReturnValue;valueorg.apache.http.util;ByteArrayBuffer;true;append;(CharArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;ByteArrayBuffer;true;append;(byte[],int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;ByteArrayBuffer;true;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;ByteArrayBuffer;true;buffer;();;Argument[-1];ReturnValue;taintorg.apache.http.util;ByteArrayBuffer;true;toByteArray;();;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;append;(ByteArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(CharArrayBuffer);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(CharArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(Object);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(String);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(byte[],int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;buffer;();;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;subSequence;(int,int);;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;substring;(int,int);;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;substringTrimmed;(int,int);;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;toCharArray;();;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;toString;();;Argument[-1];ReturnValue;taintorg.apache.http.util;EncodingUtils;true;getAsciiBytes;(String);;Argument[0];ReturnValue;taintorg.apache.http.util;EncodingUtils;true;getAsciiString;;;Argument[0];ReturnValue;taintorg.apache.http.util;EncodingUtils;true;getBytes;(String,String);;Argument[0];ReturnValue;taintorg.apache.http.util;EncodingUtils;true;getString;;;Argument[0];ReturnValue;taintorg.apache.http.util;EntityUtils;true;getContentCharSet;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.http.util;EntityUtils;true;getContentMimeType;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.http.util;EntityUtils;true;toByteArray;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.http.util;EntityUtils;true;toString;;;Argument[0];ReturnValue;taintorg.apache.http;Header;true;getElements;();;Argument[-1];ReturnValue;taintorg.apache.http;HeaderElement;true;getName;();;Argument[-1];ReturnValue;taintorg.apache.http;HeaderElement;true;getParameter;(int);;Argument[-1];ReturnValue;taintorg.apache.http;HeaderElement;true;getParameterByName;(String);;Argument[-1];ReturnValue;taintorg.apache.http;HeaderElement;true;getParameters;();;Argument[-1];ReturnValue;taintorg.apache.http;HeaderElement;true;getValue;();;Argument[-1];ReturnValue;taintorg.apache.http;HeaderIterator;true;nextHeader;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpEntity;true;getContent;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpEntity;true;getContentEncoding;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpEntity;true;getContentType;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpEntityEnclosingRequest;true;getEntity;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;getAllHeaders;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;getFirstHeader;(String);;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;getHeaders;(String);;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;getLastHeader;(String);;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;getParams;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;headerIterator;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;headerIterator;(String);;Argument[-1];ReturnValue;taintorg.apache.http;HttpRequest;true;getRequestLine;();;Argument[-1];ReturnValue;taintorg.apache.http;NameValuePair;true;getName;();;Argument[-1];ReturnValue;taintorg.apache.http;NameValuePair;true;getValue;();;Argument[-1];ReturnValue;taintorg.apache.http;RequestLine;true;getMethod;();;Argument[-1];ReturnValue;taintorg.apache.http;RequestLine;true;getUri;();;Argument[-1];ReturnValue;taintorg.apache.http;RequestLine;true;getUri;;;Argument[-1];ReturnValue;taintorg.apache.http;RequestLine;true;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;abbreviate;(java.lang.String,java.lang.String,int);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;abbreviate;(java.lang.String,java.lang.String,int,int);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;abbreviate;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;abbreviateMiddle;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;abbreviateMiddle;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;appendIfMissing;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;appendIfMissing;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;appendIfMissingIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;appendIfMissingIgnoreCase;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;capitalize;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;center;(java.lang.String,int,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;center;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;chomp;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;chomp;(java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;chop;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;defaultIfBlank;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;defaultIfEmpty;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;defaultString;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;deleteWhitespace;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;difference;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;firstNonBlank;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;StringUtils;false;firstNonEmpty;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;StringUtils;false;getBytes;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;getCommonPrefix;;;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;getDigits;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;getIfBlank;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;getIfEmpty;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(char[],char);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(char[],char,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Iterable,char);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Iterable,java.lang.String);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Iterable,java.lang.String);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[]);;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],char);;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],char,int,int);;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],java.lang.String);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],java.lang.String);;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],java.lang.String,int,int);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],java.lang.String,int,int);;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.Iterator,char);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.Iterator,java.lang.String);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.Iterator,java.lang.String);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.List,char,int,int);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.List,java.lang.String,int,int);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.List,java.lang.String,int,int);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;joinWith;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;joinWith;;;ArrayElement of Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;left;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;leftPad;(java.lang.String,int,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;leftPad;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;lowerCase;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;lowerCase;(java.lang.String,java.util.Locale);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;mid;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;normalizeSpace;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;overlay;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;overlay;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;prependIfMissing;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;prependIfMissing;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;prependIfMissingIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;prependIfMissingIgnoreCase;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;remove;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeAll;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeEnd;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeEndIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeFirst;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removePattern;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeStart;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeStartIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;repeat;(java.lang.String,java.lang.String,int);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;repeat;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replace;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replace;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceAll;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceAll;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceChars;(java.lang.String,java.lang.String,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceChars;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceEach;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceEach;;;ArrayElement of Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceEachRepeatedly;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceEachRepeatedly;;;ArrayElement of Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceFirst;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceFirst;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceIgnoreCase;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceOnce;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceOnce;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceOnceIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceOnceIgnoreCase;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replacePattern;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replacePattern;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;reverse;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;reverseDelimited;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;right;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;rightPad;(java.lang.String,int,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;rightPad;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;rotate;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;split;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;split;(java.lang.String,char);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;split;(java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;split;(java.lang.String,java.lang.String,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitByCharacterType;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitByCharacterTypeCamelCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitByWholeSeparator;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitByWholeSeparatorPreserveAllTokens;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitPreserveAllTokens;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitPreserveAllTokens;(java.lang.String,char);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitPreserveAllTokens;(java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitPreserveAllTokens;(java.lang.String,java.lang.String,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;strip;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;strip;(java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripAccents;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripAll;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripEnd;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripStart;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripToEmpty;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripToNull;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substring;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringAfter;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringAfterLast;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringBefore;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringBeforeLast;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringBetween;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringsBetween;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;swapCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;toCodePoints;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;toEncodedString;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;toRootLowerCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;toRootUpperCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;toString;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;trim;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;trimToEmpty;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;trimToNull;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;truncate;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;uncapitalize;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;unwrap;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;upperCase;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;upperCase;(java.lang.String,java.util.Locale);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;valueOf;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;wrap;(java.lang.String,char);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;wrap;(java.lang.String,java.lang.String);;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;wrapIfMissing;(java.lang.String,char);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;wrapIfMissing;(java.lang.String,java.lang.String);;Argument[0..1];ReturnValue;taintorg.springframework.util;AntPathMatcher;false;combine;;;Argument[0..1];ReturnValue;taintorg.springframework.util;AntPathMatcher;false;doMatch;;;Argument[1];MapValue of Argument[3];taintorg.springframework.util;AntPathMatcher;false;extractPathWithinPattern;;;Argument[1];ReturnValue;taintorg.springframework.util;AntPathMatcher;false;extractUriTemplateVariables;;;Argument[1];MapValue of ReturnValue;taintorg.springframework.util;AntPathMatcher;false;tokenizePath;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;AntPathMatcher;false;tokenizePattern;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;AutoPopulatingList;false;AutoPopulatingList;(java.util.List,java.lang.Class);;Element of Argument[0];Element of Argument[-1];valueorg.springframework.util;AutoPopulatingList;false;AutoPopulatingList;(java.util.List,org.springframework.util.AutoPopulatingList.ElementFactory);;Element of Argument[0];Element of Argument[-1];valueorg.springframework.util;Base64Utils;false;decode;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;decodeFromString;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;decodeFromUrlSafeString;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;decodeUrlSafe;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;encode;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;encodeToString;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;encodeToUrlSafeString;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;encodeUrlSafe;;;Argument[0];ReturnValue;taintorg.springframework.util;CollectionUtils;false;arrayToList;;;ArrayElement of Argument[0];Element of ReturnValue;valueorg.springframework.util;CollectionUtils;false;findFirstMatch;;;Element of Argument[0];ReturnValue;valueorg.springframework.util;CollectionUtils;false;findValueOfType;;;Element of Argument[0];ReturnValue;valueorg.springframework.util;CollectionUtils;false;firstElement;;;Element of Argument[0];ReturnValue;valueorg.springframework.util;CollectionUtils;false;lastElement;;;Element of Argument[0];ReturnValue;valueorg.springframework.util;CollectionUtils;false;mergeArrayIntoCollection;;;ArrayElement of Argument[0];Element of Argument[1];valueorg.springframework.util;CollectionUtils;false;mergePropertiesIntoMap;;;MapKey of Argument[0];MapKey of Argument[1];valueorg.springframework.util;CollectionUtils;false;mergePropertiesIntoMap;;;MapValue of Argument[0];MapValue of Argument[1];valueorg.springframework.util;CollectionUtils;false;toArray;;;Element of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;CollectionUtils;false;toIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.springframework.util;CollectionUtils;false;toMultiValueMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.springframework.util;CollectionUtils;false;toMultiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.springframework.util;CollectionUtils;false;unmodifiableMultiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.springframework.util;CollectionUtils;false;unmodifiableMultiValueMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.springframework.util;CompositeIterator;false;add;;;Element of Argument[0];Element of Argument[-1];valueorg.springframework.util;ConcurrentReferenceHashMap;false;getReference;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.util;ConcurrentReferenceHashMap;false;getReference;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.util;ConcurrentReferenceHashMap;false;getSegment;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.util;ConcurrentReferenceHashMap;false;getSegment;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.util;FastByteArrayOutputStream;false;getInputStream;;;Argument[-1];ReturnValue;taintorg.springframework.util;FastByteArrayOutputStream;false;toByteArray;;;Argument[-1];ReturnValue;taintorg.springframework.util;FastByteArrayOutputStream;false;write;;;Argument[0];Argument[-1];taintorg.springframework.util;FastByteArrayOutputStream;false;writeTo;;;Argument[-1];Argument[0];taintorg.springframework.util;FileCopyUtils;false;copy;;;Argument[0];Argument[1];taintorg.springframework.util;FileCopyUtils;false;copyToByteArray;;;Argument[0];ReturnValue;taintorg.springframework.util;FileCopyUtils;false;copyToString;;;Argument[0];ReturnValue;taintorg.springframework.util;FileSystemUtils;false;copyRecursively;(java.io.File,java.io.File);;Argument[0];Argument[1];taintorg.springframework.util;LinkedMultiValueMap;false;LinkedMultiValueMap;(java.util.Map);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.springframework.util;LinkedMultiValueMap;false;LinkedMultiValueMap;(java.util.Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.util;LinkedMultiValueMap;false;deepCopy;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.util;LinkedMultiValueMap;false;deepCopy;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.util;MultiValueMap;true;add;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;add;;;Argument[1];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addAll;(java.lang.Object,java.util.List);;Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addAll;(java.lang.Object,java.util.List);;Element of Argument[1];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addAll;(org.springframework.util.MultiValueMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addAll;(org.springframework.util.MultiValueMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addIfAbsent;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addIfAbsent;;;Argument[1];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;getFirst;;;Element of MapValue of Argument[-1];ReturnValue;valueorg.springframework.util;MultiValueMap;true;set;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;set;;;Argument[1];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;setAll;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;setAll;;;MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;toSingleValueMap;;;Element of MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.util;MultiValueMap;true;toSingleValueMap;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.util;MultiValueMapAdapter;false;MultiValueMapAdapter;;;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMapAdapter;false;MultiValueMapAdapter;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.util;ObjectUtils;false;addObjectToArray;;;Argument[1];ArrayElement of ReturnValue;valueorg.springframework.util;ObjectUtils;false;addObjectToArray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;ObjectUtils;false;toObjectArray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;ObjectUtils;false;unwrapOptional;;;Element of Argument[0];ReturnValue;valueorg.springframework.util;PropertiesPersister;true;load;;;Argument[1];Argument[0];taintorg.springframework.util;PropertiesPersister;true;loadFromXml;;;Argument[1];Argument[0];taintorg.springframework.util;PropertiesPersister;true;store;;;Argument[0];Argument[1];taintorg.springframework.util;PropertiesPersister;true;store;;;Argument[2];Argument[1];taintorg.springframework.util;PropertiesPersister;true;storeToXml;;;Argument[0];Argument[1];taintorg.springframework.util;PropertiesPersister;true;storeToXml;;;Argument[2];Argument[1];taintorg.springframework.util;PropertyPlaceholderHelper;false;PropertyPlaceholderHelper;;;Argument[0..1];Argument[-1];taintorg.springframework.util;PropertyPlaceholderHelper;false;parseStringValue;;;Argument[0];ReturnValue;taintorg.springframework.util;PropertyPlaceholderHelper;false;replacePlaceholders;(java.lang.String,java.util.Properties);;MapValue of Argument[1];ReturnValue;taintorg.springframework.util;PropertyPlaceholderHelper;false;replacePlaceholders;;;Argument[0];ReturnValue;taintorg.springframework.util;ResourceUtils;false;extractArchiveURL;;;Argument[0];ReturnValue;taintorg.springframework.util;ResourceUtils;false;extractJarFileURL;;;Argument[0];ReturnValue;taintorg.springframework.util;ResourceUtils;false;getFile;;;Argument[0];ReturnValue;taintorg.springframework.util;ResourceUtils;false;getURL;;;Argument[0];ReturnValue;taintorg.springframework.util;ResourceUtils;false;toURI;;;Argument[0];ReturnValue;taintorg.springframework.util;RouteMatcher;true;combine;;;Argument[0..1];ReturnValue;taintorg.springframework.util;RouteMatcher;true;matchAndExtract;;;Argument[0];MapKey of ReturnValue;taintorg.springframework.util;RouteMatcher;true;matchAndExtract;;;Argument[1];MapValue of ReturnValue;taintorg.springframework.util;RouteMatcher;true;parseRoute;;;Argument[0];ReturnValue;taintorg.springframework.util;SerializationUtils;false;deserialize;;;Argument[0];ReturnValue;taintorg.springframework.util;SerializationUtils;false;serialize;;;Argument[0];ReturnValue;taintorg.springframework.util;StreamUtils;false;copy;(byte[],java.io.OutputStream);;Argument[0];Argument[1];taintorg.springframework.util;StreamUtils;false;copy;(java.io.InputStream,java.io.OutputStream);;Argument[0];Argument[1];taintorg.springframework.util;StreamUtils;false;copy;(java.lang.String,java.nio.charset.Charset,java.io.OutputStream);;Argument[0];Argument[2];taintorg.springframework.util;StreamUtils;false;copyRange;;;Argument[0];Argument[1];taintorg.springframework.util;StreamUtils;false;copyToByteArray;;;Argument[0];ReturnValue;taintorg.springframework.util;StreamUtils;false;copyToString;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;addStringToArray;;;Argument[1];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;addStringToArray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;applyRelativePath;;;Argument[0..1];ReturnValue;taintorg.springframework.util;StringUtils;false;arrayToCommaDelimitedString;;;ArrayElement of Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;arrayToDelimitedString;;;Argument[1];ReturnValue;taintorg.springframework.util;StringUtils;false;arrayToDelimitedString;;;ArrayElement of Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;capitalize;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;cleanPath;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;collectionToCommaDelimitedString;;;Element of Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;collectionToDelimitedString;;;Argument[1..3];ReturnValue;taintorg.springframework.util;StringUtils;false;collectionToDelimitedString;;;Element of Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;commaDelimitedListToSet;;;Argument[0];Element of ReturnValue;taintorg.springframework.util;StringUtils;false;commaDelimitedListToStringArray;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;concatenateStringArrays;;;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;delete;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;deleteAny;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;delimitedListToStringArray;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;getFilename;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;getFilenameExtension;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;mergeStringArrays;;;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;quote;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;quoteIfString;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;removeDuplicateStrings;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;replace;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;replace;;;Argument[2];ReturnValue;taintorg.springframework.util;StringUtils;false;sortStringArray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;split;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;splitArrayElementsIntoProperties;;;ArrayElement of Argument[0];MapKey of ReturnValue;taintorg.springframework.util;StringUtils;false;splitArrayElementsIntoProperties;;;ArrayElement of Argument[0];MapValue of ReturnValue;taintorg.springframework.util;StringUtils;false;stripFilenameExtension;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;toStringArray;;;Element of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;tokenizeToStringArray;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;trimAllWhitespace;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;trimArrayElements;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;trimLeadingCharacter;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;trimLeadingWhitespace;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;trimTrailingCharacter;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;trimTrailingWhitespace;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;trimWhitespace;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;uncapitalize;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;unqualify;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;uriDecode;;;Argument[0];ReturnValue;taintorg.springframework.util;StringValueResolver;false;resolveStringValue;;;Argument[0];ReturnValue;taintorg.springframework.util;SystemPropertyUtils;false;resolvePlaceholders;;;Argument[0];ReturnValue;taintandroid.content;Intent;false;Intent;(Intent);;MapKey of SyntheticField[android.content.Intent.extras] of Argument[0];MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;false;Intent;(Intent);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[0];MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;false;Intent;(String,Uri);;Argument[1];SyntheticField[android.content.Intent.data] of Argument[-1];valueandroid.content;Intent;false;Intent;(String,Uri,Context,Class);;Argument[1];SyntheticField[android.content.Intent.data] of Argument[-1];valueandroid.content;Intent;false;createChooser;;;Argument[0..2];MapValue of SyntheticField[android.content.Intent.extras] of ReturnValue;valueandroid.content;Intent;false;getIntent;;;Argument[0];SyntheticField[android.content.Intent.data] of ReturnValue;taintandroid.content;Intent;false;getIntentOld;;;Argument[0];SyntheticField[android.content.Intent.data] of ReturnValue;taintandroid.content;Intent;false;parseUri;;;Argument[0];SyntheticField[android.content.Intent.data] of ReturnValue;taintandroid.content;Intent;true;addCategory;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;addFlags;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;getBundleExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getByteArrayExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getCharArrayExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getCharSequenceArrayExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getCharSequenceArrayListExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getCharSequenceExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getData;;;SyntheticField[android.content.Intent.data] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getDataString;;;SyntheticField[android.content.Intent.data] of Argument[-1];ReturnValue;taintandroid.content;Intent;true;getExtras;();;SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getParcelableArrayExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getParcelableArrayListExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getParcelableExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getSerializableExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getStringArrayExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getStringArrayListExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;getStringExtra;(String);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];ReturnValue;valueandroid.content;Intent;true;putCharSequenceArrayListExtra;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;putCharSequenceArrayListExtra;;;Argument[0];MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putCharSequenceArrayListExtra;;;Argument[1];MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putExtra;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;putExtra;;;Argument[0];MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putExtra;;;Argument[1];MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putExtras;(Bundle);;Argument[-1];ReturnValue;valueandroid.content;Intent;true;putExtras;(Bundle);;MapKey of Argument[0];MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putExtras;(Bundle);;MapValue of Argument[0];MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putExtras;(Intent);;Argument[-1];ReturnValue;valueandroid.content;Intent;true;putExtras;(Intent);;MapKey of SyntheticField[android.content.Intent.extras] of Argument[0];MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putExtras;(Intent);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[0];MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putIntegerArrayListExtra;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;putIntegerArrayListExtra;;;Argument[0];MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putParcelableArrayListExtra;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;putParcelableArrayListExtra;;;Argument[0];MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putParcelableArrayListExtra;;;Argument[1];MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putStringArrayListExtra;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;putStringArrayListExtra;;;Argument[0];MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;putStringArrayListExtra;;;Argument[1];MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;replaceExtras;(Bundle);;Argument[-1];ReturnValue;valueandroid.content;Intent;true;replaceExtras;(Bundle);;MapKey of Argument[0];MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;replaceExtras;(Bundle);;MapValue of Argument[0];MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;replaceExtras;(Intent);;Argument[-1];ReturnValue;valueandroid.content;Intent;true;replaceExtras;(Intent);;MapKey of SyntheticField[android.content.Intent.extras] of Argument[0];MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;replaceExtras;(Intent);;MapValue of SyntheticField[android.content.Intent.extras] of Argument[0];MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1];valueandroid.content;Intent;true;setAction;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setClass;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setClassName;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setComponent;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setData;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setData;;;Argument[0];SyntheticField[android.content.Intent.data] of Argument[-1];valueandroid.content;Intent;true;setDataAndNormalize;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setDataAndNormalize;;;Argument[0];SyntheticField[android.content.Intent.data] of Argument[-1];valueandroid.content;Intent;true;setDataAndType;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setDataAndType;;;Argument[0];SyntheticField[android.content.Intent.data] of Argument[-1];valueandroid.content;Intent;true;setDataAndTypeAndNormalize;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setDataAndTypeAndNormalize;;;Argument[0];SyntheticField[android.content.Intent.data] of Argument[-1];valueandroid.content;Intent;true;setFlags;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setIdentifier;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setPackage;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setType;;;Argument[-1];ReturnValue;valueandroid.content;Intent;true;setTypeAndNormalize;;;Argument[-1];ReturnValue;valueandroid.os;BaseBundle;true;get;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;BaseBundle;true;getString;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;BaseBundle;true;getString;(String,String);;Argument[1];ReturnValue;valueandroid.os;BaseBundle;true;getString;(String,String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;BaseBundle;true;getStringArray;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;BaseBundle;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;valueandroid.os;BaseBundle;true;putAll;(PersistableBundle);;MapKey of Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putAll;(PersistableBundle);;MapValue of Argument[0];MapValue of Argument[-1];valueandroid.os;BaseBundle;true;putBoolean;;;Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putBooleanArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putDouble;;;Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putDoubleArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putInt;;;Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putIntArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putLong;;;Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putLongArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putString;;;Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putString;;;Argument[1];MapValue of Argument[-1];valueandroid.os;BaseBundle;true;putStringArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;BaseBundle;true;putStringArray;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;false;Bundle;(Bundle);;MapKey of Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;false;Bundle;(Bundle);;MapValue of Argument[0];MapValue of Argument[-1];valueandroid.os;Bundle;false;Bundle;(PersistableBundle);;MapKey of Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;false;Bundle;(PersistableBundle);;MapValue of Argument[0];MapValue of Argument[-1];valueandroid.os;Bundle;true;clone;();;MapKey of Argument[-1];MapKey of ReturnValue;valueandroid.os;Bundle;true;clone;();;MapValue of Argument[-1];MapValue of ReturnValue;valueandroid.os;Bundle;true;deepCopy;();;MapKey of Argument[-1];MapKey of ReturnValue;valueandroid.os;Bundle;true;deepCopy;();;MapValue of Argument[-1];MapValue of ReturnValue;valueandroid.os;Bundle;true;getBinder;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getBundle;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getByteArray;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getCharArray;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getCharSequence;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getCharSequence;(String,CharSequence);;Argument[1];ReturnValue;valueandroid.os;Bundle;true;getCharSequence;(String,CharSequence);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getCharSequenceArray;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getCharSequenceArrayList;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getParcelable;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getParcelableArray;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getParcelableArrayList;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getSerializable;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getSparseParcelableArray;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;getStringArrayList;(String);;MapValue of Argument[-1];ReturnValue;valueandroid.os;Bundle;true;putAll;(Bundle);;MapKey of Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putAll;(Bundle);;MapValue of Argument[0];MapValue of Argument[-1];valueandroid.os;Bundle;true;putBinder;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putBinder;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putBundle;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putBundle;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putByte;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putByteArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putByteArray;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putChar;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putCharArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putCharArray;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putCharSequence;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putCharSequence;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putCharSequenceArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putCharSequenceArray;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putCharSequenceArrayList;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putCharSequenceArrayList;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putFloat;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putFloatArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putIntegerArrayList;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putParcelable;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putParcelable;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putParcelableArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putParcelableArray;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putParcelableArrayList;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putParcelableArrayList;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putSerializable;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putSerializable;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putShort;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putShortArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putSize;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putSizeF;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putSparseParcelableArray;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putSparseParcelableArray;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;putStringArrayList;;;Argument[0];MapKey of Argument[-1];valueandroid.os;Bundle;true;putStringArrayList;;;Argument[1];MapValue of Argument[-1];valueandroid.os;Bundle;true;readFromParcel;;;Argument[0];MapKey of Argument[-1];taintandroid.os;Bundle;true;readFromParcel;;;Argument[0];MapValue of Argument[-1];taintorg.springframework.web.util;AbstractUriTemplateHandler;true;getBaseUrl;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;AbstractUriTemplateHandler;true;setBaseUrl;;;Argument[0];Argument[-1];taintorg.springframework.web.util;AbstractUriTemplateHandler;true;setDefaultUriVariables;;;Argument[0];Argument[-1];taintorg.springframework.web.util;ContentCachingRequestWrapper;false;ContentCachingRequestWrapper;;;Argument[0];Argument[-1];taintorg.springframework.web.util;ContentCachingRequestWrapper;false;getContentAsByteArray;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;ContentCachingResponseWrapper;false;ContentCachingResponseWrapper;;;Argument[0];Argument[-1];taintorg.springframework.web.util;ContentCachingResponseWrapper;false;getContentAsByteArray;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;ContentCachingResponseWrapper;false;getContentInputStream;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;DefaultUriBuilderFactory;false;DefaultUriBuilderFactory;;;Argument[0];Argument[-1];taintorg.springframework.web.util;DefaultUriBuilderFactory;false;builder;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;DefaultUriBuilderFactory;false;getDefaultUriVariables;;;Argument[-1];MapValue of ReturnValue;taintorg.springframework.web.util;DefaultUriBuilderFactory;false;setDefaultUriVariables;;;MapValue of Argument[0];Argument[-1];taintorg.springframework.web.util;DefaultUriBuilderFactory;false;uriString;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;HtmlUtils;false;htmlEscape;;;Argument[0];ReturnValue;taintorg.springframework.web.util;HtmlUtils;false;htmlEscapeDecimal;;;Argument[0];ReturnValue;taintorg.springframework.web.util;HtmlUtils;false;htmlEscapeHex;;;Argument[0];ReturnValue;taintorg.springframework.web.util;HtmlUtils;false;htmlUnescape;;;Argument[0];ReturnValue;taintorg.springframework.web.util;ServletContextPropertyUtils;false;resolvePlaceholders;;;Argument[0..1];ReturnValue;taintorg.springframework.web.util;ServletRequestPathUtils;false;getCachedPath;;;Argument[0];ReturnValue;taintorg.springframework.web.util;ServletRequestPathUtils;false;getCachedPathValue;;;Argument[0];ReturnValue;taintorg.springframework.web.util;ServletRequestPathUtils;false;getParsedRequestPath;;;Argument[0];ReturnValue;taintorg.springframework.web.util;ServletRequestPathUtils;false;parseAndCache;;;Argument[0];ReturnValue;taintorg.springframework.web.util;ServletRequestPathUtils;false;setParsedRequestPath;;;Argument[0];Argument[1];taintorg.springframework.web.util;UriBuilder;true;build;(Map);;MapValue of Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;build;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriBuilder;true;fragment;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;fragment;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;host;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;host;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;path;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;path;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;pathSegment;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;pathSegment;;;ArrayElement of Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;port;(java.lang.String);;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;port;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;query;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;query;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;queryParam;(String,Collection);;Element of Argument[1];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;queryParam;(String,Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;queryParam;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;queryParam;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;queryParamIfPresent;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;queryParamIfPresent;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;queryParamIfPresent;;;Element of Argument[1];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;queryParams;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;queryParams;;;Element of MapValue of Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;queryParams;;;MapKey of Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;replacePath;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;replacePath;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;replaceQuery;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;replaceQuery;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;replaceQueryParam;(String,Collection);;Element of Argument[1];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;replaceQueryParam;(String,Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;replaceQueryParam;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;replaceQueryParam;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;replaceQueryParams;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;replaceQueryParams;;;Element of MapValue of Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;replaceQueryParams;;;MapKey of Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;scheme;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;scheme;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilder;true;userInfo;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriBuilder;true;userInfo;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriBuilderFactory;true;builder;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriBuilderFactory;true;uriString;;;Argument[-1..0];ReturnValue;taintorg.springframework.web.util;UriComponents$UriTemplateVariables;true;getValue;;;MapValue of Argument[-1];ReturnValue;valueorg.springframework.web.util;UriComponents;false;UriComponents;;;Argument[0..1];Argument[-1];taintorg.springframework.web.util;UriComponents;false;copyToUriComponentsBuilder;;;Argument[-1];Argument[0];taintorg.springframework.web.util;UriComponents;false;encode;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;expand;(Map);;MapValue of Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponents;false;expand;(Object[]);;ArrayElement of Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponents;false;expand;(UriTemplateVariables);;MapValue of Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponents;false;getFragment;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;getHost;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;getPath;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;getPathSegments;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;getQuery;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;getQueryParams;;;Argument[-1];Element of MapValue of ReturnValue;taintorg.springframework.web.util;UriComponents;false;getQueryParams;;;Argument[-1];MapKey of ReturnValue;taintorg.springframework.web.util;UriComponents;false;getScheme;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;getSchemeSpecificPart;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;getUserInfo;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;normalize;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;toString;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;toUri;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponents;false;toUriString;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;build;(Map);;MapValue of Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;build;(Object[]);;ArrayElement of Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;build;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;buildAndExpand;(Map);;MapValue of Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;buildAndExpand;(Object[]);;ArrayElement of Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;cloneBuilder;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriComponentsBuilder;false;encode;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriComponentsBuilder;false;fromHttpRequest;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;fromHttpUrl;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;fromOriginHeader;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;fromPath;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;fromUri;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;fromUriString;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;parseForwardedFor;;;Argument[0..1];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;schemeSpecificPart;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriComponentsBuilder;false;schemeSpecificPart;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriComponentsBuilder;false;toUriString;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriComponentsBuilder;false;uri;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriComponentsBuilder;false;uri;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriComponentsBuilder;false;uriComponents;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriComponentsBuilder;false;uriComponents;;;Argument[0];Argument[-1];taintorg.springframework.web.util;UriComponentsBuilder;false;uriVariables;;;Argument[-1];ReturnValue;valueorg.springframework.web.util;UriComponentsBuilder;false;uriVariables;;;MapValue of Argument[0];Argument[-1];taintorg.springframework.web.util;UriTemplate;false;expand;(Map);;MapValue of Argument[0];ReturnValue;taintorg.springframework.web.util;UriTemplate;false;expand;(Object[]);;ArrayElement of Argument[0];ReturnValue;taintorg.springframework.web.util;UriTemplate;false;getVariableNames;;;Argument[-1];Element of ReturnValue;taintorg.springframework.web.util;UriTemplate;false;match;;;Argument[0];MapValue of ReturnValue;taintorg.springframework.web.util;UriTemplate;false;toString;;;Argument[-1];ReturnValue;taintorg.springframework.web.util;UriTemplateHandler;true;expand;(String,Map);;MapValue of Argument[1];ReturnValue;taintorg.springframework.web.util;UriTemplateHandler;true;expand;(String,Object[]);;ArrayElement of Argument[1];ReturnValue;taintorg.springframework.web.util;UriTemplateHandler;true;expand;;;Argument[-1..0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;decode;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encode;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeAuthority;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeFragment;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeHost;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodePath;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodePathSegment;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodePort;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeQuery;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeQueryParam;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeQueryParams;;;MapKey of Argument[0];MapKey of ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeQueryParams;;;MapValue of Argument[0];MapValue of ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeScheme;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeUriVariables;(Map);;MapKey of Argument[0];MapKey of ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeUriVariables;(Map);;MapValue of Argument[0];MapValue of ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeUriVariables;(Object[]);;ArrayElement of Argument[0];ArrayElement of ReturnValue;taintorg.springframework.web.util;UriUtils;false;encodeUserInfo;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UriUtils;false;extractFileExtension;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;decodeMatrixVariables;;;MapKey of Argument[1];MapKey of ReturnValue;valueorg.springframework.web.util;UrlPathHelper;false;decodeMatrixVariables;;;MapValue of Argument[1];MapValue of ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;decodePathVariables;;;MapKey of Argument[1];MapKey of ReturnValue;valueorg.springframework.web.util;UrlPathHelper;false;decodePathVariables;;;MapValue of Argument[1];MapValue of ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;decodeRequestString;;;Argument[1];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;getContextPath;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;getOriginatingContextPath;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;getOriginatingQueryString;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;getOriginatingRequestUri;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;getPathWithinApplication;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;getPathWithinServletMapping;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;getRequestUri;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;getResolvedLookupPath;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;getServletPath;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;removeSemicolonContent;;;Argument[0];ReturnValue;taintorg.springframework.web.util;UrlPathHelper;false;resolveAndCacheLookupPath;;;Argument[0];ReturnValue;taintorg.springframework.web.util;WebUtils;false;findParameterValue;(Map,String);;MapValue of Argument[0];ReturnValue;valueorg.springframework.web.util;WebUtils;false;findParameterValue;(ServletRequest,String);;Argument[0];ReturnValue;taintorg.springframework.web.util;WebUtils;false;getCookie;;;Argument[0];ReturnValue;taintorg.springframework.web.util;WebUtils;false;getNativeRequest;;;Argument[0];ReturnValue;taintorg.springframework.web.util;WebUtils;false;getNativeResponse;;;Argument[0];ReturnValue;taintorg.springframework.web.util;WebUtils;false;getParametersStartingWith;;;Argument[0];MapKey of ReturnValue;taintorg.springframework.web.util;WebUtils;false;getParametersStartingWith;;;Argument[0];MapValue of ReturnValue;taintorg.springframework.web.util;WebUtils;false;getRealPath;;;Argument[0..1];ReturnValue;taintorg.springframework.web.util;WebUtils;false;getRequiredSessionAttribute;;;Argument[0];ReturnValue;taintorg.springframework.web.util;WebUtils;false;getSessionAttribute;;;Argument[0];ReturnValue;taintorg.springframework.web.util;WebUtils;false;parseMatrixVariables;;;Argument[0];MapKey of ReturnValue;taintorg.springframework.web.util;WebUtils;false;parseMatrixVariables;;;Argument[0];MapValue of ReturnValue;taintorg.springframework.web.util;WebUtils;false;setSessionAttribute;;;Argument[2];Argument[0];taintorg.json;CDL;false;rowToJSONArray;;;Argument[0];ReturnValue;taintorg.json;CDL;false;rowToJSONObject;;;Argument[0..1];ReturnValue;taintorg.json;CDL;false;rowToString;;;Argument[0];ReturnValue;taintorg.json;CDL;false;toJSONArray;;;Argument[0..1];ReturnValue;taintorg.json;CDL;false;toString;;;Argument[0..1];ReturnValue;taintorg.json;Cookie;false;escape;;;Argument[0];ReturnValue;taintorg.json;Cookie;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;Cookie;false;toString;;;Argument[0];ReturnValue;taintorg.json;Cookie;false;unescape;;;Argument[0];ReturnValue;taintorg.json;CookieList;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;CookieList;false;toString;;;Argument[0];ReturnValue;taintorg.json;HTTP;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;HTTP;false;toString;;;Argument[0];ReturnValue;taintorg.json;HTTPTokener;false;HTTPTokener;;;Argument[0];Argument[-1];taintorg.json;HTTPTokener;false;nextToken;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;JSONArray;(Collection);;Element of Argument[0];Argument[-1];taintorg.json;JSONArray;false;JSONArray;(Iterable);;Element of Argument[0];Argument[-1];taintorg.json;JSONArray;false;JSONArray;(JSONArray);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;JSONArray;(JSONTokener);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;JSONArray;(Object);;ArrayElement of Argument[0];Argument[-1];taintorg.json;JSONArray;false;JSONArray;(String);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;get;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getBigDecimal;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getBigInteger;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getBoolean;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getDouble;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getEnum;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getFloat;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getInt;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getJSONArray;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getJSONObject;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getLong;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getNumber;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getString;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;iterator;;;Argument[-1];Element of ReturnValue;taintorg.json;JSONArray;false;join;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;join;;;Argument[0];ReturnValue;taintorg.json;JSONArray;false;opt;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optBigDecimal;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optBigDecimal;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optBigInteger;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optBigInteger;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optBoolean;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optBoolean;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optDouble;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optDouble;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optEnum;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optEnum;;;Argument[2];ReturnValue;valueorg.json;JSONArray;false;optFloat;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optFloat;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optInt;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optInt;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optJSONArray;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optJSONObject;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optLong;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optLong;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optNumber;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optNumber;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optQuery;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optString;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optString;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;put;(Collection);;Element of Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(Map);;MapKey of Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(Map);;MapValue of Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(Object);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(boolean);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(double);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(float);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(int);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(int,Collection);;Element of Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,Map);;MapKey of Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,Map);;MapValue of Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,Object);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,boolean);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,double);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,float);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,int);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,long);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(long);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;;;Argument[-1];ReturnValue;valueorg.json;JSONArray;false;putAll;(Collection);;Element of Argument[0];Argument[-1];taintorg.json;JSONArray;false;putAll;(Iterable);;Element of Argument[0];Argument[-1];taintorg.json;JSONArray;false;putAll;(JSONArray);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;putAll;(Object);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;putAll;;;Argument[-1];ReturnValue;valueorg.json;JSONArray;false;query;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;remove;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;toJSONObject;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;JSONArray;false;toList;;;Argument[0];Element of ReturnValue;taintorg.json;JSONArray;false;toString;;;Argument[0];ReturnValue;taintorg.json;JSONArray;false;write;;;Argument[-1];Argument[0];taintorg.json;JSONArray;false;write;;;Argument[0];ReturnValue;valueorg.json;JSONML;false;toJSONArray;;;Argument[0];ReturnValue;taintorg.json;JSONML;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;JSONML;false;toString;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;JSONObject;(JSONObject,String[]);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(JSONObject,String[]);;ArrayElement of Argument[1];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(JSONTokener);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(Map);;MapKey of Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(Map);;MapValue of Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(Object);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(Object,String[]);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(Object,String[]);;ArrayElement of Argument[1];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(String);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(String,Locale);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;accumulate;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;accumulate;;;Argument[0..1];Argument[-1];taintorg.json;JSONObject;false;append;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;append;;;Argument[0..1];Argument[-1];taintorg.json;JSONObject;false;doubleToString;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;get;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getBigDecimal;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getBigInteger;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getBoolean;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getDouble;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getEnum;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getFloat;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getInt;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getJSONArray;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getJSONObject;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getLong;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getNames;;;Argument[0];ArrayElement of ReturnValue;taintorg.json;JSONObject;false;getNumber;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getString;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;increment;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;increment;;;Argument[0];Argument[-1];taintorg.json;JSONObject;false;keySet;;;Argument[-1];Element of ReturnValue;taintorg.json;JSONObject;false;keys;;;Argument[-1];Element of ReturnValue;taintorg.json;JSONObject;false;names;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;numberToString;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;opt;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optBigDecimal;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optBigDecimal;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optBigInteger;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optBigInteger;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optBoolean;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optBoolean;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optDouble;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optDouble;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optEnum;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optEnum;;;Argument[2];ReturnValue;valueorg.json;JSONObject;false;optFloat;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optFloat;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optInt;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optInt;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optJSONArray;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optJSONObject;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optLong;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optLong;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optNumber;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optNumber;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optQuery;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optString;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optString;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;put;(String,Collection);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,Collection);;Element of Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,Map);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,Map);;MapKey of Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,Map);;MapValue of Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,Object);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,Object);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,boolean);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,boolean);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,double);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,double);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,float);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,float);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,int);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,int);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,long);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,long);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;putOnce;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;putOnce;;;Argument[0..1];Argument[-1];taintorg.json;JSONObject;false;putOpt;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;putOpt;;;Argument[0..1];Argument[-1];taintorg.json;JSONObject;false;query;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;quote;(String);;Argument[0];ReturnValue;taintorg.json;JSONObject;false;quote;(String,Writer);;Argument[0];Argument[1];taintorg.json;JSONObject;false;quote;(String,Writer);;Argument[1];ReturnValue;valueorg.json;JSONObject;false;remove;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;stringToValue;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;toJSONArray;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;toMap;;;Argument[-1];MapKey of ReturnValue;taintorg.json;JSONObject;false;toMap;;;Argument[-1];MapValue of ReturnValue;taintorg.json;JSONObject;false;toString;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;valueToString;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;wrap;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;write;;;Argument[-1];Argument[0];taintorg.json;JSONObject;false;write;;;Argument[0];ReturnValue;valueorg.json;JSONObject;true;entrySet;;;Argument[-1];Element of ReturnValue;taintorg.json;JSONPointer$Builder;false;append;;;Argument[-1];ReturnValue;valueorg.json;JSONPointer$Builder;false;append;;;Argument[0];Argument[-1];taintorg.json;JSONPointer$Builder;false;build;;;Argument[-1];ReturnValue;taintorg.json;JSONPointer;false;JSONPointer;(List);;Element of Argument[0];Argument[-1];taintorg.json;JSONPointer;false;JSONPointer;(String);;Argument[0];Argument[-1];taintorg.json;JSONPointer;false;queryFrom;;;Argument[0];ReturnValue;taintorg.json;JSONPointer;false;toString;;;Argument[-1];ReturnValue;taintorg.json;JSONPointer;false;toURIFragment;;;Argument[-1];ReturnValue;taintorg.json;JSONString;true;toJSONString;;;Argument[-1];ReturnValue;taintorg.json;JSONStringer;false;toString;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;JSONTokener;;;Argument[0];Argument[-1];taintorg.json;JSONTokener;true;next;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;nextClean;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;nextString;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;nextTo;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;nextValue;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;syntaxError;;;Argument[0..1];ReturnValue;taintorg.json;JSONTokener;true;toString;;;Argument[-1];ReturnValue;taintorg.json;JSONWriter;true;JSONWriter;;;Argument[-1];Argument[0];taintorg.json;JSONWriter;true;array;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;endArray;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;endObject;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;key;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;key;;;Argument[0];Argument[-1];taintorg.json;JSONWriter;true;object;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;value;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;value;;;Argument[0];Argument[-1];taintorg.json;JSONWriter;true;valueToString;;;Argument[0];ReturnValue;taintorg.json;Property;false;toJSONObject;;;MapKey of Argument[0];ReturnValue;taintorg.json;Property;false;toJSONObject;;;MapValue of Argument[0];ReturnValue;taintorg.json;Property;false;toProperties;;;Argument[0];MapKey of ReturnValue;taintorg.json;Property;false;toProperties;;;Argument[0];MapValue of ReturnValue;taintorg.json;XML;false;escape;;;Argument[0];ReturnValue;taintorg.json;XML;false;stringToValue;;;Argument[0];ReturnValue;taintorg.json;XML;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;XML;false;toString;;;Argument[0..1];ReturnValue;taintorg.json;XML;false;unescape;;;Argument[0];ReturnValue;taintorg.json;XMLTokener;false;XMLTokener;;;Argument[0];Argument[-1];taintorg.json;XMLTokener;false;nextCDATA;;;Argument[-1];ReturnValue;taintorg.json;XMLTokener;false;nextContent;;;Argument[-1];ReturnValue;taintorg.json;XMLTokener;false;nextEntity;;;Argument[-1];ReturnValue;taintorg.json;XMLTokener;false;nextMeta;;;Argument[-1];ReturnValue;taintorg.json;XMLTokener;false;nextToken;;;Argument[-1];ReturnValue;taintorg.json;XMLXsiTypeConverter;true;convert;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;StrBuilder;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(char[]);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.CharSequence);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.CharSequence,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.String,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.StringBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.StringBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.StringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.StringBuilder,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.nio.CharBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.nio.CharBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(org.apache.commons.lang3.text.StrBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendAll;(Iterable);;Element of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendAll;(Iterator);;Element of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendAll;(Object[]);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendAll;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendSeparator;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendSeparator;(java.lang.String,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendSeparator;(java.lang.String,java.lang.String);;Argument[0..1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendSeparator;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendTo;;;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;(Iterable,String);;Element of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;(Iterator,String);;Element of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;(Object[],String);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;;;Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(char[]);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.String,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.StringBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.StringBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.StringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.StringBuilder,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(org.apache.commons.lang3.text.StrBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;asReader;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;asTokenizer;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;build;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;getChars;(char[]);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrBuilder;false;getChars;(char[]);;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;getChars;(int,int,char[],int);;Argument[-1];Argument[2];taintorg.apache.commons.lang3.text;StrBuilder;false;insert;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;insert;;;Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;leftString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;midString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;readFrom;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;replace;(int,int,java.lang.String);;Argument[2];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;replace;(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int);;Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;replace;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;replaceAll;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;replaceAll;;;Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;replaceFirst;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;replaceFirst;;;Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;rightString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;subSequence;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;substring;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;toCharArray;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;toStringBuffer;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;toStringBuilder;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;StrBuilder;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(char[]);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.CharSequence);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.CharSequence,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.String,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.StringBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.StringBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.StringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.StringBuilder,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.nio.CharBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.nio.CharBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(org.apache.commons.text.StrBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;appendAll;(Iterable);;Element of Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendAll;(Iterator);;Element of Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendAll;(Object[]);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendAll;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendSeparator;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendSeparator;(java.lang.String,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendSeparator;(java.lang.String,java.lang.String);;Argument[0..1];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendSeparator;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;appendTo;;;Argument[-1];Argument[0];taintorg.apache.commons.text;StrBuilder;false;appendWithSeparators;(Iterable,String);;Element of Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendWithSeparators;(Iterator,String);;Element of Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendWithSeparators;(Object[],String);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendWithSeparators;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;appendWithSeparators;;;Argument[1];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(char[]);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(java.lang.String,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(java.lang.StringBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(java.lang.StringBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(java.lang.StringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(java.lang.StringBuilder,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;(org.apache.commons.text.StrBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendln;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;asReader;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;asTokenizer;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;build;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;getChars;(char[]);;Argument[-1];Argument[0];taintorg.apache.commons.text;StrBuilder;false;getChars;(char[]);;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;getChars;(int,int,char[],int);;Argument[-1];Argument[2];taintorg.apache.commons.text;StrBuilder;false;insert;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;insert;;;Argument[1];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;leftString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;midString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;readFrom;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;replace;(int,int,java.lang.String);;Argument[2];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;replace;(org.apache.commons.text.StrMatcher,java.lang.String,int,int,int);;Argument[1];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;replace;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;replaceAll;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;replaceAll;;;Argument[1];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;replaceFirst;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;replaceFirst;;;Argument[1];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;rightString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;subSequence;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;substring;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;toCharArray;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;toStringBuffer;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;toStringBuilder;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;TextStringBuilder;(java.lang.CharSequence);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;TextStringBuilder;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(char[]);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.CharSequence);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.CharSequence,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.String,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.StringBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.StringBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.StringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.lang.StringBuilder,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.nio.CharBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(java.nio.CharBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;(org.apache.commons.text.TextStringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;append;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;appendAll;(Iterable);;Element of Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendAll;(Iterator);;Element of Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendAll;(Object[]);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendAll;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;appendFixedWidthPadLeft;;;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;appendFixedWidthPadRight;;;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendSeparator;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendSeparator;(java.lang.String,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendSeparator;(java.lang.String,java.lang.String);;Argument[0..1];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendSeparator;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;appendTo;;;Argument[-1];Argument[0];taintorg.apache.commons.text;TextStringBuilder;false;appendWithSeparators;(Iterable,String);;Element of Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendWithSeparators;(Iterator,String);;Element of Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendWithSeparators;(Object[],String);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendWithSeparators;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;appendWithSeparators;;;Argument[1];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(char[]);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(java.lang.String,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(java.lang.StringBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(java.lang.StringBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(java.lang.StringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(java.lang.StringBuilder,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;(org.apache.commons.text.TextStringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;appendln;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;asReader;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;asTokenizer;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;build;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;getChars;(char[]);;Argument[-1];Argument[0];taintorg.apache.commons.text;TextStringBuilder;false;getChars;(char[]);;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;getChars;(int,int,char[],int);;Argument[-1];Argument[2];taintorg.apache.commons.text;TextStringBuilder;false;insert;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;insert;;;Argument[1];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;leftString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;midString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;readFrom;;;Argument[0];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;replace;(int,int,java.lang.String);;Argument[2];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;replace;(org.apache.commons.text.matcher.StringMatcher,java.lang.String,int,int,int);;Argument[1];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;replace;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;replaceAll;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;replaceAll;;;Argument[1];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;replaceFirst;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;replaceFirst;;;Argument[1];Argument[-1];taintorg.apache.commons.text;TextStringBuilder;false;rightString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;subSequence;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;substring;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;toCharArray;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;toStringBuffer;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;TextStringBuilder;false;toStringBuilder;;;Argument[-1];ReturnValue;taintjava.lang;Iterable;true;forEach;(Consumer);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.lang;Iterable;true;iterator;();;Element of Argument[-1];Element of ReturnValue;valuejava.lang;Iterable;true;spliterator;();;Element of Argument[-1];Element of ReturnValue;valuejava.lang;Object;true;clone;;;Element of Argument[-1];Element of ReturnValue;valuejava.lang;Object;true;clone;;;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.lang;Object;true;clone;;;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util.concurrent;BlockingDeque;true;offerFirst;(Object,long,TimeUnit);;Argument[0];Element of Argument[-1];valuejava.util.concurrent;BlockingDeque;true;offerLast;(Object,long,TimeUnit);;Argument[0];Element of Argument[-1];valuejava.util.concurrent;BlockingDeque;true;pollFirst;(long,TimeUnit);;Element of Argument[-1];ReturnValue;valuejava.util.concurrent;BlockingDeque;true;pollLast;(long,TimeUnit);;Element of Argument[-1];ReturnValue;valuejava.util.concurrent;BlockingDeque;true;putFirst;(Object);;Argument[0];Element of Argument[-1];valuejava.util.concurrent;BlockingDeque;true;putLast;(Object);;Argument[0];Element of Argument[-1];valuejava.util.concurrent;BlockingDeque;true;takeFirst;();;Element of Argument[-1];ReturnValue;valuejava.util.concurrent;BlockingDeque;true;takeLast;();;Element of Argument[-1];ReturnValue;valuejava.util.concurrent;BlockingQueue;true;drainTo;(Collection);;Element of Argument[-1];Element of Argument[0];valuejava.util.concurrent;BlockingQueue;true;drainTo;(Collection,int);;Element of Argument[-1];Element of Argument[0];valuejava.util.concurrent;BlockingQueue;true;offer;(Object,long,TimeUnit);;Argument[0];Element of Argument[-1];valuejava.util.concurrent;BlockingQueue;true;poll;(long,TimeUnit);;Element of Argument[-1];ReturnValue;valuejava.util.concurrent;BlockingQueue;true;put;(Object);;Argument[0];Element of Argument[-1];valuejava.util.concurrent;BlockingQueue;true;take;();;Element of Argument[-1];ReturnValue;valuejava.util.concurrent;ConcurrentHashMap;true;elements;();;MapValue of Argument[-1];Element of ReturnValue;valuejava.util.concurrent;TransferQueue;true;transfer;(Object);;Argument[0];Element of Argument[-1];valuejava.util.concurrent;TransferQueue;true;tryTransfer;(Object);;Argument[0];Element of Argument[-1];valuejava.util.concurrent;TransferQueue;true;tryTransfer;(Object,long,TimeUnit);;Argument[0];Element of Argument[-1];valuejava.util;AbstractMap$SimpleEntry;false;SimpleEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;AbstractMap$SimpleEntry;false;SimpleEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;AbstractMap$SimpleEntry;false;SimpleEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];valuejava.util;AbstractMap$SimpleEntry;false;SimpleEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];valuejava.util;AbstractMap$SimpleImmutableEntry;false;SimpleImmutableEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;AbstractMap$SimpleImmutableEntry;false;SimpleImmutableEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;AbstractMap$SimpleImmutableEntry;false;SimpleImmutableEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];valuejava.util;AbstractMap$SimpleImmutableEntry;false;SimpleImmutableEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];valuejava.util;ArrayDeque;false;ArrayDeque;(Collection);;Element of Argument[0];Element of Argument[-1];valuejava.util;ArrayList;false;ArrayList;(Collection);;Element of Argument[0];Element of Argument[-1];valuejava.util;Arrays;false;asList;;;ArrayElement of Argument[0];Element of ReturnValue;valuejava.util;Arrays;false;copyOf;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valuejava.util;Arrays;false;copyOfRange;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valuejava.util;Arrays;false;fill;(Object[],Object);;Argument[1];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(Object[],int,int,Object);;Argument[3];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(boolean[],boolean);;Argument[1];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(boolean[],int,int,boolean);;Argument[3];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(byte[],byte);;Argument[1];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(byte[],int,int,byte);;Argument[3];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(char[],char);;Argument[1];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(char[],int,int,char);;Argument[3];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(double[],double);;Argument[1];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(double[],int,int,double);;Argument[3];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(float[],float);;Argument[1];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(float[],int,int,float);;Argument[3];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(int[],int);;Argument[1];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(int[],int,int,int);;Argument[3];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(long[],int,int,long);;Argument[3];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(long[],long);;Argument[1];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(short[],int,int,short);;Argument[3];ArrayElement of Argument[0];valuejava.util;Arrays;false;fill;(short[],short);;Argument[1];ArrayElement of Argument[0];valuejava.util;Arrays;false;spliterator;;;ArrayElement of Argument[0];Element of ReturnValue;valuejava.util;Arrays;false;stream;;;ArrayElement of Argument[0];Element of ReturnValue;valuejava.util;Collection;true;add;;;Argument[0];Element of Argument[-1];valuejava.util;Collection;true;addAll;;;Element of Argument[0];Element of Argument[-1];valuejava.util;Collection;true;parallelStream;();;Element of Argument[-1];Element of ReturnValue;valuejava.util;Collection;true;stream;();;Element of Argument[-1];Element of ReturnValue;valuejava.util;Collection;true;toArray;;;Element of Argument[-1];ArrayElement of Argument[0];valuejava.util;Collection;true;toArray;;;Element of Argument[-1];ArrayElement of ReturnValue;valuejava.util;Collections;false;addAll;(Collection,Object[]);;ArrayElement of Argument[1];Element of Argument[0];valuejava.util;Collections;false;checkedCollection;(Collection,Class);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;checkedList;(List,Class);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;checkedMap;(Map,Class,Class);;MapKey of Argument[0];MapKey of ReturnValue;valuejava.util;Collections;false;checkedMap;(Map,Class,Class);;MapValue of Argument[0];MapValue of ReturnValue;valuejava.util;Collections;false;checkedNavigableMap;(NavigableMap,Class,Class);;MapKey of Argument[0];MapKey of ReturnValue;valuejava.util;Collections;false;checkedNavigableMap;(NavigableMap,Class,Class);;MapValue of Argument[0];MapValue of ReturnValue;valuejava.util;Collections;false;checkedNavigableSet;(NavigableSet,Class);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;checkedSet;(Set,Class);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;checkedSortedMap;(SortedMap,Class,Class);;MapKey of Argument[0];MapKey of ReturnValue;valuejava.util;Collections;false;checkedSortedMap;(SortedMap,Class,Class);;MapValue of Argument[0];MapValue of ReturnValue;valuejava.util;Collections;false;checkedSortedSet;(SortedSet,Class);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;copy;(List,List);;Element of Argument[1];Element of Argument[0];valuejava.util;Collections;false;enumeration;(Collection);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;fill;(List,Object);;Argument[1];Element of Argument[0];valuejava.util;Collections;false;list;(Enumeration);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;max;;;Element of Argument[0];ReturnValue;valuejava.util;Collections;false;min;;;Element of Argument[0];ReturnValue;valuejava.util;Collections;false;nCopies;(int,Object);;Argument[1];Element of ReturnValue;valuejava.util;Collections;false;replaceAll;(List,Object,Object);;Argument[2];Element of Argument[0];valuejava.util;Collections;false;singleton;(Object);;Argument[0];Element of ReturnValue;valuejava.util;Collections;false;singletonList;(Object);;Argument[0];Element of ReturnValue;valuejava.util;Collections;false;singletonMap;(Object,Object);;Argument[0];MapKey of ReturnValue;valuejava.util;Collections;false;singletonMap;(Object,Object);;Argument[1];MapValue of ReturnValue;valuejava.util;Collections;false;synchronizedCollection;(Collection);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;synchronizedList;(List);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;synchronizedMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuejava.util;Collections;false;synchronizedMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuejava.util;Collections;false;synchronizedNavigableMap;(NavigableMap);;MapKey of Argument[0];MapKey of ReturnValue;valuejava.util;Collections;false;synchronizedNavigableMap;(NavigableMap);;MapValue of Argument[0];MapValue of ReturnValue;valuejava.util;Collections;false;synchronizedNavigableSet;(NavigableSet);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;synchronizedSet;(Set);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;synchronizedSortedMap;(SortedMap);;MapKey of Argument[0];MapKey of ReturnValue;valuejava.util;Collections;false;synchronizedSortedMap;(SortedMap);;MapValue of Argument[0];MapValue of ReturnValue;valuejava.util;Collections;false;synchronizedSortedSet;(SortedSet);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;unmodifiableCollection;(Collection);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;unmodifiableList;(List);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;unmodifiableMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuejava.util;Collections;false;unmodifiableMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuejava.util;Collections;false;unmodifiableNavigableMap;(NavigableMap);;MapKey of Argument[0];MapKey of ReturnValue;valuejava.util;Collections;false;unmodifiableNavigableMap;(NavigableMap);;MapValue of Argument[0];MapValue of ReturnValue;valuejava.util;Collections;false;unmodifiableNavigableSet;(NavigableSet);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;unmodifiableSet;(Set);;Element of Argument[0];Element of ReturnValue;valuejava.util;Collections;false;unmodifiableSortedMap;(SortedMap);;MapKey of Argument[0];MapKey of ReturnValue;valuejava.util;Collections;false;unmodifiableSortedMap;(SortedMap);;MapValue of Argument[0];MapValue of ReturnValue;valuejava.util;Collections;false;unmodifiableSortedSet;(SortedSet);;Element of Argument[0];Element of ReturnValue;valuejava.util;Deque;true;addFirst;(Object);;Argument[0];Element of Argument[-1];valuejava.util;Deque;true;addLast;(Object);;Argument[0];Element of Argument[-1];valuejava.util;Deque;true;descendingIterator;();;Element of Argument[-1];Element of ReturnValue;valuejava.util;Deque;true;getFirst;();;Element of Argument[-1];ReturnValue;valuejava.util;Deque;true;getLast;();;Element of Argument[-1];ReturnValue;valuejava.util;Deque;true;offerFirst;(Object);;Argument[0];Element of Argument[-1];valuejava.util;Deque;true;offerLast;(Object);;Argument[0];Element of Argument[-1];valuejava.util;Deque;true;peekFirst;();;Element of Argument[-1];ReturnValue;valuejava.util;Deque;true;peekLast;();;Element of Argument[-1];ReturnValue;valuejava.util;Deque;true;pollFirst;();;Element of Argument[-1];ReturnValue;valuejava.util;Deque;true;pollLast;();;Element of Argument[-1];ReturnValue;valuejava.util;Deque;true;pop;();;Element of Argument[-1];ReturnValue;valuejava.util;Deque;true;push;(Object);;Argument[0];Element of Argument[-1];valuejava.util;Deque;true;removeFirst;();;Element of Argument[-1];ReturnValue;valuejava.util;Deque;true;removeLast;();;Element of Argument[-1];ReturnValue;valuejava.util;Dictionary;true;elements;();;MapValue of Argument[-1];Element of ReturnValue;valuejava.util;Dictionary;true;get;(Object);;MapValue of Argument[-1];ReturnValue;valuejava.util;Dictionary;true;keys;();;MapKey of Argument[-1];Element of ReturnValue;valuejava.util;Dictionary;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];valuejava.util;Dictionary;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];valuejava.util;Dictionary;true;put;(Object,Object);;MapValue of Argument[-1];ReturnValue;valuejava.util;Dictionary;true;remove;(Object);;MapValue of Argument[-1];ReturnValue;valuejava.util;EnumMap;false;EnumMap;(EnumMap);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;EnumMap;false;EnumMap;(EnumMap);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;EnumMap;false;EnumMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;EnumMap;false;EnumMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;Enumeration;true;asIterator;;;Element of Argument[-1];Element of ReturnValue;valuejava.util;Enumeration;true;nextElement;;;Element of Argument[-1];ReturnValue;valuejava.util;HashMap;false;HashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;HashMap;false;HashMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;HashSet;false;HashSet;(Collection);;Element of Argument[0];Element of Argument[-1];valuejava.util;Hashtable;false;Hashtable;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;Hashtable;false;Hashtable;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;IdentityHashMap;false;IdentityHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;IdentityHashMap;false;IdentityHashMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;Iterator;true;forEachRemaining;(Consumer);;Element of Argument[-1];Parameter[0] of Argument[0];valuejava.util;Iterator;true;next;;;Element of Argument[-1];ReturnValue;valuejava.util;LinkedHashMap;false;LinkedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;LinkedHashMap;false;LinkedHashMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;LinkedHashSet;false;LinkedHashSet;(Collection);;Element of Argument[0];Element of Argument[-1];valuejava.util;LinkedList;false;LinkedList;(Collection);;Element of Argument[0];Element of Argument[-1];valuejava.util;List;false;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;valuejava.util;List;false;of;(Object);;Argument[0];Element of ReturnValue;valuejava.util;List;false;of;(Object,Object);;Argument[0..1];Element of ReturnValue;valuejava.util;List;false;of;(Object,Object,Object);;Argument[0..2];Element of ReturnValue;valuejava.util;List;false;of;(Object,Object,Object,Object);;Argument[0..3];Element of ReturnValue;valuejava.util;List;false;of;(Object,Object,Object,Object,Object);;Argument[0..4];Element of ReturnValue;valuejava.util;List;false;of;(Object,Object,Object,Object,Object,Object);;Argument[0..5];Element of ReturnValue;valuejava.util;List;false;of;(Object,Object,Object,Object,Object,Object,Object);;Argument[0..6];Element of ReturnValue;valuejava.util;List;false;of;(Object,Object,Object,Object,Object,Object,Object,Object);;Argument[0..7];Element of ReturnValue;valuejava.util;List;false;of;(Object,Object,Object,Object,Object,Object,Object,Object,Object);;Argument[0..8];Element of ReturnValue;valuejava.util;List;false;of;(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object);;Argument[0..9];Element of ReturnValue;valuejava.util;List;false;of;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuejava.util;List;true;add;(int,Object);;Argument[1];Element of Argument[-1];valuejava.util;List;true;addAll;(int,Collection);;Element of Argument[1];Element of Argument[-1];valuejava.util;List;true;get;(int);;Element of Argument[-1];ReturnValue;valuejava.util;List;true;listIterator;;;Element of Argument[-1];Element of ReturnValue;valuejava.util;List;true;remove;(int);;Element of Argument[-1];ReturnValue;valuejava.util;List;true;set;(int,Object);;Argument[1];Element of Argument[-1];valuejava.util;List;true;set;(int,Object);;Element of Argument[-1];ReturnValue;valuejava.util;List;true;subList;;;Element of Argument[-1];Element of ReturnValue;valuejava.util;ListIterator;true;add;(Object);;Argument[0];Element of Argument[-1];valuejava.util;ListIterator;true;previous;;;Element of Argument[-1];ReturnValue;valuejava.util;ListIterator;true;set;(Object);;Argument[0];Element of Argument[-1];valuejava.util;Map$Entry;true;getKey;;;MapKey of Argument[-1];ReturnValue;valuejava.util;Map$Entry;true;getValue;;;MapValue of Argument[-1];ReturnValue;valuejava.util;Map$Entry;true;setValue;;;Argument[0];MapValue of Argument[-1];valuejava.util;Map$Entry;true;setValue;;;MapValue of Argument[-1];ReturnValue;valuejava.util;Map;false;copyOf;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuejava.util;Map;false;copyOf;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuejava.util;Map;false;entry;(Object,Object);;Argument[0];MapKey of ReturnValue;valuejava.util;Map;false;entry;(Object,Object);;Argument[1];MapValue of ReturnValue;valuejava.util;Map;false;of;;;Argument[0];MapKey of ReturnValue;valuejava.util;Map;false;of;;;Argument[10];MapKey of ReturnValue;valuejava.util;Map;false;of;;;Argument[11];MapValue of ReturnValue;valuejava.util;Map;false;of;;;Argument[12];MapKey of ReturnValue;valuejava.util;Map;false;of;;;Argument[13];MapValue of ReturnValue;valuejava.util;Map;false;of;;;Argument[14];MapKey of ReturnValue;valuejava.util;Map;false;of;;;Argument[15];MapValue of ReturnValue;valuejava.util;Map;false;of;;;Argument[16];MapKey of ReturnValue;valuejava.util;Map;false;of;;;Argument[17];MapValue of ReturnValue;valuejava.util;Map;false;of;;;Argument[18];MapKey of ReturnValue;valuejava.util;Map;false;of;;;Argument[19];MapValue of ReturnValue;valuejava.util;Map;false;of;;;Argument[1];MapValue of ReturnValue;valuejava.util;Map;false;of;;;Argument[2];MapKey of ReturnValue;valuejava.util;Map;false;of;;;Argument[3];MapValue of ReturnValue;valuejava.util;Map;false;of;;;Argument[4];MapKey of ReturnValue;valuejava.util;Map;false;of;;;Argument[5];MapValue of ReturnValue;valuejava.util;Map;false;of;;;Argument[6];MapKey of ReturnValue;valuejava.util;Map;false;of;;;Argument[7];MapValue of ReturnValue;valuejava.util;Map;false;of;;;Argument[8];MapKey of ReturnValue;valuejava.util;Map;false;of;;;Argument[9];MapValue of ReturnValue;valuejava.util;Map;false;ofEntries;;;MapKey of ArrayElement of Argument[0];MapKey of ReturnValue;valuejava.util;Map;false;ofEntries;;;MapValue of ArrayElement of Argument[0];MapValue of ReturnValue;valuejava.util;Map;true;computeIfAbsent;;;MapValue of Argument[-1];ReturnValue;valuejava.util;Map;true;computeIfAbsent;;;ReturnValue of Argument[1];MapValue of Argument[-1];valuejava.util;Map;true;computeIfAbsent;;;ReturnValue of Argument[1];ReturnValue;valuejava.util;Map;true;entrySet;;;MapKey of Argument[-1];MapKey of Element of ReturnValue;valuejava.util;Map;true;entrySet;;;MapValue of Argument[-1];MapValue of Element of ReturnValue;valuejava.util;Map;true;forEach;(BiConsumer);;MapKey of Argument[-1];Parameter[0] of Argument[0];valuejava.util;Map;true;forEach;(BiConsumer);;MapValue of Argument[-1];Parameter[1] of Argument[0];valuejava.util;Map;true;get;;;MapValue of Argument[-1];ReturnValue;valuejava.util;Map;true;getOrDefault;;;Argument[1];ReturnValue;valuejava.util;Map;true;getOrDefault;;;MapValue of Argument[-1];ReturnValue;valuejava.util;Map;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;valuejava.util;Map;true;merge;(Object,Object,BiFunction);;Argument[1];MapValue of Argument[-1];valuejava.util;Map;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];valuejava.util;Map;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];valuejava.util;Map;true;put;(Object,Object);;MapValue of Argument[-1];ReturnValue;valuejava.util;Map;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;Map;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;Map;true;putIfAbsent;;;Argument[0];MapKey of Argument[-1];valuejava.util;Map;true;putIfAbsent;;;Argument[1];MapValue of Argument[-1];valuejava.util;Map;true;putIfAbsent;;;MapValue of Argument[-1];ReturnValue;valuejava.util;Map;true;remove;(Object);;MapValue of Argument[-1];ReturnValue;valuejava.util;Map;true;replace;(Object,Object);;Argument[0];MapKey of Argument[-1];valuejava.util;Map;true;replace;(Object,Object);;Argument[1];MapValue of Argument[-1];valuejava.util;Map;true;replace;(Object,Object);;MapValue of Argument[-1];ReturnValue;valuejava.util;Map;true;replace;(Object,Object,Object);;Argument[0];MapKey of Argument[-1];valuejava.util;Map;true;replace;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];valuejava.util;Map;true;values;();;MapValue of Argument[-1];Element of ReturnValue;valuejava.util;NavigableMap;true;ceilingEntry;(Object);;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;ceilingEntry;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;descendingMap;();;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;descendingMap;();;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;firstEntry;();;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;firstEntry;();;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;floorEntry;(Object);;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;floorEntry;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;headMap;(Object,boolean);;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;headMap;(Object,boolean);;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;higherEntry;(Object);;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;higherEntry;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;lastEntry;();;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;lastEntry;();;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;lowerEntry;(Object);;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;lowerEntry;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;pollFirstEntry;();;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;pollFirstEntry;();;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;pollLastEntry;();;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;pollLastEntry;();;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;subMap;(Object,boolean,Object,boolean);;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;subMap;(Object,boolean,Object,boolean);;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableMap;true;tailMap;(Object,boolean);;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;NavigableMap;true;tailMap;(Object,boolean);;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;NavigableSet;true;ceiling;(Object);;Element of Argument[-1];ReturnValue;valuejava.util;NavigableSet;true;descendingIterator;();;Element of Argument[-1];Element of ReturnValue;valuejava.util;NavigableSet;true;descendingSet;();;Element of Argument[-1];Element of ReturnValue;valuejava.util;NavigableSet;true;floor;(Object);;Element of Argument[-1];ReturnValue;valuejava.util;NavigableSet;true;headSet;(Object,boolean);;Element of Argument[-1];Element of ReturnValue;valuejava.util;NavigableSet;true;higher;(Object);;Element of Argument[-1];ReturnValue;valuejava.util;NavigableSet;true;lower;(Object);;Element of Argument[-1];ReturnValue;valuejava.util;NavigableSet;true;pollFirst;();;Element of Argument[-1];ReturnValue;valuejava.util;NavigableSet;true;pollLast;();;Element of Argument[-1];ReturnValue;valuejava.util;NavigableSet;true;subSet;(Object,boolean,Object,boolean);;Element of Argument[-1];Element of ReturnValue;valuejava.util;NavigableSet;true;tailSet;(Object,boolean);;Element of Argument[-1];Element of ReturnValue;valuejava.util;PriorityQueue;false;PriorityQueue;(Collection);;Element of Argument[0];Element of Argument[-1];valuejava.util;PriorityQueue;false;PriorityQueue;(PriorityQueue);;Element of Argument[0];Element of Argument[-1];valuejava.util;PriorityQueue;false;PriorityQueue;(SortedSet);;Element of Argument[0];Element of Argument[-1];valuejava.util;Queue;true;element;();;Element of Argument[-1];ReturnValue;valuejava.util;Queue;true;offer;(Object);;Argument[0];Element of Argument[-1];valuejava.util;Queue;true;peek;();;Element of Argument[-1];ReturnValue;valuejava.util;Queue;true;poll;();;Element of Argument[-1];ReturnValue;valuejava.util;Queue;true;remove;();;Element of Argument[-1];ReturnValue;valuejava.util;Scanner;true;next;(Pattern);;Argument[-1];ReturnValue;taintjava.util;Scanner;true;next;(String);;Argument[-1];ReturnValue;taintjava.util;Set;false;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;valuejava.util;Set;false;of;(Object);;Argument[0];Element of ReturnValue;valuejava.util;Set;false;of;(Object,Object);;Argument[0..1];Element of ReturnValue;valuejava.util;Set;false;of;(Object,Object,Object);;Argument[0..2];Element of ReturnValue;valuejava.util;Set;false;of;(Object,Object,Object,Object);;Argument[0..3];Element of ReturnValue;valuejava.util;Set;false;of;(Object,Object,Object,Object,Object);;Argument[0..4];Element of ReturnValue;valuejava.util;Set;false;of;(Object,Object,Object,Object,Object,Object);;Argument[0..5];Element of ReturnValue;valuejava.util;Set;false;of;(Object,Object,Object,Object,Object,Object,Object);;Argument[0..6];Element of ReturnValue;valuejava.util;Set;false;of;(Object,Object,Object,Object,Object,Object,Object,Object);;Argument[0..7];Element of ReturnValue;valuejava.util;Set;false;of;(Object,Object,Object,Object,Object,Object,Object,Object,Object);;Argument[0..8];Element of ReturnValue;valuejava.util;Set;false;of;(Object,Object,Object,Object,Object,Object,Object,Object,Object,Object);;Argument[0..9];Element of ReturnValue;valuejava.util;Set;false;of;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuejava.util;SortedMap;true;headMap;(Object);;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;SortedMap;true;headMap;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;SortedMap;true;subMap;(Object,Object);;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;SortedMap;true;subMap;(Object,Object);;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;SortedMap;true;tailMap;(Object);;MapKey of Argument[-1];MapKey of ReturnValue;valuejava.util;SortedMap;true;tailMap;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;valuejava.util;SortedSet;true;first;();;Element of Argument[-1];ReturnValue;valuejava.util;SortedSet;true;headSet;(Object);;Element of Argument[-1];Element of ReturnValue;valuejava.util;SortedSet;true;last;();;Element of Argument[-1];ReturnValue;valuejava.util;SortedSet;true;subSet;(Object,Object);;Element of Argument[-1];Element of ReturnValue;valuejava.util;SortedSet;true;tailSet;(Object);;Element of Argument[-1];Element of ReturnValue;valuejava.util;Stack;true;peek;();;Element of Argument[-1];ReturnValue;valuejava.util;Stack;true;pop;();;Element of Argument[-1];ReturnValue;valuejava.util;Stack;true;push;(Object);;Argument[0];Element of Argument[-1];valuejava.util;TreeMap;false;TreeMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;TreeMap;false;TreeMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;TreeMap;false;TreeMap;(SortedMap);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;TreeMap;false;TreeMap;(SortedMap);;MapValue of Argument[0];MapValue of Argument[-1];valuejava.util;TreeSet;false;TreeSet;(Collection);;Element of Argument[0];Element of Argument[-1];valuejava.util;TreeSet;false;TreeSet;(SortedSet);;Element of Argument[0];Element of Argument[-1];valuejava.util;Vector;false;Vector;(Collection);;Element of Argument[0];Element of Argument[-1];valuejava.util;Vector;true;addElement;(Object);;Argument[0];Element of Argument[-1];valuejava.util;Vector;true;copyInto;(Object[]);;Element of Argument[-1];ArrayElement of Argument[0];valuejava.util;Vector;true;elementAt;(int);;Element of Argument[-1];ReturnValue;valuejava.util;Vector;true;elements;();;Element of Argument[-1];Element of ReturnValue;valuejava.util;Vector;true;firstElement;();;Element of Argument[-1];ReturnValue;valuejava.util;Vector;true;insertElementAt;(Object,int);;Argument[0];Element of Argument[-1];valuejava.util;Vector;true;lastElement;();;Element of Argument[-1];ReturnValue;valuejava.util;Vector;true;setElementAt;(Object,int);;Argument[0];Element of Argument[-1];valuejava.util;WeakHashMap;false;WeakHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuejava.util;WeakHashMap;false;WeakHashMap;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;ArrayListMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ArrayListMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ArrayTable;true;create;(Iterable,Iterable);;Element of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;ArrayTable;true;create;(Iterable,Iterable);;Element of Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;ArrayTable;true;create;(Table);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ArrayTable;true;create;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;ArrayTable;true;create;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[1];MapValue of Argument[-1];valuecom.google.common.collect;BiMap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;BiMap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;ClassToInstanceMap;true;getInstance;(Class);;MapValue of Argument[-1];ReturnValue;valuecom.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;Argument[1];MapValue of Argument[-1];valuecom.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;MapValue of Argument[-1];ReturnValue;valuecom.google.common.collect;Collections2;false;filter;(Collection,Predicate);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Collections2;false;orderedPermutations;(Iterable);;Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Collections2;false;orderedPermutations;(Iterable,Comparator);;Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Collections2;false;permutations;(Collection);;Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;ConcurrentHashMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;HashBasedTable;true;create;(Table);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;HashBasedTable;true;create;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;HashBasedTable;true;create;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;HashBiMap;true;create;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;HashBiMap;true;create;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;HashMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;HashMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;HashMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableBiMap;true;of;;;Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableBiMap;true;of;;;Argument[1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableBiMap;true;of;;;Argument[2];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableBiMap;true;of;;;Argument[3];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableBiMap;true;of;;;Argument[4];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableBiMap;true;of;;;Argument[5];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableBiMap;true;of;;;Argument[6];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableBiMap;true;of;;;Argument[7];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableBiMap;true;of;;;Argument[8];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableBiMap;true;of;;;Argument[9];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableClassToInstanceMap;true;copyOf;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableClassToInstanceMap;true;copyOf;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableClassToInstanceMap;true;of;(Class,Object);;Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableClassToInstanceMap;true;of;(Class,Object);;Argument[1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];valuecom.google.common.collect;ImmutableCollection$Builder;true;add;(Object[]);;ArrayElement of Argument[0];Element of Argument[-1];valuecom.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];valuecom.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];valuecom.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;ImmutableCollection;true;asList;();;Element of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;ImmutableList;true;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableList;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableList;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableList;true;copyOf;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;valuecom.google.common.collect;ImmutableList;true;of;;;ArrayElement of Argument[12];Element of ReturnValue;valuecom.google.common.collect;ImmutableList;true;reverse;();;Element of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;ImmutableList;true;sortedCopyOf;(Comparator,Iterable);;Element of Argument[1];Element of ReturnValue;valuecom.google.common.collect;ImmutableList;true;sortedCopyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableListMultimap;true;of;;;Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableListMultimap;true;of;;;Argument[1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableListMultimap;true;of;;;Argument[2];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableListMultimap;true;of;;;Argument[3];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableListMultimap;true;of;;;Argument[4];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableListMultimap;true;of;;;Argument[5];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableListMultimap;true;of;;;Argument[6];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableListMultimap;true;of;;;Argument[7];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableListMultimap;true;of;;;Argument[8];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableListMultimap;true;of;;;Argument[9];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMap$Builder;true;orderEntriesByValue;(Comparator);;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableMap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;copyOf;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;copyOf;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;of;;;Argument[6];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;of;;;Argument[7];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;of;;;Argument[8];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMap;true;of;;;Argument[9];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMultimap$Builder;true;orderKeysBy;(Comparator);;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableMultimap$Builder;true;orderValuesBy;(Comparator);;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Object[]);;Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Object[]);;ArrayElement of Argument[1];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;copyOf;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;copyOf;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;of;;;Argument[6];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;of;;;Argument[7];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;of;;;Argument[8];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableMultimap;true;of;;;Argument[9];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableMultiset$Builder;true;addCopies;(Object,int);;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableMultiset$Builder;true;addCopies;(Object,int);;Argument[0];Element of Argument[-1];valuecom.google.common.collect;ImmutableMultiset$Builder;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];valuecom.google.common.collect;ImmutableMultiset;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableMultiset;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableMultiset;true;copyOf;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;valuecom.google.common.collect;ImmutableMultiset;true;of;;;ArrayElement of Argument[6];Element of ReturnValue;valuecom.google.common.collect;ImmutableSet;true;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSet;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSet;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSet;true;copyOf;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;valuecom.google.common.collect;ImmutableSet;true;of;;;ArrayElement of Argument[6];Element of ReturnValue;valuecom.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[2];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[3];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[4];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[5];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[6];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[7];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[8];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[9];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;copyOf;(Iterable,Comparator);;MapKey of Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;copyOf;(Iterable,Comparator);;MapValue of Element of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;copyOf;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;copyOf;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;copyOf;(Map,Comparator);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;copyOf;(Map,Comparator);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;copyOfSorted;(SortedMap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;copyOfSorted;(SortedMap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;of;;;Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;of;;;Argument[1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;of;;;Argument[2];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;of;;;Argument[3];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;of;;;Argument[4];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;of;;;Argument[5];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;of;;;Argument[6];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;of;;;Argument[7];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;of;;;Argument[8];MapKey of ReturnValue;valuecom.google.common.collect;ImmutableSortedMap;true;of;;;Argument[9];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Comparable[]);;ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Comparator,Iterable);;Element of Argument[1];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Comparator,Iterator);;Element of Argument[1];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedMultiset;true;copyOfSorted;(SortedMultiset);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedMultiset;true;of;;;ArrayElement of Argument[6];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedSet;true;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparable[]);;ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparator,Collection);;Element of Argument[1];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparator,Iterable);;Element of Argument[1];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparator,Iterator);;Element of Argument[1];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedSet;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedSet;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedSet;true;copyOfSorted;(SortedSet);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;valuecom.google.common.collect;ImmutableSortedSet;true;of;;;ArrayElement of Argument[6];Element of ReturnValue;valuecom.google.common.collect;ImmutableTable$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableTable$Builder;true;build;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;ImmutableTable$Builder;true;build;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;ImmutableTable$Builder;true;orderColumnsBy;(Comparator);;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableTable$Builder;true;orderRowsBy;(Comparator);;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;MapValue of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];valuecom.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];valuecom.google.common.collect;ImmutableTable$Builder;true;put;(Object,Object,Object);;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableTable$Builder;true;put;(Object,Object,Object);;Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];valuecom.google.common.collect;ImmutableTable$Builder;true;put;(Object,Object,Object);;Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];valuecom.google.common.collect;ImmutableTable$Builder;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;Argument[-1];ReturnValue;valuecom.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];valuecom.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];valuecom.google.common.collect;ImmutableTable;true;copyOf;(Table);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ImmutableTable;true;copyOf;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;ImmutableTable;true;copyOf;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;ImmutableTable;true;of;(Object,Object,Object);;Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;ImmutableTable;true;of;(Object,Object,Object);;Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;ImmutableTable;true;of;(Object,Object,Object);;Argument[2];MapValue of ReturnValue;valuecom.google.common.collect;Iterables;false;addAll;(Collection,Iterable);;Element of Argument[1];Element of Argument[0];valuecom.google.common.collect;Iterables;false;concat;(Iterable);;Element of Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;concat;(Iterable,Iterable);;Element of Argument[0..1];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable);;Element of Argument[0..2];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0..3];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;concat;(Iterable[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;consumingIterable;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;cycle;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;cycle;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;filter;(Iterable,Class);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;filter;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;find;(Iterable,Predicate);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterables;false;find;(Iterable,Predicate,Object);;Argument[2];ReturnValue;valuecom.google.common.collect;Iterables;false;find;(Iterable,Predicate,Object);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterables;false;get;(Iterable,int);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterables;false;get;(Iterable,int,Object);;Argument[2];ReturnValue;valuecom.google.common.collect;Iterables;false;get;(Iterable,int,Object);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterables;false;getLast;(Iterable);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterables;false;getLast;(Iterable,Object);;Argument[1];ReturnValue;valuecom.google.common.collect;Iterables;false;getLast;(Iterable,Object);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterables;false;getOnlyElement;(Iterable);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterables;false;getOnlyElement;(Iterable,Object);;Argument[1];ReturnValue;valuecom.google.common.collect;Iterables;false;getOnlyElement;(Iterable,Object);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterables;false;limit;(Iterable,int);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;mergeSorted;(Iterable,Comparator);;Element of Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;paddedPartition;(Iterable,int);;Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Iterables;false;partition;(Iterable,int);;Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Iterables;false;skip;(Iterable,int);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;toArray;(Iterable,Class);;Element of Argument[0];ArrayElement of ReturnValue;valuecom.google.common.collect;Iterables;false;tryFind;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;unmodifiableIterable;(ImmutableCollection);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterables;false;unmodifiableIterable;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;addAll;(Collection,Iterator);;Element of Argument[1];Element of Argument[0];valuecom.google.common.collect;Iterators;false;asEnumeration;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;concat;(Iterator);;Element of Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;concat;(Iterator,Iterator);;Element of Argument[0..1];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator);;Element of Argument[0..2];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator,Iterator);;Element of Argument[0..3];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;concat;(Iterator[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;consumingIterator;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;cycle;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;cycle;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;filter;(Iterator,Class);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;filter;(Iterator,Predicate);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;find;(Iterator,Predicate);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterators;false;find;(Iterator,Predicate,Object);;Argument[2];ReturnValue;valuecom.google.common.collect;Iterators;false;find;(Iterator,Predicate,Object);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterators;false;forArray;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;forEnumeration;(Enumeration);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;get;(Iterator,int);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterators;false;get;(Iterator,int,Object);;Argument[2];ReturnValue;valuecom.google.common.collect;Iterators;false;get;(Iterator,int,Object);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterators;false;getLast;(Iterator);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterators;false;getLast;(Iterator,Object);;Argument[1];ReturnValue;valuecom.google.common.collect;Iterators;false;getLast;(Iterator,Object);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterators;false;getNext;(Iterator,Object);;Argument[1];ReturnValue;valuecom.google.common.collect;Iterators;false;getNext;(Iterator,Object);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterators;false;getOnlyElement;(Iterator);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterators;false;getOnlyElement;(Iterator,Object);;Argument[1];ReturnValue;valuecom.google.common.collect;Iterators;false;getOnlyElement;(Iterator,Object);;Element of Argument[0];ReturnValue;valuecom.google.common.collect;Iterators;false;limit;(Iterator,int);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;mergeSorted;(Iterable,Comparator);;Element of Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;paddedPartition;(Iterator,int);;Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Iterators;false;partition;(Iterator,int);;Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Iterators;false;peekingIterator;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;peekingIterator;(PeekingIterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;singletonIterator;(Object);;Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;toArray;(Iterator,Class);;Element of Argument[0];ArrayElement of ReturnValue;valuecom.google.common.collect;Iterators;false;tryFind;(Iterator,Predicate);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;unmodifiableIterator;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Iterators;false;unmodifiableIterator;(UnmodifiableIterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;LinkedHashMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;LinkedHashMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;LinkedHashMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;LinkedListMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;LinkedListMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Lists;false;asList;(Object,Object,Object[]);;Argument[0..1];Element of ReturnValue;valuecom.google.common.collect;Lists;false;asList;(Object,Object,Object[]);;ArrayElement of Argument[2];Element of ReturnValue;valuecom.google.common.collect;Lists;false;asList;(Object,Object[]);;Argument[0];Element of ReturnValue;valuecom.google.common.collect;Lists;false;asList;(Object,Object[]);;ArrayElement of Argument[1];Element of ReturnValue;valuecom.google.common.collect;Lists;false;cartesianProduct;(List);;Element of Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Lists;false;cartesianProduct;(List[]);;Element of ArrayElement of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Lists;false;charactersOf;(CharSequence);;Argument[0];Element of ReturnValue;taintcom.google.common.collect;Lists;false;charactersOf;(String);;Argument[0];Element of ReturnValue;taintcom.google.common.collect;Lists;false;newArrayList;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Lists;false;newArrayList;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Lists;false;newArrayList;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Lists;false;newCopyOnWriteArrayList;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Lists;false;newLinkedList;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Lists;false;partition;(List,int);;Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Lists;false;reverse;(List);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;MapDifference$ValueDifference;true;leftValue;();;SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];ReturnValue;valuecom.google.common.collect;MapDifference$ValueDifference;true;rightValue;();;SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesDiffering;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesDiffering;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesDiffering;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];SyntheticField[com.google.common.collect.MapDifference.left] of MapValue of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesDiffering;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];SyntheticField[com.google.common.collect.MapDifference.right] of MapValue of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesInCommon;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesInCommon;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesInCommon;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesInCommon;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesOnlyOnLeft;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesOnlyOnLeft;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesOnlyOnRight;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;MapDifference;true;entriesOnlyOnRight;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;asMap;(NavigableSet,Function);;Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;asMap;(Set,Function);;Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;asMap;(SortedSet,Function);;Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(Map,Map);;MapKey of Argument[0];MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(Map,Map);;MapKey of Argument[1];MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(Map,Map);;MapValue of Argument[0];MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(Map,Map);;MapValue of Argument[1];MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(Map,Map,Equivalence);;MapKey of Argument[0];MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(Map,Map,Equivalence);;MapKey of Argument[1];MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(Map,Map,Equivalence);;MapValue of Argument[0];MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(Map,Map,Equivalence);;MapValue of Argument[1];MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(SortedMap,Map);;MapKey of Argument[0];MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(SortedMap,Map);;MapKey of Argument[1];MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(SortedMap,Map);;MapValue of Argument[0];MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;valuecom.google.common.collect;Maps;false;difference;(SortedMap,Map);;MapValue of Argument[1];MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;valuecom.google.common.collect;Maps;false;filterEntries;;;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;filterKeys;;;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;filterValues;;;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;fromProperties;(Properties);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;fromProperties;(Properties);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;immutableEntry;(Object,Object);;Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;immutableEntry;(Object,Object);;Argument[1];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;immutableEnumMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;newEnumMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;newHashMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;newHashMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;newLinkedHashMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;newLinkedHashMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;newTreeMap;(SortedMap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;newTreeMap;(SortedMap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;subMap;(NavigableMap,Range);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;subMap;(NavigableMap,Range);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;synchronizedBiMap;(BiMap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;synchronizedBiMap;(BiMap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;synchronizedNavigableMap;(NavigableMap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;synchronizedNavigableMap;(NavigableMap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;toMap;(Iterable,Function);;Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;toMap;(Iterator,Function);;Element of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;transformValues;(Map,Function);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;transformValues;(NavigableMap,Function);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;transformValues;(SortedMap,Function);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;uniqueIndex;(Iterable,Function);;Element of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;uniqueIndex;(Iterator,Function);;Element of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;unmodifiableBiMap;(BiMap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;unmodifiableBiMap;(BiMap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Maps;false;unmodifiableNavigableMap;(NavigableMap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Maps;false;unmodifiableNavigableMap;(NavigableMap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;valuecom.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;valuecom.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;valuecom.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Multimap;true;keys;();;MapKey of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];valuecom.google.common.collect;Multimap;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;Multimap;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];valuecom.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];valuecom.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];valuecom.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Multimaps;false;asMap;(ListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;asMap;(ListMultimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;asMap;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;asMap;(Multimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;asMap;(SetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;asMap;(SetMultimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;asMap;(SortedSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;asMap;(SortedSetMultimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterEntries;(Multimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterEntries;(Multimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterEntries;(SetMultimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterEntries;(SetMultimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterKeys;(Multimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterKeys;(Multimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterKeys;(SetMultimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterKeys;(SetMultimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterValues;(Multimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterValues;(Multimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterValues;(SetMultimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;filterValues;(SetMultimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;forMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;forMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;index;(Iterable,Function);;Element of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;index;(Iterator,Function);;Element of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;invertFrom;(Multimap,Multimap);;Argument[1];ReturnValue;valuecom.google.common.collect;Multimaps;false;invertFrom;(Multimap,Multimap);;MapKey of Argument[0];MapValue of Argument[1];valuecom.google.common.collect;Multimaps;false;invertFrom;(Multimap,Multimap);;MapValue of Argument[0];MapKey of Argument[1];valuecom.google.common.collect;Multimaps;false;newListMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;newListMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;newMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;newMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;newSetMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;newSetMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;newSortedSetMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;newSortedSetMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;synchronizedListMultimap;(ListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;synchronizedListMultimap;(ListMultimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;synchronizedMultimap;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;synchronizedMultimap;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;synchronizedSetMultimap;(SetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;synchronizedSetMultimap;(SetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;synchronizedSortedSetMultimap;(SortedSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;synchronizedSortedSetMultimap;(SortedSetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;transformValues;(ListMultimap,Function);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;transformValues;(Multimap,Function);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ImmutableListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ImmutableListMultimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ListMultimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableMultimap;(ImmutableMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableMultimap;(ImmutableMultimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableMultimap;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableMultimap;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(ImmutableSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(ImmutableSetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(SetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(SetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableSortedSetMultimap;(SortedSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;Multimaps;false;unmodifiableSortedSetMultimap;(SortedSetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Multiset$Entry;true;getElement;();;Element of Argument[-1];ReturnValue;valuecom.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];valuecom.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Multiset;true;entrySet;();;Element of Argument[-1];Element of Element of ReturnValue;valuecom.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];valuecom.google.common.collect;Multiset;true;setCount;(Object,int,int);;Argument[0];Element of Argument[-1];valuecom.google.common.collect;Multisets;false;copyHighestCountFirst;(Multiset);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Multisets;false;difference;(Multiset,Multiset);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Multisets;false;filter;(Multiset,Predicate);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Multisets;false;immutableEntry;(Object,int);;Argument[0];Element of ReturnValue;valuecom.google.common.collect;Multisets;false;intersection;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;valuecom.google.common.collect;Multisets;false;sum;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;valuecom.google.common.collect;Multisets;false;union;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;valuecom.google.common.collect;Multisets;false;unmodifiableMultiset;(ImmutableMultiset);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Multisets;false;unmodifiableMultiset;(Multiset);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Multisets;false;unmodifiableSortedMultiset;(SortedMultiset);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;MutableClassToInstanceMap;true;create;(Map);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;MutableClassToInstanceMap;true;create;(Map);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;ObjectArrays;false;concat;(Object,Object[]);;Argument[0];ArrayElement of ReturnValue;valuecom.google.common.collect;ObjectArrays;false;concat;(Object,Object[]);;ArrayElement of Argument[1];ArrayElement of ReturnValue;valuecom.google.common.collect;ObjectArrays;false;concat;(Object[],Object);;Argument[1];ArrayElement of ReturnValue;valuecom.google.common.collect;ObjectArrays;false;concat;(Object[],Object);;ArrayElement of Argument[0];ArrayElement of ReturnValue;valuecom.google.common.collect;ObjectArrays;false;concat;(Object[],Object[],Class);;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;valuecom.google.common.collect;Queues;false;drain;(BlockingQueue,Collection,int,Duration);;Element of Argument[0];Element of Argument[1];valuecom.google.common.collect;Queues;false;drain;(BlockingQueue,Collection,int,long,TimeUnit);;Element of Argument[0];Element of Argument[1];valuecom.google.common.collect;Queues;false;newArrayDeque;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Queues;false;newConcurrentLinkedQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Queues;false;newLinkedBlockingDeque;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Queues;false;newLinkedBlockingQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Queues;false;newPriorityBlockingQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Queues;false;newPriorityQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Queues;false;synchronizedDeque;(Deque);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Queues;false;synchronizedQueue;(Queue);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets$SetView;true;copyInto;(Set);;Element of Argument[-1];Element of Argument[0];valuecom.google.common.collect;Sets$SetView;true;immutableCopy;();;Element of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Sets;false;cartesianProduct;(List);;Element of Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Sets;false;cartesianProduct;(Set[]);;Element of ArrayElement of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Sets;false;combinations;(Set,int);;Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Sets;false;difference;(Set,Set);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;filter;(NavigableSet,Predicate);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;filter;(Set,Predicate);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;filter;(SortedSet,Predicate);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;intersection;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;valuecom.google.common.collect;Sets;false;newConcurrentHashSet;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;newCopyOnWriteArraySet;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;newHashSet;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;newHashSet;(Iterator);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;newHashSet;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;newLinkedHashSet;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;newSetFromMap;(Map);;MapKey of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;newTreeSet;(Iterable);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;powerSet;(Set);;Element of Argument[0];Element of Element of ReturnValue;valuecom.google.common.collect;Sets;false;subSet;(NavigableSet,Range);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;symmetricDifference;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;valuecom.google.common.collect;Sets;false;synchronizedNavigableSet;(NavigableSet);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Sets;false;union;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;valuecom.google.common.collect;Sets;false;unmodifiableNavigableSet;(NavigableSet);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.collect;Table$Cell;true;getColumnKey;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];ReturnValue;valuecom.google.common.collect;Table$Cell;true;getRowKey;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];ReturnValue;valuecom.google.common.collect;Table$Cell;true;getValue;();;MapValue of Argument[-1];ReturnValue;valuecom.google.common.collect;Table;true;cellSet;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;valuecom.google.common.collect;Table;true;cellSet;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.columnKey] of Element of ReturnValue;valuecom.google.common.collect;Table;true;cellSet;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.rowKey] of Element of ReturnValue;valuecom.google.common.collect;Table;true;column;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;Table;true;column;(Object);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;Table;true;columnKeySet;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Table;true;columnMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;valuecom.google.common.collect;Table;true;columnMap;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;Table;true;columnMap;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of MapValue of ReturnValue;valuecom.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;valuecom.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];valuecom.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];valuecom.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];valuecom.google.common.collect;Table;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];valuecom.google.common.collect;Table;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];valuecom.google.common.collect;Table;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];valuecom.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;valuecom.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;valuecom.google.common.collect;Table;true;row;(Object);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;Table;true;rowKeySet;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;valuecom.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of MapValue of ReturnValue;valuecom.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of ReturnValue;valuecom.google.common.collect;Table;true;values;();;MapValue of Argument[-1];Element of ReturnValue;valuecom.google.common.collect;Tables;false;immutableCell;(Object,Object,Object);;Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;Tables;false;immutableCell;(Object,Object,Object);;Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;Tables;false;immutableCell;(Object,Object,Object);;Argument[2];MapValue of ReturnValue;valuecom.google.common.collect;Tables;false;newCustomTable;(Map,Supplier);;MapKey of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;Tables;false;newCustomTable;(Map,Supplier);;MapKey of MapValue of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;Tables;false;newCustomTable;(Map,Supplier);;MapValue of MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Tables;false;synchronizedTable;(Table);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Tables;false;synchronizedTable;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;Tables;false;synchronizedTable;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;Tables;false;transformValues;(Table,Function);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;Tables;false;transformValues;(Table,Function);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;Tables;false;transpose;(Table);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Tables;false;transpose;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;Tables;false;transpose;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;Tables;false;unmodifiableRowSortedTable;(RowSortedTable);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Tables;false;unmodifiableRowSortedTable;(RowSortedTable);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;Tables;false;unmodifiableRowSortedTable;(RowSortedTable);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;Tables;false;unmodifiableTable;(Table);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;Tables;false;unmodifiableTable;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;Tables;false;unmodifiableTable;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;TreeBasedTable;true;create;(TreeBasedTable);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;TreeBasedTable;true;create;(TreeBasedTable);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;valuecom.google.common.collect;TreeBasedTable;true;create;(TreeBasedTable);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;valuecom.google.common.collect;TreeMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;valuecom.google.common.collect;TreeMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;valuecom.google.common.collect;TreeMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;valueHeadersasMultiValueMaptaintgetAllgetNamesTypedDatagetBufferwriteToratpack.formFormfilesObjectsasMapparamratpack.core.formokflexjsonJSONDeserializeruserequireNonNullgetDomainArgument[0..4]MediaTypeNewCookieacceptedtoCookieandroid.osParcelreadParcelableListrequireNonNullElsegetExpirygetMaxAgePathSegmentMapKey of Argument[0]getSubtypeUploadedFilewithCharsetfromResponserequireNonNullElseGetHttpHeadersGenericEntitygetEntityArgument[0..9]getRequestHeaderRegExUtilsgetRequestHeadersResponse$ResponseBuilderorg.apache.commons.lang3.textStrLookupremoveFirstorg.apache.commons.collections.multimapArrayListValuedHashMapMapKey of Argument[-1]MapValue of Argument[0]Element of MapValue of Argument[-1](MultiValuedMap)Element of MapValue of Argument[0]HashSetValuedHashMapTransformedMultiValuedMaptransformingMapElement of MapValue of ReturnValueMapKey of ReturnValueUnmodifiableMultiValuedMapunmodifiableMultiValuedMaporg.apache.commons.collections.bagAbstractBagDecoratorElement of Argument[0]Element of Argument[-1]AbstractMapBagAbstractSortedBagDecoratorCollectionBagcollectionBagElement of ReturnValueCollectionSortedBagcollectionSortedBagHashBagPredicatedBagpredicatedBagPredicatedSortedBagpredicatedSortedBagSynchronizedBagsynchronizedBagSynchronizedSortedBagsynchronizedSortedBagTransformedBagtransformedBagTransformedSortedBagtransformedSortedBagTreeBagUnmodifiableBagunmodifiableBagUnmodifiableSortedBagunmodifiableSortedBagorg.apache.commons.collections.listAbstractLinkedListaddFirstaddLastgetFirstgetLastremoveLastAbstractListDecoratorAbstractSerializableListDecoratorCursorableLinkedListcursorFixedSizeListfixedSizeListGrowthListgrowthListLazyListlazyListNodeCachingLinkedListPredicatedListpredicatedListSetUniqueListasSetsetUniqueListTransformedListtransformingListTreeListUnmodifiableListunmodifiableListSetUtils$SetViewcopyIntocreateIteratortoSetSetUtilsdifferencedisjunctionElement of Argument[1]emptyIfNullhashSetArrayElement of Argument[0]intersectionorderedSetpredicatedNavigableSetpredicatedSetpredicatedSortedSetsynchronizedSetsynchronizedSortedSettransformedNavigableSettransformedSettransformedSortedSetunionunmodifiableNavigableSetunmodifiableSetunmodifiableSortedSetListUtilsdefaultIfNulllongestCommonSubsequence(List,List,Equator)partitionElement of Element of ReturnValueselectselectRejectedsynchronizedListtransformedListorg.apache.commons.collections.setAbstractNavigableSetDecoratorAbstractSetDecoratorAbstractSortedSetDecoratorCompositeSet$SetMutatorElement of Element of Argument[1]Element of Argument[2]CompositeSet(Set[])Element of ArrayElement of Argument[0]addComposited(Set,Set)getSetsListOrderedSetasListlistOrderedSetMapBackedSetmapBackedSetPredicatedNavigableSetPredicatedSetPredicatedSortedSetTransformedNavigableSettransformingNavigableSetTransformedSettransformingSetTransformedSortedSettransformingSortedSetUnmodifiableNavigableSetUnmodifiableSetUnmodifiableSortedSetIterableUtilsboundedIterablechainedIterable(Iterable,Iterable,Iterable)(Iterable,Iterable,Iterable,Iterable)Element of Argument[3](Iterable[])collatedIterable(Comparator,Iterable,Iterable)filteredIterableforEachButLastloopingIterablereversedIterableskippingIterabletoListuniqueIterableunmodifiableIterablezippingIterable(Iterable,Iterable[])Element of ArrayElement of Argument[1]org.apache.commons.collections.bidimapAbstractBidiMapDecoratorMapValue of Argument[-1]AbstractDualBidiMapMapKey of Argument[1]MapKey of Argument[2]MapValue of Argument[1]MapValue of Argument[2]AbstractOrderedBidiMapDecoratorAbstractSortedBidiMapDecoratorDualHashBidiMapDualLinkedHashBidiMapDualTreeBidiMapinverseOrderedBidiMapMapValue of ReturnValueinverseSortedBidiMapTreeBidiMapUnmodifiableBidiMapunmodifiableBidiMapUnmodifiableOrderedBidiMapunmodifiableOrderedBidiMapUnmodifiableSortedBidiMapunmodifiableSortedBidiMapCollectionUtils(Collection,Enumeration)(Collection,Iterable)(Collection,Iterator)(Collection,Object[])ArrayElement of Argument[1]addIgnoreNullcollateextractSingleton(Iterable,int)(Iterator,int)(Map,int)getCardinalityMappermutationspredicatedCollection(Iterable,Predicate)(Iterable,Predicate,Collection)(Iterable,Predicate,Collection,Collection)synchronizedCollectiontransformingCollectionunmodifiableCollectionIteratorUtilsarrayIteratorarrayListIteratorasEnumerationasIterableasMultipleUseIterableboundedIteratorchainedIteratorElement of Element of Argument[0](Iterator,Iterator)(Iterator[])collatedIterator(Comparator,Collection)(Comparator,Iterator,Iterator)(Comparator,Iterator[])filteredIteratorfilteredListIteratorgetIteratorloopingIteratorloopingListIteratorpeekingIteratorpushbackIteratorsingletonIteratorsingletonListIteratorskippingIteratorArrayElement of ReturnValuetoListIteratorunmodifiableIteratorunmodifiableListIteratorunmodifiableMapIteratorzippingIterator(Iterator,Iterator,Iterator)org.apache.commons.collections.collectionAbstractCollectionDecoratordecoratedsetCollectionCompositeCollection$CollectionMutatorCompositeCollection(Collection,Collection)(Collection[])getCollectionstoCollectionIndexedCollectionnonUniqueIndexedCollectionuniqueIndexedCollectionPredicatedCollection$BuildercreatePredicatedBagcreatePredicatedListcreatePredicatedMultiSetcreatePredicatedQueuecreatePredicatedSetrejectedElementsPredicatedCollectionSynchronizedCollectionTransformedCollectionUnmodifiableBoundedCollectionunmodifiableBoundedCollectionUnmodifiableCollectionMapUtilsfixedSizeMapfixedSizeSortedMapgetStringinvertMapiterableMapiterableSortedMaplazyMaplazySortedMapmultiValueMaporderedMappopulateMap(Map,Iterable,Transformer)(MultiMap,Iterable,Transformer)predicatedMappredicatedSortedMapArrayElement of ArrayElement of Argument[1]MapKey of ArrayElement of Argument[1]MapValue of ArrayElement of Argument[1]safeAddToMapsynchronizedMapsynchronizedSortedMaptoMaptransformedMaptransformedSortedMapunmodifiableMapunmodifiableSortedMaporg.apache.commons.collections.keyvalueAbstractKeyValuesetKeyAbstractMapEntryAbstractMapEntryDecoratorgetMapEntryDefaultKeyValue(KeyValue)toMapEntryDefaultMapEntryMultiKey(Object[],boolean)TiedMapEntryUnmodifiableMapEntryArrayStackpoppushBaguniqueSetBidiMapinverseBidiMapremoveValueFluentIterableuniqueunmodifiablezipGetMapKey of Element of ReturnValueMapValue of Element of ReturnValueIterableGetmapIteratorKeyValueMapIteratorMultiMapMultiSet$EntrygetElementMultiSetMultiValuedMapentries(Object,Iterable)OrderedIteratorOrderedMapnextKeypreviousKeyPutSortedBagTrieprefixMaporg.apache.commons.collections.iteratorsAbstractIteratorDecoratorAbstractListIteratorDecoratorgetListIteratorAbstractMapIteratorDecoratorgetMapIteratorAbstractOrderedMapIteratorDecoratorgetOrderedMapIteratorAbstractUntypedIteratorDecoratorArrayIteratorgetArrayArrayListIteratorBoundedIteratorCollatingIteratoraddIteratorgetIteratorssetIteratorEnumerationIteratorgetEnumerationsetEnumerationFilterIteratorFilterListIterator(ListIterator)(ListIterator,Predicate)setListIteratorIteratorChainIteratorEnumerationIteratorIterableListIteratorWrapperLoopingIteratorLoopingListIteratorObjectArrayIteratorObjectArrayListIteratorPeekingIteratorelementPermutationIteratorElement of Element of Argument[-1]PushbackIteratorpushbackReverseListIteratorSingletonIteratorSingletonListIteratorSkippingIteratorUniqueFilterIteratorUnmodifiableIteratorUnmodifiableListIteratorumodifiableListIteratorUnmodifiableMapIteratorUnmodifiableOrderedMapIteratorunmodifiableOrderedMapIteratorZippingIteratororg.apache.commons.collections.mapAbstractHashedMapAbstractLinkedMapAbstractMapDecoratorAbstractOrderedMapDecorator(OrderedMap)AbstractSortedMapDecorator(SortedMap)CaseInsensitiveMapCompositeMap(Map,Map)(Map,Map,MapMutator)(Map[])MapKey of ArrayElement of Argument[0]MapValue of ArrayElement of Argument[0](Map[],MapMutator)removeCompositedDefaultedMapdefaultedMap(Map,Object)EntrySetToMapIteratorAdapterMapKey of Element of Argument[0]MapValue of Element of Argument[0]FixedSizeMapFixedSizeSortedMapFlat3MapHashedMapLRUMap(Map,boolean)LazyMapLazySortedMapLinkedMapListOrderedMapkeyListlistOrderedMapvalueListMultiKeyMapElement of MapKey of Argument[-1]Argument[5]removeMultiKeyMultiValueMapgetCollection(Object,Collection)PassiveExpiringMap(ExpirationPolicy,Map)(long,Map)(long,TimeUnit,Map)PredicatedMapPredicatedSortedMapSingletonMapTransformedMapTransformedSortedMaptransformingSortedMapUnmodifiableEntrySetunmodifiableEntrySetUnmodifiableMapUnmodifiableOrderedMapunmodifiableOrderedMapUnmodifiableSortedMaporg.apache.commons.collections4.multimaporg.apache.commons.collections4.bagorg.apache.commons.collections4.listorg.apache.commons.collections4.setorg.apache.commons.collections4.bidimaporg.apache.commons.collections4.collectionorg.apache.commons.collections4.keyvalueorg.apache.commons.collections4.iteratorsorg.apache.commons.collections4.mapgetMatrixParametersremovePatternreplacePatternorg.apache.commons.text.lookupStringLookupcom.fasterxml.jackson.coreJsonFactorycreateParserratpack.funcratpack.utilcom.fasterxml.jackson.databindObjectMappervalueToTreeconvertValueMultiMapUtilsObjectReaderasMultimapEnumerationUtilsmapLookuporg.apache.commons.collections.queueCircularFifoQueueorg.apache.commons.collections4.queue(ratpack.http.TypedData,ratpack.parse.Parse)BagUtilsSplitMapUtilsreadableMapwritableMaporg.apache.commons.collections.propertiesAbstractPropertiesFactoryorg.apache.commons.collections.trieAbstractPatriciaTrieselectKeytransformingBagTrieUtilsunmodifiableTrieorg.apache.commons.collections4.propertiesorg.apache.commons.collections4.trieQueueUtilspredicatedQueueStringLookupFactorymapStringLookupjavax.json.streamJsonParserFactoryjavax.jsonJsoncreateArrayBuilder(JsonArray)createDiffcreateMergeDiffcreateMergePatchcreateObjectBuilder(JsonObject)createPatchcreatePatchBuildercreatePointercreateReadercreateValuecreateWriterdecodePointerencodePointerJsonArraygetJsonArraygetJsonNumbergetJsonObjectgetJsonStringgetValuesAsJsonArrayBuilder(BigDecimal)(JsonArrayBuilder)(JsonObjectBuilder)(JsonValue)(int,BigDecimal)(int,BigInteger)(int,JsonArrayBuilder)(int,JsonObjectBuilder)(int,JsonValue)addNullsetNullJsonMergePatchtoJsonValueJsonNumberbigDecimalValuebigIntegerValuebigIntegerValueExactnumberValueJsonObjectJsonObjectBuilderJsonPatchtoJsonArrayJsonPatchBuilderJsonPointerJsonReaderreadArrayreadValueJsonReaderFactoryJsonStringJsonStructureJsonValueasJsonArrayasJsonObjectJsonWriterwriteArrayJsonWriterFactoryUriBuilderfromLinkfromPathfromUribuildFromEncodedbuildFromEncodedMapbuildFromMapfragmenthostmatrixParamqueryParamreplaceMatrixreplaceMatrixParamreplacePathreplaceQueryreplaceQueryParamresolveTemplateresolveTemplateFromEncodedresolveTemplatesresolveTemplatesFromEncodedschemeschemeSpecificPartsegmenttoTemplateuserInfoUriInfogetAbsolutePathBuildergetPathParametersgetPathSegmentsgetQueryParametersgetRequestUrigetRequestUriBuilderMultivaluedMap(Object,List)putSinglejakarta.json.streamjakarta.jsonMultivaluedHashMapselectValuesynchronizedQueuetransformingQueueunmodifiableQueuePatriciaTrie(StringTokenizer)transformingSortedBagAbstractMultivaluedMap(ratpack.core.http.TypedData,ratpack.core.parse.Parse)MultiSetUtilspredicatedMultiSetsynchronizedMultiSetunmodifiableMultiSetorg.apache.commons.collections.multisetHashMultiSetUnmodifiableTrieorg.apache.commons.collections4.multiset(Enumeration)PredicatedQueuetransformedMultiValuedMap(MultivaluedMap)(ClassLoader,String)TransformedQueuegetValuesAsBaggetValuesAsSetSynchronizedQueueUnmodifiableQueuegetValuesAsListorg.apache.commons.collections.splitmapTransformedSplitMaporg.apache.commons.collections4.splitmapPredicatedMultiSetSynchronizedMultiSetUnmodifiableMultiSetAbstractIterableGetMapDecoratororg.apache.commons.lang3.mutableMutableObjectSyntheticField[org.apache.commons.lang3.mutable.MutableObject.value] of Argument[-1]readBinderArrayreadBinderListreadBooleanArrayreadByteArrayreadCharArrayreadDoubleArrayreadFloatArrayreadIntArrayreadListreadLongArrayreadMapreadStringArrayreadStringListreadTypedArrayreadTypedListreadArrayListreadBundlereadFileDescriptorreadHashMapreadParcelablereadParcelableArrayreadPersistableBundlereadSerializablereadSizereadSizeFreadSparseArrayreadSparseBooleanArrayreadStringreadStrongBinderreadTypedObjectjodd.jsonJsonParserallowAllClassesallowClasslazylooseModesetClassMetadataNamestrictTypesuseAltPathswithClassMetadatawithValueConverterObjectUtilsCONSTCONST_BYTECONST_SHORTcloneIfPossiblefirstNonNullgetIfNullmedianrequireNonEmptyorg.springframework.validationErrorsaddAllErrorsgetAllErrorsgetFieldErrorgetFieldErrorsgetGlobalErrorgetGlobalErrorsrejectrejectValue(java.lang.String,java.lang.String,java.lang.Object[],java.lang.String)ArrayElement of Argument[2](java.lang.String,java.lang.String,java.lang.String)org.springframework.cacheCache$ValueRetrievalExceptionValueRetrievalExceptionCache$ValueWrapperCache(Object,Callable)getNativeCacheMultipartHttpServletRequestgetMultipartHeadersMultipartResolverresolveMultipartParameter[0] of Argument[0]ReturnValue of Argument[0]ratpack.execPromiseElement of Parameter[0] of Argument[0]Element of ReturnValue of Argument[0]blockingMapcacheIfflatMapErrorElement of ReturnValue of Argument[1]flattenmapErrorReturnValue of Argument[1]mapIfParameter[0] of Argument[1]Parameter[0] of Argument[2]ReturnValue of Argument[2]routethencom.google.common.cachegetAllPresentgetIfPresentLoadingCacheorg.apache.commons.ioIOUtilsbuffercopyLarge(InputStream,ByteBuffer)(InputStream,byte[])(InputStream,byte[],int,int)(InputStream,int)(ReadableByteChannel,ByteBuffer)(Reader,char[])(Reader,char[],int,int)toBufferedInputStreamtoBufferedReadertoInputStreamwriteChunkedwriteLinesorg.apache.commons.lang3.builderToStringBuilder(java.lang.Object)(java.lang.Object[])(java.lang.String,boolean)(java.lang.String,java.lang.Object)(java.lang.String,java.lang.Object[])(java.lang.String,java.lang.Object[],boolean)appendAsObjectToStringappendSuperappendToStringgetStringBufferComponentName(Context,Class)(Context,String)(Parcel)createRelativeflattenToShortStringflattenToStringgetShortClassNameunflattenFromStringIntent(Intent)(String,Uri,Context,Class)getIntentgetIntentOldparseUrisetClasssetClassNamesetComponentsetPackageWordUtilscapitalize(java.lang.String)(java.lang.String,char[])capitalizeFullyinitialsswapCaseuncapitalize(java.lang.String,int,java.lang.String,boolean)(java.lang.String,int,java.lang.String,boolean,java.lang.String)org.apache.commons.textabbreviateorg.springframework.beansMutablePropertyValuesMapKey of Element of Argument[-1]MapValue of Element of Argument[-1]addPropertyValue(PropertyValue)addPropertyValues(PropertyValues)getPropertyValuegetPropertyValueListgetPropertyValuessetPropertyValueAtPropertyValue(PropertyValue,Object)PropertyValuesorg.springframework.uiConcurrentModelModeladdAllAttributesmergeAttributesModelMapStringWriterindentstripIndenttranslateEscapesorg.apache.commons.lang3.tupleImmutablePair(java.lang.Object,java.lang.Object)Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of Argument[-1]Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of Argument[-1]getLeftgetRightleftField[org.apache.commons.lang3.tuple.ImmutablePair.left] of ReturnValueField[org.apache.commons.lang3.tuple.ImmutablePair.right] of ReturnValuerightMutablePairField[org.apache.commons.lang3.tuple.MutablePair.left] of Argument[-1]Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1]Field[org.apache.commons.lang3.tuple.MutablePair.left] of ReturnValueField[org.apache.commons.lang3.tuple.MutablePair.right] of ReturnValuesetLeftsetRightPairStrTokenizergetCSVInstancegetTSVInstancegetTokenArraygetTokenListnextTokenpreviousTokenStringTokenizerArrayUtils(boolean[],boolean)(char[],char)(double[],double)(float[],float)(java.lang.Object[],java.lang.Object)(long[],long)(short[],short)ArrayElement of Argument[0..1](java.lang.Object[],int,java.lang.Object)ArrayElement of Argument[1..2]nullToEmpty(java.lang.Object[],java.lang.Class)(java.lang.String[])removeAllOccurencesremoveAllOccurrencesremoveElementremoveElementssubarrayArrayElement of ArrayElement of Argument[0]toObjecttoPrimitiveandroid.netUri$BuilderappendEncodedPathappendPathappendQueryParameterauthorityclearQueryencodedAuthorityencodedFragmentencodedOpaquePartencodedPathencodedQueryopaquePartUrifromFilefromPartswithAppendedPathwriteToParcelbuildUpongetEncodedAuthoritygetEncodedFragmentgetEncodedPathgetEncodedQuerygetEncodedSchemeSpecificPartgetEncodedUserInfogetLastPathSegmentgetQueryParametergetQueryParameterNamesnormalizeSchemeImmutableTriple(java.lang.Object,java.lang.Object,java.lang.Object)Field[org.apache.commons.lang3.tuple.ImmutableTriple.left] of Argument[-1]Field[org.apache.commons.lang3.tuple.ImmutableTriple.middle] of Argument[-1]Field[org.apache.commons.lang3.tuple.ImmutableTriple.right] of Argument[-1]getMiddleField[org.apache.commons.lang3.tuple.ImmutableTriple.left] of ReturnValueField[org.apache.commons.lang3.tuple.ImmutableTriple.middle] of ReturnValueField[org.apache.commons.lang3.tuple.ImmutableTriple.right] of ReturnValueMutableTripleField[org.apache.commons.lang3.tuple.MutableTriple.left] of Argument[-1]Field[org.apache.commons.lang3.tuple.MutableTriple.middle] of Argument[-1]Field[org.apache.commons.lang3.tuple.MutableTriple.right] of Argument[-1]Field[org.apache.commons.lang3.tuple.MutableTriple.left] of ReturnValueField[org.apache.commons.lang3.tuple.MutableTriple.middle] of ReturnValueField[org.apache.commons.lang3.tuple.MutableTriple.right] of ReturnValuesetMiddleTripleappendColumns(StringBuilder,String[])appendWhereappendWhereStandalonebuildQuery(String[],String,String,String,String,String)Argument[1..5](String[],String,String[],String,String,String,String)Argument[3..6]buildQueryString(boolean,String,String[],String,String,String,String,String)Argument[3..7]buildUnionQuery(String[],String,String)buildUnionSubQuery(String,String[],Set,int,String,String,String,String)Argument[-1..0](String,String[],Set,int,String,String,String[],String,String)Argument[4..5]Argument[7..8]setProjectionMapsetTablesappendSelectionArgs(String[],String[])concatenateWherecn.hutool.core.codecBase64com.esotericsoftware.kryo.ioInputcom.esotericsoftware.kryo5.iojava.beansXMLDecoderBufferedInputStreamBufferedReaderByteArrayInputStreamByteArrayOutputStreamCharArrayReaderDataInputStreamInputStreamReaderStringReaderarraycopytoAsciiStringURLDecoderGZIPInputStreamZipInputStreamBase64$DecoderBase64$EncoderencodeToStringjavax.xml.transform.saxSAXSource(InputSource)(XMLReader,InputSource)getInputSourcesourceToInputSourcejavax.xml.transform.streamStreamSourceorg.apache.commons.codecBinaryDecoderBinaryEncoderDecoderEncoderStringDecoderStringEncoderorg.apache.shiro.codecorg.xml.saxInputSourceStrSubstitutor(java.lang.CharSequence)(java.lang.CharSequence,int,int)(java.lang.Object,java.util.Map)(java.lang.Object,java.util.Map,java.lang.String,java.lang.String)(java.lang.Object,java.util.Properties)(java.lang.String,int,int)(java.lang.StringBuffer)(java.lang.StringBuffer,int,int)(org.apache.commons.lang3.text.StrBuilder)(org.apache.commons.lang3.text.StrBuilder,int,int)replaceIn(java.lang.StringBuilder)(java.lang.StringBuilder,int,int)setVariableResolverStringSubstitutor(org.apache.commons.text.TextStringBuilder)(org.apache.commons.text.TextStringBuilder,int,int)BaseEncodingdecodingSource(CharSource)decodingStreamlowerCaseomitPaddingupperCasewithPadCharwithSeparatorByteArrayDataOutputByteSource(ByteSource[])copyToopenBufferedStreamByteStreams(InputStream,OutputStream)(ReadableByteChannel,WritableByteChannel)(InputStream,long)newDataInput(ByteArrayInputStream)newDataOutput(ByteArrayOutputStream)CharSource(CharSource[])(Appendable)readFirstLineCharStreams(Readable,Appendable)(Readable)ClosergetFileExtensiongetNameWithoutExtensionsimplifyPathLineReaderMoreFilesStrBuilderappendAllappendFixedWidthPadLeftappendFixedWidthPadRightappendNewLineappendNullappendPaddingappendSeparatorappendWithSeparatorsappendlndeleteAlldeleteFirstminimizeCapacitysetNewLineTextsetNullTextTextStringBuilder(MultiValueMap)(Object,MultiValueMap)Element of MapValue of Argument[1]encodeBasicAuth(String,String,Charset)formatHeadersgetAccessControlAllowHeadersgetAccessControlAllowOrigingetAccessControlExposeHeadersgetAccessControlRequestHeadersgetCacheControlgetConnectiongetETaggetETagValuesAsListgetFieldValuesgetIfMatchgetIfNoneMatchgetOrEmptygetOrigingetPragmagetUpgradegetVaryResponseEntity$BodyBuilderbodycontentLengthcontentType(MediaType)ResponseEntity$HeadersBuilder(HttpMethod[])eTagheaders(HttpHeaders)varyByResponseEntity(MultiValueMap,HttpStatus)(Object,HttpStatus)(Object,MultiValueMap,HttpStatus)(Object,MultiValueMap,int)created(Optional)Ascii(CharSequence,int,String)CaseFormat(CaseFormat,String)ConverterconvertAllJoiner$MapJoinerappendTouseForNullJoiner(Appendable,Iterable)(Appendable,Iterator)(Appendable,Object,Object,Object[])ArrayElement of Argument[3](Appendable,Object[])(StringBuilder,Iterable)(StringBuilder,Iterator)(StringBuilder,Object,Object,Object[])(StringBuilder,Object[])Argument[-1..2]onskipNullswithKeyValueSeparatorMoreObjects$ToStringHelperaddValueomitNullValuesMoreObjectstoStringHelperfromJavaUtilfromNullableElement of Argument[-1..0]orNullpresentInstancestoJavaUtilcheckNotNullSplitter$MapSplitterSplittersplitToListsplitToStreamStringsemptyToNulllenientFormatpadEnd(String,int,char)padStartSuppliersmemoizememoizeWithExpiration(Supplier,long,TimeUnit)ofInstancesynchronizedSupplierVerifyverifyNotNullParameter[1] of Argument[1]Parameter[0..1] of Argument[2]Element of Argument[0..1]Parameter[0] of Argument[1..2]mapMultimapMultiToDoublemapMultiToIntmapMultiToLongParameter[0..1] of Argument[0]ReturnValue of Argument[1..2]Parameter[0..1] of Argument[1]org.apache.hc.core5.functionorg.apache.hc.core5.http.io.entityBasicHttpEntityBufferedHttpEntityByteArrayEntityHttpEntitiescreateGzippedcreateUrlEncodedgzipwithTrailersHttpEntityWrapperInputStreamEntityStringEntityorg.apache.hc.core5.http.messageRequestLine(HttpRequest)EntityDetailsgetTrailerNamesgetTrailersMessageHeadersgetFirstHeadergetLastHeaderheaderIteratorNameValuePairorg.apache.hc.core5.netURIAuthorityorg.apache.hc.core5.utilArgscontainsNoBlanks(CharSequence,String)notBlanknotEmpty(Collection,String)notNullByteArrayBuffer(CharArrayBuffer,int,int)CharArrayBuffer(ByteArrayBuffer,int,int)(CharArrayBuffer)substringTrimmedorg.apache.http.entitysetContentBasicRequestLineorg.apache.http.paramsHttpParamsgetDoubleParametergetIntParametergetLongParameterEncodingUtilsgetAsciiBytesgetAsciiStringgetContentCharSetgetContentMimeTypeHeadergetElementsHeaderElementgetParameterByNameHeaderIteratornextHeaderHttpEntityEnclosingRequestgetAllHeadersgetRequestLineStringUtils(java.lang.String,java.lang.String,int)(java.lang.String,java.lang.String,int,int)abbreviateMiddleappendIfMissingappendIfMissingIgnoreCase(java.lang.String,int,java.lang.String)chomp(java.lang.String,java.lang.String)chopdefaultIfBlankdefaultIfEmptydefaultStringdeleteWhitespacefirstNonBlankfirstNonEmptygetCommonPrefixgetDigitsgetIfBlankgetIfEmpty(char[],char,int,int)(java.lang.Iterable,char)(java.lang.Iterable,java.lang.String)(java.lang.Object[],char)(java.lang.Object[],char,int,int)(java.lang.Object[],java.lang.String)(java.lang.Object[],java.lang.String,int,int)(java.util.Iterator,char)(java.util.Iterator,java.lang.String)(java.util.List,char,int,int)(java.util.List,java.lang.String,int,int)joinWithleftPad(java.lang.String,java.util.Locale)midnormalizeSpaceoverlayprependIfMissingprependIfMissingIgnoreCaseremoveEndremoveEndIgnoreCaseremoveIgnoreCaseremoveStartremoveStartIgnoreCasereplaceCharsreplaceEachreplaceEachRepeatedlyreplaceIgnoreCasereplaceOncereplaceOnceIgnoreCasereverseDelimitedrightPadrotate(java.lang.String,char)splitByCharacterTypesplitByCharacterTypeCamelCasesplitByWholeSeparatorsplitByWholeSeparatorPreserveAllTokenssplitPreserveAllTokensstripAccentsstripAllstripEndstripStartstripToEmptystripToNullsubstringAftersubstringAfterLastsubstringBeforesubstringBeforeLastsubstringBetweensubstringsBetweentoCodePointstoEncodedStringtoRootLowerCasetoRootUpperCasetrimToEmptytrimToNullwrapIfMissingorg.springframework.utilAntPathMatcherdoMatchMapValue of Argument[3]extractPathWithinPatternextractUriTemplateVariablestokenizePathtokenizePatternAutoPopulatingList(java.util.List,java.lang.Class)(java.util.List,org.springframework.util.AutoPopulatingList.ElementFactory)Base64UtilsdecodeFromStringdecodeFromUrlSafeStringdecodeUrlSafeencodeToUrlSafeStringencodeUrlSafearrayToListfindFirstMatchfindValueOfTypefirstElementlastElementmergeArrayIntoCollectionmergePropertiesIntoMaptoIteratortoMultiValueMapunmodifiableMultiValueMapCompositeIteratorConcurrentReferenceHashMapgetReferencegetSegmentFastByteArrayOutputStreamFileCopyUtilscopyToByteArraycopyToStringFileSystemUtilscopyRecursively(java.io.File,java.io.File)LinkedMultiValueMap(java.util.Map)deepCopy(java.lang.Object,java.util.List)(org.springframework.util.MultiValueMap)addIfAbsentsetAlltoSingleValueMapMultiValueMapAdapteraddObjectToArraytoObjectArrayunwrapOptionalPropertiesPersisterloadFromXmlstoreToXmlPropertyPlaceholderHelperparseStringValuereplacePlaceholders(java.lang.String,java.util.Properties)ResourceUtilsextractArchiveURLextractJarFileURLRouteMatchermatchAndExtractparseRouteSerializationUtilsdeserializeserializeStreamUtils(byte[],java.io.OutputStream)(java.io.InputStream,java.io.OutputStream)(java.lang.String,java.nio.charset.Charset,java.io.OutputStream)copyRangeaddStringToArrayapplyRelativePatharrayToCommaDelimitedStringarrayToDelimitedStringcleanPathcollectionToCommaDelimitedStringcollectionToDelimitedStringArgument[1..3]commaDelimitedListToSetcommaDelimitedListToStringArrayconcatenateStringArraysdeleteAnydelimitedListToStringArraygetFilenamegetFilenameExtensionmergeStringArraysquotequoteIfStringremoveDuplicateStringssortStringArraysplitArrayElementsIntoPropertiesstripFilenameExtensiontoStringArraytokenizeToStringArraytrimAllWhitespacetrimArrayElementstrimLeadingCharactertrimLeadingWhitespacetrimTrailingCharactertrimTrailingWhitespacetrimWhitespaceunqualifyuriDecodeStringValueResolverresolveStringValueSystemPropertyUtilsresolvePlaceholdersMapKey of SyntheticField[android.content.Intent.extras] of Argument[0]MapKey of SyntheticField[android.content.Intent.extras] of Argument[-1]MapValue of SyntheticField[android.content.Intent.extras] of Argument[0]MapValue of SyntheticField[android.content.Intent.extras] of Argument[-1](String,Uri)SyntheticField[android.content.Intent.data] of Argument[-1]createChooserMapValue of SyntheticField[android.content.Intent.extras] of ReturnValueSyntheticField[android.content.Intent.data] of ReturnValueaddCategoryaddFlagsgetBundleExtragetByteArrayExtragetCharArrayExtragetCharSequenceArrayExtragetCharSequenceArrayListExtragetCharSequenceExtragetDatagetDataStringgetExtrasSyntheticField[android.content.Intent.extras] of Argument[-1]getParcelableArrayExtragetParcelableArrayListExtragetParcelableExtragetSerializableExtragetStringArrayExtragetStringArrayListExtragetStringExtraputCharSequenceArrayListExtraputExtraputExtras(Bundle)putIntegerArrayListExtraputParcelableArrayListExtraputStringArrayListExtrareplaceExtrassetActionsetDatasetDataAndNormalizesetDataAndTypesetDataAndTypeAndNormalizesetFlagssetIdentifiersetTypesetTypeAndNormalizeBaseBundlegetStringArray(PersistableBundle)putBooleanArrayputDoubleArrayputIntArrayputLongArrayputStringputStringArraygetBindergetBundlegetByteArraygetCharArraygetCharSequence(String,CharSequence)getCharSequenceArraygetCharSequenceArrayListgetParcelablegetParcelableArraygetParcelableArrayListgetSerializablegetSparseParcelableArraygetStringArrayListputBinderputBundleputByteArrayputCharArrayputCharSequenceputCharSequenceArrayputCharSequenceArrayListputFloatArrayputIntegerArrayListputParcelableputParcelableArrayputParcelableArrayListputSerializableputShortArrayputSizeputSizeFputSparseParcelableArrayputStringArrayListreadFromParcelorg.springframework.web.utilAbstractUriTemplateHandlergetBaseUrlsetBaseUrlsetDefaultUriVariablesContentCachingRequestWrappergetContentAsByteArrayContentCachingResponseWrappergetContentInputStreamDefaultUriBuilderFactorygetDefaultUriVariablesuriStringHtmlUtilshtmlEscapehtmlEscapeDecimalhtmlEscapeHexhtmlUnescapeServletContextPropertyUtilsServletRequestPathUtilsgetCachedPathgetCachedPathValuegetParsedRequestPathparseAndCachesetParsedRequestPathpathSegmentportqueryParamIfPresentqueryParamsreplaceQueryParamsUriBuilderFactoryUriComponents$UriTemplateVariablesUriComponentscopyToUriComponentsBuilderexpand(UriTemplateVariables)toUriStringUriComponentsBuilderbuildAndExpandcloneBuilderfromHttpRequestfromHttpUrlfromOriginHeaderfromUriStringparseForwardedForuriComponentsuriVariablesUriTemplategetVariableNamesUriTemplateHandlerUriUtilsencodeAuthorityencodeFragmentencodeHostencodePathencodePathSegmentencodePortencodeQueryencodeQueryParamencodeQueryParamsencodeSchemeencodeUriVariablesencodeUserInfoextractFileExtensionUrlPathHelperdecodeMatrixVariablesdecodePathVariablesdecodeRequestStringgetContextPathgetOriginatingContextPathgetOriginatingQueryStringgetOriginatingRequestUrigetPathWithinApplicationgetPathWithinServletMappinggetResolvedLookupPathgetServletPathremoveSemicolonContentresolveAndCacheLookupPathWebUtilsfindParameterValue(Map,String)(ServletRequest,String)getCookiegetNativeRequestgetNativeResponsegetParametersStartingWithgetRealPathgetRequiredSessionAttributegetSessionAttributeparseMatrixVariablessetSessionAttributeorg.jsonCDLrowToJSONArrayrowToJSONObjectrowToStringtoJSONArrayescapetoJSONObjectunescapeCookieListHTTPTokenerJSONArray(JSONArray)(JSONTokener)getBigDecimalgetBigIntegergetEnumgetJSONArraygetJSONObjectgetNumberoptoptBigDecimaloptBigIntegeroptBooleanoptDoubleoptEnumoptFloatoptIntoptJSONArrayoptJSONObjectoptLongoptNumberoptQueryoptString(int,Map)JSONMLJSONObject(JSONObject,String[])(Object,String[])accumulatedoubleToStringincrementnumberToStringputOnceputOpt(String,Writer)stringToValuevalueToStringJSONPointer$BuilderJSONPointertoURIFragmentJSONStringtoJSONStringJSONStringerJSONTokenernextCleannextStringnextTonextValuesyntaxErrorJSONWriterendArrayendObjectobjectPropertytoPropertiesXMLXMLTokenernextCDATAnextContentnextEntitynextMetaXMLXsiTypeConverter(java.nio.CharBuffer)(java.nio.CharBuffer,int,int)(java.lang.String,int)(Iterable,String)(Iterator,String)(Object[],String)asReaderasTokenizerleftStringmidStringreadFrom(int,int,java.lang.String)(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)rightStringtoStringBuffertoStringBuilder(org.apache.commons.text.StrBuilder)(org.apache.commons.text.StrMatcher,java.lang.String,int,int,int)(org.apache.commons.text.matcher.StringMatcher,java.lang.String,int,int,int)BlockingDequeofferFirst(Object,long,TimeUnit)offerLastpollFirstpollLastputFirstputLasttakeFirsttakeLastBlockingQueuedrainTo(Collection,int)offerTransferQueuetransfertryTransferAbstractMap$SimpleEntrySimpleEntryAbstractMap$SimpleImmutableEntrySimpleImmutableEntryArrayDequeArrayscopyOfRangefill(Object[],Object)(Object[],int,int,Object)(boolean[],int,int,boolean)(byte[],int,int,byte)(char[],int,int,char)(double[],int,int,double)(float[],int,int,float)(long[],int,int,long)(short[],int,int,short)CollectionscheckedCollection(Collection,Class)checkedList(List,Class)checkedMap(Map,Class,Class)checkedNavigableMap(NavigableMap,Class,Class)checkedNavigableSet(NavigableSet,Class)checkedSet(Set,Class)checkedSortedMap(SortedMap,Class,Class)checkedSortedSet(SortedSet,Class)enumeration(List,Object)nCopies(List,Object,Object)singletonsingletonListsingletonMapsynchronizedNavigableMap(NavigableMap)synchronizedNavigableSet(NavigableSet)(SortedSet)unmodifiableNavigableMapDequedescendingIteratorpeekFirstpeekLastEnumMap(EnumMap)HashSetIdentityHashMapLinkedHashMapLinkedHashSetLinkedListArgument[0..8]Argument[10]Argument[11]Argument[12]Argument[13]Argument[14]Argument[15]Argument[16]Argument[17]Argument[18]Argument[19]Argument[6]Argument[7]Argument[8]Argument[9]Parameter[1] of Argument[0]NavigableMapceilingEntrydescendingMapfirstEntryfloorEntryhigherEntrylastEntrylowerEntrypollFirstEntrypollLastEntry(Object,boolean,Object,boolean)NavigableSetceilingdescendingSetfloorheadSethigherlowersubSettailSetPriorityQueue(PriorityQueue)QueueScanner(Pattern)SortedSetStackTreeMapTreeSetVectoraddElementelementAtinsertElementAtsetElementAtcom.google.common.collectArrayListMultimap(Multimap)ArrayTableSyntheticField[com.google.common.collect.Table.rowKey] of ReturnValueSyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue(Table)SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0]SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0]BiMapforcePutinverseClassToInstanceMapputInstanceCollections2(Collection,Predicate)orderedPermutations(Iterable,Comparator)ConcurrentHashMultisetHashBasedTableHashBiMapHashMultimapHashMultisetImmutableBiMapImmutableClassToInstanceMapImmutableCollection$BuilderImmutableCollectionImmutableListArgument[0..11]ArrayElement of Argument[12]sortedCopyOf(Comparator,Iterable)ImmutableListMultimapImmutableMap$BuilderorderEntriesByValueImmutableMapImmutableMultimap$BuilderorderKeysByorderValuesByImmutableMultimapImmutableMultiset$BuilderaddCopiessetCountImmutableMultisetArrayElement of Argument[6]ImmutableSetImmutableSetMultimapImmutableSortedMap(Map,Comparator)copyOfSortedImmutableSortedMultiset(Comparable[])(Comparator,Iterator)(SortedMultiset)ImmutableSortedSetImmutableTable$BuilderSyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1]SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1]orderColumnsByorderRowsBy(Cell)ImmutableTableIterablesElement of Argument[0..2]Element of Argument[0..3]consumingIterablecycle(Iterable,Class)(Iterable,Predicate,Object)(Iterable,int,Object)(Iterable,Object)getOnlyElementmergeSortedpaddedPartitiontryFind(ImmutableCollection)Iterators(Iterator,Iterator,Iterator,Iterator)consumingIterator(Iterator,Class)(Iterator,Predicate)(Iterator,Predicate,Object)forArrayforEnumeration(Iterator,int,Object)(Iterator,Object)getNext(PeekingIterator)(UnmodifiableIterator)LinkedHashMultimapLinkedHashMultisetLinkedListMultimapLists(Object,Object,Object[])cartesianProduct(List[])charactersOfnewArrayListnewCopyOnWriteArrayListnewLinkedList(List,int)MapDifference$ValueDifferenceleftValueSyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1]rightValueSyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1]MapDifferenceentriesDifferingMapKey of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1]MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1]MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1]SyntheticField[com.google.common.collect.MapDifference.left] of MapValue of ReturnValueMapValue of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1]SyntheticField[com.google.common.collect.MapDifference.right] of MapValue of ReturnValueentriesInCommonentriesOnlyOnLeftentriesOnlyOnRightMaps(NavigableSet,Function)(Set,Function)(SortedSet,Function)MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValueMapKey of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValueMapValue of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValueMapValue of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue(Map,Map,Equivalence)(SortedMap,Map)filterEntriesfilterKeysfilterValuesfromPropertiesimmutableEntryimmutableEnumMapnewEnumMapnewHashMapnewLinkedHashMapnewTreeMap(NavigableMap,Range)synchronizedBiMap(BiMap)(Iterable,Function)(Iterator,Function)transformValues(Map,Function)(NavigableMap,Function)(SortedMap,Function)uniqueIndexunmodifiableBiMapMultimapreplaceValuesMultimaps(ListMultimap)(SetMultimap)(SortedSetMultimap)(Multimap,Predicate)(SetMultimap,Predicate)forMapinvertFrom(Multimap,Multimap)newListMultimap(Map,Supplier)newMultimapnewSetMultimapnewSortedSetMultimapsynchronizedListMultimapsynchronizedMultimapsynchronizedSetMultimapsynchronizedSortedSetMultimap(ListMultimap,Function)(Multimap,Function)unmodifiableListMultimap(ImmutableListMultimap)unmodifiableMultimap(ImmutableMultimap)unmodifiableSetMultimap(ImmutableSetMultimap)unmodifiableSortedSetMultimapMultiset$EntryMultisetelementSet(Object,int,int)MultisetscopyHighestCountFirst(Multiset)(Multiset,Multiset)(Multiset,Predicate)unmodifiableMultiset(ImmutableMultiset)unmodifiableSortedMultisetMutableClassToInstanceMapObjectArrays(Object[],Object[],Class)Queues(BlockingQueue,Collection,int,Duration)(BlockingQueue,Collection,int,long,TimeUnit)newArrayDequenewConcurrentLinkedQueuenewLinkedBlockingDequenewLinkedBlockingQueuenewPriorityBlockingQueuenewPriorityQueuesynchronizedDeque(Deque)(Queue)Sets$SetViewimmutableCopySetscombinations(NavigableSet,Predicate)(Set,Predicate)(SortedSet,Predicate)newConcurrentHashSetnewCopyOnWriteArraySetnewHashSetnewLinkedHashSetnewSetFromMapnewTreeSetpowerSet(NavigableSet,Range)symmetricDifferenceTable$CellgetColumnKeygetRowKeyTablecellSetSyntheticField[com.google.common.collect.Table.columnKey] of Element of ReturnValueSyntheticField[com.google.common.collect.Table.rowKey] of Element of ReturnValuecolumncolumnKeySetcolumnMapMapValue of MapValue of ReturnValueMapKey of MapValue of ReturnValuerowrowKeySetrowMapTablesimmutableCellnewCustomTableMapKey of MapValue of Argument[0]MapValue of MapValue of Argument[0]synchronizedTable(Table,Function)transposeunmodifiableRowSortedTable(RowSortedTable)unmodifiableTableTreeBasedTable(TreeBasedTable)TreeMultimapTreeMultisetObjectWriterFormatter(<script>)MessageLiteCookieValueRequestBodyRequestPartPathVariableRequestParamRequestHeaderMatrixVariabledjl.demo.Libraryjava.lang.Objectorg.junit.jupiter.api.Testorg.junit.jupiter.api.Assertionsdjl.demo.LibraryTestjava.lang.Stringjava.io.Closeablejava.lang.AutoCloseablejava.io.IOExceptionjava.io.DataInputjava.lang.Cloneablejava.io.Serializablejava.io.DataOutputjava.io.Filejava.lang.Comparablejava.lang.Comparable<File>java.lang.Tjava.nio.file.Pathjava.io.FileFilterjava.io.FilenameFilterjava.net.URIjava.net.URLjava.lang.Deprecatedjava.net.MalformedURLExceptionjava.io.FileDescriptorjdk.internal.ref.PhantomCleanablejdk.internal.ref.PhantomCleanable<FileDescriptor>java.lang.ref.PhantomReferencejava.lang.ref.PhantomReference<FileDescriptor>java.lang.ref.Referencejava.lang.ref.Reference<FileDescriptor>java.lang.ref.Cleaner$Cleanablejava.io.SyncFailedExceptionjava.lang.FunctionalInterfacejava.io.FileNotFoundExceptionjava.io.FilterOutputStreamjava.io.OutputStreamjava.io.Flushablejava.lang.Exceptionjava.lang.Throwablejava.io.InputStreamjava.io.InvalidClassExceptionjava.io.ObjectStreamExceptionjava.io.InvalidObjectExceptionjava.io.NotActiveExceptionjava.io.ObjectInputjava.lang.ClassNotFoundExceptionjava.io.ObjectInputFilter$FilterInfojava.io.ObjectInputFilterjava.lang.Classjava.lang.Class<>java.lang.reflect.GenericDeclarationjava.lang.reflect.Typejava.lang.reflect.AnnotatedElementjava.lang.Class<?>java.io.ObjectInputFilter$Statusjava.lang.Enumjava.lang.Enum<Status>java.lang.Comparable<Status>java.lang.Enum<>java.lang.Comparable<>java.lang.Enum<T>java.lang.Comparable<T>java.lang.Class<T>java.lang.Ejava.lang.Class<E>java.lang.Class<Status>java.lang.CloneNotSupportedExceptionjava.io.ObjectInputStream$GetFieldjava.io.ObjectInputStreamjava.io.ObjectStreamClassjava.io.ObjectStreamConstantsjava.io.StreamCorruptedExceptionjava.lang.SecurityExceptionjava.io.ObjectInputValidationjava.io.ObjectOutputjava.io.ObjectOutputStream$PutFieldjava.io.ObjectOutputStreamjava.io.ObjectStreamClass$ClassDataSlotjava.lang.ref.ReferenceQueuejava.lang.ref.ReferenceQueue<Class<?>>java.util.concurrent.ConcurrentMapjava.lang.ref.WeakReferencejava.lang.ref.WeakReference<Class<?>>java.lang.ref.Reference<Class<?>>java.util.concurrent.ConcurrentMap<? extends WeakReference<Class<?>>,?>java.util.Mapjava.util.Map<? extends WeakReference<Class<?>>,?>java.lang.UnsupportedOperationExceptionjava.lang.InstantiationExceptionjava.lang.reflect.InvocationTargetExceptionjava.io.ObjectStreamFieldjdk.internal.reflect.CallerSensitivejava.io.SerializablePermissionjava.lang.Comparable<Object>java.lang.reflect.Fieldjava.lang.StringBuilderjava.io.OptionalDataExceptionjava.io.PrintStreamjava.lang.Appendablejava.lang.CharSequencejava.util.Localejava.nio.charset.Charsetjava.io.UnsupportedEncodingExceptionjava.io.PrintWriterjava.io.Writerjava.io.Readerjava.lang.Readablejava.nio.CharBufferjava.security.BasicPermissionjava.lang.AbstractStringBuilderjava.util.stream.IntStreamjava.lang.StringBufferjava.lang.ArrayIndexOutOfBoundsExceptionjava.lang.IndexOutOfBoundsExceptionjava.lang.AssertionErrorjava.lang.Errorjava.lang.Booleanjava.lang.Comparable<Boolean>jdk.internal.HotSpotIntrinsicCandidatejava.lang.Class<Boolean>java.lang.Bytejava.lang.Numberjava.lang.Comparable<Byte>java.lang.NumberFormatExceptionjava.lang.Class<Byte>java.lang.Characterjava.lang.Comparable<Character>java.lang.Class<Character>java.lang.reflect.AnnotatedTypejava.util.Map<>java.lang.annotation.Annotationjava.lang.Class<? extends Annotation>java.util.Map<Class<? extends Annotation>,Annotation>sun.reflect.annotation.AnnotationTypejava.lang.Ajava.lang.Class<A>java.lang.Ujava.lang.Class<? extends U>java.lang.Class<U>java.util.Map<String,T>jdk.internal.reflect.ConstantPooljava.lang.reflect.Executablejava.security.ProtectionDomainjava.lang.reflect.Constructorjava.lang.reflect.Constructor<>java.lang.reflect.Constructor<T>java.lang.NoSuchMethodExceptionjava.util.Listjava.util.List<>java.util.Collectionjava.util.Collection<>java.lang.Iterablejava.lang.Iterable<>java.lang.reflect.Methodjava.util.List<Method>java.util.Collection<Method>java.lang.Iterable<Method>java.lang.NoSuchFieldExceptionjava.lang.reflect.Constructor<?>java.lang.Packagejava.lang.Class<? super T>java.lang.reflect.TypeVariablejava.lang.reflect.TypeVariable<>java.lang.reflect.TypeVariable<Class>java.lang.Modulejava.lang.ClassLoaderjdk.internal.vm.annotation.ForceInlinejava.lang.IllegalAccessExceptionjava.lang.ClassValue$ClassValueMapjava.lang.ClassFormatErrorjava.lang.LinkageErrorjava.util.concurrent.ConcurrentHashMapjava.util.concurrent.ConcurrentHashMap<>java.util.AbstractMapjava.util.AbstractMap<>java.util.concurrent.ConcurrentMap<>java.util.concurrent.ConcurrentHashMap<?,?>java.util.AbstractMap<?,?>java.util.Map<?,?>java.util.concurrent.ConcurrentMap<?,?>java.util.stream.Streamjava.util.stream.Stream<>java.util.stream.BaseStreamjava.util.stream.BaseStream<>java.util.stream.Stream<Package>java.util.stream.BaseStream<Package,Stream<Package>>java.util.Enumerationjava.util.Enumeration<>java.util.Enumeration<URL>java.util.stream.Stream<URL>java.util.stream.BaseStream<URL,Stream<URL>>java.nio.ByteBufferjava.util.Map<String,Boolean>java.lang.ReflectiveOperationExceptionjava.util.WeakHashMapjava.lang.ClassValue$Identityjava.lang.ClassValue$Entryjava.lang.ClassValue$Entry<?>java.lang.ClassValue$Versionjava.lang.ClassValue$Version<?>java.lang.ClassValuejava.lang.ref.WeakReference<Version<?>>java.lang.ref.Reference<Version<?>>java.util.WeakHashMap<Identity,Entry<?>>java.util.AbstractMap<Identity,Entry<?>>java.util.Map<Identity,Entry<?>>java.util.Kjava.util.Vjava.util.Map<K,V>java.util.Map<? extends K,? extends V>java.util.Map$Entryjava.util.Map$Entry<>java.util.Map$Entry<K,V>java.util.Map$Entry<? extends K,? extends V>java.util.function.BiFunctionjava.util.function.BiFunction<? super V,? super V,? extends V>java.util.function.BiFunction<? super Entry<?>,? super Entry<?>,? extends Entry<?>>java.lang.ClassValue$Entry<>java.lang.ref.WeakReference<>java.lang.ref.Reference<>java.util.function.BiFunction<? super K,? super V,? extends V>java.util.function.BiFunction<? super Identity,? super Entry<?>,? extends Entry<?>>java.util.function.Functionjava.util.function.Function<? super K,? extends V>java.util.function.Function<? super Identity,? extends Entry<?>>java.util.function.BiConsumerjava.util.function.BiConsumer<? super K,? super V>java.util.function.BiConsumer<? super Identity,? super Entry<?>>java.util.Setjava.util.Set<>java.util.Set<Entry<K,V>>java.util.Collection<Entry<K,V>>java.lang.Iterable<Entry<K,V>>java.util.Map$Entry<Identity,Entry<?>>java.util.Set<Entry<Identity,Entry<?>>>java.util.Collection<Entry<Identity,Entry<?>>>java.lang.Iterable<Entry<Identity,Entry<?>>>java.util.Collection<V>java.lang.Iterable<V>java.util.Collection<Entry<?>>java.lang.Iterable<Entry<?>>java.util.Set<K>java.util.Collection<K>java.lang.Iterable<K>java.util.Set<Identity>java.util.Collection<Identity>java.lang.Iterable<Identity>java.util.Map<? extends Identity,? extends Entry<?>>java.util.WeakHashMap$Entryjava.util.WeakHashMap$Entry<>java.util.WeakHashMap$Entry<K,V>java.lang.ref.WeakReference<Object>java.lang.ref.Reference<Object>java.util.WeakHashMap$Entry<Identity,Entry<?>>java.lang.ClassValue<>java.lang.ClassValue$Entry<T>java.lang.ClassValue$Version<T>java.lang.ref.WeakReference<Version<T>>java.lang.ref.Reference<Version<T>>java.lang.ClassValue<T>java.lang.ClassValue<?>java.lang.ref.Tjava.lang.ref.ReferenceQueue<? super T>java.lang.ref.ReferenceQueue<? super Version<T>>java.lang.ClassValue$Version<>java.lang.ref.WeakReference<Version>java.lang.ref.Reference<Version>java.lang.annotation.Documentedjava.lang.annotation.Retentionjava.lang.annotation.RetentionPolicyjava.lang.annotation.Targetjava.lang.annotation.ElementTypejava.lang.Doublejava.lang.Comparable<Double>java.lang.Class<Double>java.lang.Comparable<E>java.lang.Floatjava.lang.Comparable<Float>java.lang.Class<Float>java.lang.IllegalArgumentExceptionjava.lang.RuntimeExceptionjava.lang.Integerjava.lang.Comparable<Integer>java.lang.Class<Integer>java.lang.InternalErrorjava.lang.VirtualMachineErrorjava.lang.InterruptedExceptionjava.util.Spliteratorjava.util.Spliterator<>java.util.Spliterator<T>java.util.function.Consumerjava.util.function.Consumer<? super T>java.util.Iteratorjava.util.Iterator<>java.util.Iterator<T>java.lang.Longjava.lang.Comparable<Long>java.lang.Class<Long>java.lang.module.Configurationjava.util.function.Function<String,ClassLoader>java.lang.ModuleLayerjava.util.Map<String,Module>java.util.Set<String>java.util.Collection<String>java.lang.Iterable<String>java.util.Iterator<String>java.lang.module.ModuleDescriptorjava.lang.ModuleLayer$Controllerjava.util.stream.Stream<ModuleLayer>java.util.stream.BaseStream<ModuleLayer,Stream<ModuleLayer>>jdk.internal.module.ServicesCatalogjava.util.Optionaljava.util.Optional<>java.util.Optional<Module>java.util.Set<Module>java.util.Collection<Module>java.lang.Iterable<Module>java.util.List<ModuleLayer>java.util.Collection<ModuleLayer>java.lang.Iterable<ModuleLayer>java.lang.NamedPackagejava.lang.Runnablejava.lang.SafeVarargsjava.lang.Shortjava.lang.Comparable<Short>java.lang.Class<Short>java.lang.StackFrameInfojava.lang.StackWalker$StackFramejava.lang.StackTraceElementjava.lang.invoke.MethodTypejava.lang.StackWalkerjava.lang.StackWalker$ExtendedOptionjava.lang.Enum<ExtendedOption>java.lang.Comparable<ExtendedOption>java.lang.Class<ExtendedOption>java.lang.StackWalker$Optionjava.lang.Enum<Option>java.lang.Comparable<Option>java.lang.Class<Option>java.util.Set<Option>java.util.Collection<Option>java.lang.Iterable<Option>java.util.function.Consumer<? super StackFrame>java.util.function.Function<>java.util.stream.Stream<StackFrame>java.util.stream.BaseStream<StackFrame,Stream<StackFrame>>java.util.function.Function<? super Stream<StackFrame>,? extends T>java.util.EnumSetjava.util.EnumSet<Option>java.util.AbstractSetjava.util.AbstractSet<Option>java.util.AbstractCollectionjava.util.AbstractCollection<Option>java.lang.Comparable<String>java.lang.Voidjava.util.stream.Stream<String>java.util.stream.BaseStream<String,Stream<String>>java.lang.Iterable<? extends CharSequence>java.util.Comparatorjava.util.Comparator<String>java.lang.Comparable<StringBuffer>java.lang.Comparable<StringBuilder>java.lang.Thread$Statejava.lang.Enum<State>java.lang.Comparable<State>java.lang.Class<State>java.lang.Threadjava.lang.Thread$UncaughtExceptionHandlerjava.util.Map<Thread,StackTraceElement[]>java.lang.ThreadGroupjava.security.AccessControlContextsun.nio.ch.Interruptiblejdk.internal.vm.annotation.Contendedjava.lang.ThreadLocal$ThreadLocalMapjava.lang.ThreadLocaljava.lang.ThreadLocal<?>java.util.function.Supplierjava.util.function.Supplier<>java.lang.ThreadLocal<>java.lang.Sjava.lang.ThreadLocal<S>java.util.function.Supplier<? extends S>java.lang.TypeNotPresentExceptionjava.lang.Class<Void>java.lang.Enum<ElementType>java.lang.Comparable<ElementType>java.lang.Class<ElementType>java.lang.annotation.Inheritedjava.lang.Enum<RetentionPolicy>java.lang.Comparable<RetentionPolicy>java.lang.Class<RetentionPolicy>java.lang.invoke.BoundMethodHandle$Specializer$Factoryjava.lang.invoke.ClassSpecializer$Factoryjava.lang.invoke.BoundMethodHandlejava.lang.invoke.BoundMethodHandle$SpeciesDatajava.lang.invoke.ClassSpecializer<BoundMethodHandle,String,SpeciesData>$Factory<>java.lang.invoke.ClassSpecializerjava.lang.invoke.ClassSpecializer<BoundMethodHandle,String,SpeciesData>java.lang.invoke.Tjava.lang.Class<? extends T>java.util.List<Class<?>>java.util.Collection<Class<?>>java.lang.Iterable<Class<?>>java.lang.invoke.MethodHandlejava.lang.Class<? extends BoundMethodHandle>java.lang.invoke.ClassSpecializer$SpeciesDatajava.lang.invoke.ClassSpecializer<BoundMethodHandle,String,SpeciesData>$SpeciesData<>java.lang.invoke.ClassSpecializer<>$SpeciesData<>java.lang.invoke.ClassSpecializer<>java.lang.invoke.Sjava.util.List<MethodHandle>java.util.Collection<MethodHandle>java.lang.Iterable<MethodHandle>java.lang.invoke.LambdaForm$NamedFunctionjava.util.List<NamedFunction>java.util.Collection<NamedFunction>java.lang.Iterable<NamedFunction>java.lang.invoke.BoundMethodHandle$Specializerjava.lang.invoke.ClassSpecializer<>$Factory<>java.lang.invoke.Kjava.lang.Class<K>java.lang.Class<S>java.lang.invoke.MemberNamejava.util.List<MemberName>java.util.Collection<MemberName>java.lang.Iterable<MemberName>java.lang.Class<BoundMethodHandle>java.lang.Class<String>java.lang.Class<SpeciesData>java.lang.invoke.Xjava.util.List<X>java.util.Collection<X>java.lang.Iterable<X>java.lang.invoke.LambdaFormjava.lang.invoke.LambdaFormEditorjava.lang.invoke.LambdaForm$BasicTypejava.lang.invoke.CallSitejava.lang.invoke.Invokersjdk.internal.vm.annotation.DontInlinejava.lang.invoke.WrongMethodTypeExceptionjava.lang.invoke.VarHandlejava.lang.invoke.VarHandle$AccessDescriptorjava.lang.invoke.VarHandle$AccessModejava.lang.Enum<BasicType>java.lang.Comparable<BasicType>java.lang.Class<BasicType>sun.invoke.util.Wrapperjdk.internal.vm.annotation.Stablejava.lang.invoke.LambdaForm$Hiddenjava.lang.invoke.LambdaForm$Kindjava.lang.Enum<Kind>java.lang.Comparable<Kind>java.lang.Class<Kind>java.lang.invoke.LambdaForm$Namejava.lang.invoke.MethodHandleImpl$Intrinsicjava.lang.invoke.MemberName$Factoryjava.lang.invoke.NoSuchMemberExceptionjava.lang.Class<NoSuchMemberException>java.lang.reflect.Memberjava.lang.invoke.MethodHandle$PolymorphicSignaturejava.util.List<?>java.util.Collection<?>java.lang.Iterable<?>java.lang.invoke.MethodHandleImpl$ArrayAccessjava.lang.Enum<ArrayAccess>java.lang.Comparable<ArrayAccess>java.lang.Class<ArrayAccess>java.lang.invoke.MethodHandleImpljava.lang.Enum<Intrinsic>java.lang.Comparable<Intrinsic>java.lang.Class<Intrinsic>java.lang.invoke.MethodHandleImpl$LoopClausesjava.util.Iterator<?>sun.invoke.empty.Emptyjava.lang.Class<? extends Throwable>java.lang.invoke.MethodType$ConcurrentWeakInternSetjava.lang.invoke.MethodTypeFormjava.lang.invoke.MethodType$ConcurrentWeakInternSet<MethodType>java.lang.ref.SoftReferencejava.lang.ref.SoftReference<LambdaForm>java.lang.ref.Reference<LambdaForm>java.lang.ref.SoftReference<MethodHandle>java.lang.ref.Reference<MethodHandle>java.lang.invoke.VarFormjava.lang.Enum<AccessMode>java.lang.Comparable<AccessMode>java.lang.Class<AccessMode>java.lang.invoke.VarHandle$AccessTypejava.util.Map<String,AccessMode>java.lang.Enum<AccessType>java.lang.Comparable<AccessType>java.lang.Class<AccessType>java.lang.invoke.VarHandle$TypesAndInvokersjava.util.List<Integer>java.util.Collection<Integer>java.lang.Iterable<Integer>java.util.function.BiFunction<String,List<Integer>,ArrayIndexOutOfBoundsException>java.util.stream.Stream<Configuration>java.util.stream.BaseStream<Configuration,Stream<Configuration>>java.lang.module.ResolvedModulejava.util.Set<ResolvedModule>java.util.Collection<ResolvedModule>java.lang.Iterable<ResolvedModule>java.util.Set<ModuleDescriptor>java.util.Collection<ModuleDescriptor>java.lang.Iterable<ModuleDescriptor>java.util.Optional<ResolvedModule>java.util.List<Configuration>java.util.Collection<Configuration>java.lang.Iterable<Configuration>java.lang.module.ModuleFinderjava.util.Map<String,Set<String>>java.lang.module.ModuleDescriptor$Builderjava.lang.module.ModuleDescriptor$Versionjava.util.List<String>java.lang.module.ModuleDescriptor$Providesjava.lang.module.ModuleDescriptor$Opens$Modifierjava.util.Set<Modifier>java.util.Collection<Modifier>java.lang.Iterable<Modifier>java.lang.module.ModuleDescriptor$Opensjava.lang.module.ModuleDescriptor$Exports$Modifierjava.lang.module.ModuleDescriptor$Exportsjava.lang.module.ModuleDescriptor$Requires$Modifierjava.lang.module.ModuleDescriptor$Requiresjava.lang.module.ModuleDescriptor$Modifierjava.util.Map<String,Provides>java.util.Map<String,Opens>java.util.Map<String,Exports>java.util.Map<String,Requires>java.lang.Enum<Modifier>java.lang.Comparable<Modifier>java.lang.Class<Modifier>java.lang.Comparable<Exports>java.lang.Comparable<Opens>java.lang.Comparable<Provides>java.lang.Comparable<Requires>java.util.Optional<String>java.util.Optional<Version>java.lang.Comparable<Version>java.lang.Comparable<ModuleDescriptor>java.util.function.Supplier<Set<String>>java.util.Set<Provides>java.util.Collection<Provides>java.lang.Iterable<Provides>java.util.Set<Opens>java.util.Collection<Opens>java.lang.Iterable<Opens>java.util.Set<Exports>java.util.Collection<Exports>java.lang.Iterable<Exports>java.util.Set<Requires>java.util.Collection<Requires>java.lang.Iterable<Requires>java.lang.module.ModuleReferencejava.util.Set<ModuleReference>java.util.Collection<ModuleReference>java.lang.Iterable<ModuleReference>java.util.Optional<ModuleReference>java.lang.module.ModuleReaderjava.util.Optional<ByteBuffer>java.util.Optional<InputStream>java.util.Optional<URI>java.lang.ref.Cleanerjava.util.concurrent.ThreadFactoryjdk.internal.ref.CleanerImpljava.lang.ref.Reference<T>java.lang.ref.Reference<? extends T>java.util.function.Consumer<? super Reference<? extends T>>java.lang.ref.ReferenceQueue<Object>java.lang.reflect.AccessibleObjectjava.lang.reflect.Tjdk.internal.reflect.ReflectionFactoryjdk.internal.reflect.ConstructorAccessorjava.lang.reflect.TypeVariable<Constructor>sun.reflect.generics.repository.ConstructorRepositoryjava.lang.reflect.Parameterjava.lang.reflect.TypeVariable<?>jdk.internal.reflect.MethodAccessorjava.lang.reflect.TypeVariable<Method>sun.reflect.generics.repository.MethodRepositoryjava.lang.reflect.ParameterizedTypejava.lang.reflect.Djava.lang.reflect.WildcardTypejava.math.BigIntegerjava.lang.Comparable<BigInteger>java.util.Randomjava.net.ContentHandlerjava.net.URLConnectionjava.net.FileNameMapjava.net.InetAddress$InetAddressHolderjava.net.InetAddressjava.net.InetAddressImpljava.net.UnknownHostExceptionjava.net.NetworkInterfacejava.net.InterfaceAddressjava.net.SocketExceptionjava.util.stream.Stream<NetworkInterface>java.util.stream.BaseStream<NetworkInterface,Stream<NetworkInterface>>java.util.Enumeration<NetworkInterface>java.util.List<InterfaceAddress>java.util.Collection<InterfaceAddress>java.lang.Iterable<InterfaceAddress>java.util.stream.Stream<InetAddress>java.util.stream.BaseStream<InetAddress,Stream<InetAddress>>java.util.Enumeration<InetAddress>java.net.Proxy$Typejava.lang.Enum<Type>java.lang.Comparable<Type>java.lang.Class<Type>java.net.Proxyjava.net.SocketAddressjava.lang.Comparable<URI>java.net.URISyntaxExceptionjava.net.URLStreamHandlerjava.net.URLStreamHandlerFactoryjava.util.Hashtablejava.util.Hashtable<String,URLStreamHandler>java.util.Dictionaryjava.util.Dictionary<String,URLStreamHandler>java.util.Map<String,URLStreamHandler>java.util.Map<String,List<String>>java.security.Permissionjava.nio.Bufferjdk.internal.misc.Unsafejava.lang.Comparable<ByteBuffer>java.nio.DoubleBufferjava.nio.FloatBufferjava.nio.LongBufferjava.nio.IntBufferjava.nio.ShortBufferjava.nio.ByteOrderjava.lang.Comparable<CharBuffer>java.lang.Comparable<DoubleBuffer>java.lang.Comparable<FloatBuffer>java.lang.Comparable<IntBuffer>java.lang.Comparable<LongBuffer>java.nio.MappedByteBufferjava.lang.Comparable<ShortBuffer>java.nio.channels.AsynchronousChanneljava.nio.channels.Channeljava.nio.channels.AsynchronousCloseExceptionjava.nio.channels.ClosedChannelExceptionjava.nio.channels.AsynchronousFileChanneljava.util.concurrent.Futurejava.util.concurrent.Future<>java.util.concurrent.Future<Integer>java.nio.channels.CompletionHandlerjava.nio.channels.CompletionHandler<>java.nio.channels.Ajava.nio.channels.CompletionHandler<Integer,? super A>java.nio.channels.FileLockjava.util.concurrent.Future<FileLock>java.nio.channels.CompletionHandler<FileLock,? super A>java.nio.file.OpenOptionjava.util.Set<? extends OpenOption>java.util.Collection<? extends OpenOption>java.lang.Iterable<? extends OpenOption>java.util.concurrent.ExecutorServicejava.nio.file.attribute.FileAttributejava.nio.file.attribute.FileAttribute<?>java.nio.channels.ByteChanneljava.nio.channels.ReadableByteChanneljava.nio.channels.WritableByteChanneljava.nio.channels.Vjava.nio.channels.FileChannel$MapModejava.nio.channels.FileChanneljava.nio.channels.spi.AbstractInterruptibleChanneljava.nio.channels.SeekableByteChanneljava.nio.channels.GatheringByteChanneljava.nio.channels.ScatteringByteChanneljava.nio.channels.InterruptibleChanneljava.nio.charset.CharacterCodingExceptionjava.lang.Comparable<Charset>java.nio.charset.CharsetEncoderjava.nio.charset.CharsetDecoderjava.util.SortedMapjava.util.SortedMap<>java.util.SortedMap<String,Charset>java.util.Map<String,Charset>java.nio.charset.CoderResultjava.nio.charset.CodingErrorActionjava.nio.file.AccessModejava.nio.file.CopyOptionjava.nio.file.DirectoryStream$Filterjava.nio.file.DirectoryStreamjava.nio.file.Tjava.lang.Iterable<T>java.nio.file.FileStorejava.nio.file.attribute.FileStoreAttributeViewjava.nio.file.Vjava.lang.Class<V>java.nio.file.attribute.FileAttributeViewjava.lang.Class<? extends FileAttributeView>java.nio.file.FileSystemjava.nio.file.WatchServicejava.nio.file.attribute.UserPrincipalLookupServicejava.nio.file.PathMatcherjava.lang.Iterable<FileStore>java.lang.Iterable<Path>java.nio.file.LinkOptionjava.lang.Enum<LinkOption>java.lang.Comparable<LinkOption>java.lang.Class<LinkOption>java.lang.Comparable<Path>java.util.Spliterator<Path>java.util.function.Consumer<? super Path>java.util.Iterator<Path>java.nio.file.Watchablejava.nio.file.WatchEvent$Kindjava.nio.file.WatchEvent$Kind<?>java.nio.file.WatchEventjava.nio.file.WatchKeyjava.nio.file.WatchEvent$Modifierjava.nio.file.WatchEvent$Kind<>java.nio.file.WatchEvent$Kind<T>java.nio.file.WatchEvent<?>java.util.List<WatchEvent<?>>java.util.Collection<WatchEvent<?>>java.lang.Iterable<WatchEvent<?>>java.util.concurrent.TimeUnitjava.nio.file.attribute.AttributeViewjava.nio.file.attribute.BasicFileAttributesjava.nio.file.attribute.FileTimejava.nio.file.attribute.Tjava.lang.Comparable<FileTime>java.time.Instantjava.nio.file.attribute.GroupPrincipaljava.nio.file.attribute.UserPrincipaljava.security.Principaljava.util.Map<String,Object>java.nio.file.spi.Ajava.nio.file.spi.Vjava.nio.file.DirectoryStream$Filter<? super Path>java.nio.file.DirectoryStream<>java.nio.file.DirectoryStream<Path>java.util.Map<String,?>java.util.List<FileSystemProvider>java.util.Collection<FileSystemProvider>java.lang.Iterable<FileSystemProvider>java.security.AccessControlExceptionjava.security.DomainCombinersun.security.util.Debugjava.security.PermissionCollectionjava.security.CodeSignerjava.security.Timestampjava.security.cert.CertPathjava.security.CodeSourcejava.security.cert.Certificatejava.security.GeneralSecurityExceptionjava.security.Guardjava.security.InvalidKeyExceptionjava.security.KeyExceptionjava.security.Keyjava.security.NoSuchAlgorithmExceptionjava.security.NoSuchProviderExceptionjava.util.stream.Stream<Permission>java.util.stream.BaseStream<Permission,Stream<Permission>>java.util.Enumeration<Permission>javax.security.auth.Subjectjava.security.PrivilegedActionjava.security.Tjava.security.PrivilegedActionExceptionjava.security.PrivilegedExceptionActionjava.security.ProtectionDomain$Keyjava.security.Provider$Servicejava.util.Map<String,String>java.util.Propertiesjava.util.Set<Service>java.util.Collection<Service>java.lang.Iterable<Service>java.util.Enumeration<Object>java.util.function.BiConsumer<? super Object,? super Object>java.util.function.BiFunction<? super Object,? super Object,? extends Object>java.util.function.Function<? super Object,? extends Object>java.util.Collection<Object>java.lang.Iterable<Object>java.util.Set<Object>java.util.Map$Entry<Object,Object>java.util.Set<Entry<Object,Object>>java.util.Collection<Entry<Object,Object>>java.lang.Iterable<Entry<Object,Object>>java.security.PublicKeyjava.security.SignatureExceptionjava.util.Datejava.util.List<? extends Certificate>java.util.Collection<? extends Certificate>java.lang.Iterable<? extends Certificate>java.security.cert.CertificateEncodingExceptionjava.security.cert.CertificateExceptionjava.text.AttributedCharacterIterator$Attributejava.text.AttributedCharacterIteratorjava.text.CharacterIteratorjava.util.Set<Attribute>java.util.Collection<Attribute>java.lang.Iterable<Attribute>java.util.Map<Attribute,Object>java.util.Set<? extends Attribute>java.util.Collection<? extends Attribute>java.lang.Iterable<? extends Attribute>java.text.FieldPositionjava.text.Format$FieldDelegatejava.text.Format$Fieldjava.text.Formatjava.text.ParseExceptionjava.text.ParsePositionjava.time.Clockjava.time.ZoneIdjava.time.Durationjava.time.DayOfWeekjava.lang.Enum<DayOfWeek>java.lang.Comparable<DayOfWeek>java.lang.Class<DayOfWeek>java.time.temporal.TemporalAccessorjava.time.temporal.TemporalAdjusterjava.time.temporal.Temporaljava.time.temporal.TemporalQueryjava.time.temporal.TemporalQuery<>java.time.Rjava.time.temporal.TemporalQuery<R>java.time.temporal.TemporalFieldjava.time.temporal.ValueRangejava.time.format.TextStylejava.time.temporal.TemporalAmountjava.lang.Comparable<Duration>java.time.temporal.TemporalUnitjava.util.List<TemporalUnit>java.util.Collection<TemporalUnit>java.lang.Iterable<TemporalUnit>java.lang.Comparable<Instant>java.time.ZonedDateTimejava.time.ZoneOffsetjava.time.OffsetDateTimejava.time.LocalDatejava.time.chrono.ChronoLocalDatejava.time.LocalTimejava.time.LocalDateTimejava.time.OffsetTimejava.time.format.DateTimeFormatterjava.time.Periodjava.util.stream.Stream<LocalDate>java.util.stream.BaseStream<LocalDate,Stream<LocalDate>>java.time.Monthjava.time.chrono.IsoErajava.time.chrono.IsoChronologyjava.time.chrono.ChronoLocalDateTimejava.time.chrono.ChronoLocalDateTime<LocalDate>java.time.chrono.ChronoLocalDateTime<?>java.lang.Comparable<ChronoLocalDateTime<?>>java.time.chrono.ChronoZonedDateTimejava.time.chrono.ChronoZonedDateTime<>java.time.chrono.Djava.time.chrono.ChronoZonedDateTime<D>java.time.chrono.ChronoZonedDateTime<?>java.lang.Comparable<ChronoZonedDateTime<?>>java.time.chrono.ChronoZonedDateTime<LocalDate>java.time.chrono.Rjava.time.chrono.ChronoLocalDateTime<>java.util.Comparator<>java.util.Comparator<ChronoLocalDateTime<?>>java.lang.Comparable<LocalTime>java.lang.Enum<Month>java.lang.Comparable<Month>java.lang.Class<Month>java.lang.Comparable<OffsetDateTime>java.util.Comparator<OffsetDateTime>java.lang.Comparable<OffsetTime>java.time.chrono.ChronoPeriodjava.time.zone.ZoneRulesjava.lang.Comparable<ZoneOffset>java.time.chrono.ChronoLocalDateTime<D>java.util.Comparator<ChronoZonedDateTime<?>>java.util.Map<TemporalField,Long>java.time.temporal.ChronoFieldjava.time.format.ResolverStylejava.util.Set<Chronology>java.util.Collection<Chronology>java.lang.Iterable<Chronology>java.lang.Comparable<ChronoLocalDate>java.time.chrono.Erajava.util.Comparator<ChronoLocalDate>java.lang.Comparable<Chronology>java.util.List<Era>java.util.Collection<Era>java.lang.Iterable<Era>java.time.chrono.ChronoZonedDateTime<? extends ChronoLocalDate>java.time.chrono.ChronoLocalDateTime<? extends ChronoLocalDate>java.lang.Enum<IsoEra>java.lang.Comparable<IsoEra>java.lang.Class<IsoEra>java.time.temporal.TemporalQuery<?>java.time.format.DateTimeFormatterBuilder$CompositePrinterParserjava.time.format.Tjava.time.temporal.TemporalQuery<T>java.util.Set<TemporalField>java.util.Collection<TemporalField>java.lang.Iterable<TemporalField>java.time.format.DecimalStylejava.time.temporal.TemporalQuery<Boolean>java.time.temporal.TemporalQuery<Period>java.time.format.FormatStylejava.time.format.DateTimeFormatterBuilder$DateTimePrinterParserjava.time.format.DateTimeFormatterBuilderjava.time.format.DateTimeParseContextjava.time.format.DateTimePrintContextjava.util.List<DateTimePrinterParser>java.util.Collection<DateTimePrinterParser>java.lang.Iterable<DateTimePrinterParser>java.util.Set<ZoneId>java.util.Collection<ZoneId>java.lang.Iterable<ZoneId>java.util.Map<Long,String>java.time.format.SignStylejava.util.function.Consumer<Chronology>java.time.format.Parsedjava.time.format.Rjava.util.Set<Locale>java.util.Collection<Locale>java.lang.Iterable<Locale>java.lang.Enum<FormatStyle>java.lang.Comparable<FormatStyle>java.lang.Class<FormatStyle>java.lang.Enum<ResolverStyle>java.lang.Comparable<ResolverStyle>java.lang.Class<ResolverStyle>java.lang.Enum<SignStyle>java.lang.Comparable<SignStyle>java.lang.Class<SignStyle>java.lang.Enum<TextStyle>java.lang.Comparable<TextStyle>java.lang.Class<TextStyle>java.lang.Enum<ChronoField>java.lang.Comparable<ChronoField>java.lang.Class<ChronoField>java.time.temporal.Rjava.time.temporal.ChronoUnitjava.lang.Enum<ChronoUnit>java.lang.Comparable<ChronoUnit>java.lang.Class<ChronoUnit>java.time.zone.ZoneOffsetTransitionjava.lang.Comparable<ZoneOffsetTransition>java.util.List<ZoneOffset>java.util.Collection<ZoneOffset>java.lang.Iterable<ZoneOffset>java.time.zone.ZoneOffsetTransitionRule$TimeDefinitionjava.lang.Enum<TimeDefinition>java.lang.Comparable<TimeDefinition>java.lang.Class<TimeDefinition>java.time.zone.ZoneOffsetTransitionRulejava.util.List<ZoneOffsetTransitionRule>java.util.Collection<ZoneOffsetTransitionRule>java.lang.Iterable<ZoneOffsetTransitionRule>java.util.List<ZoneOffsetTransition>java.util.Collection<ZoneOffsetTransition>java.lang.Iterable<ZoneOffsetTransition>java.util.Ejava.util.Collection<E>java.lang.Iterable<E>java.util.Spliterator<E>java.util.function.Consumer<? super E>java.util.Iterator<E>java.util.stream.Stream<E>java.util.stream.BaseStream<E,Stream<E>>java.util.function.Predicatejava.util.function.Predicate<? super E>java.util.Collection<? extends E>java.lang.Iterable<? extends E>java.util.function.IntFunctionjava.util.function.IntFunction<>java.util.Tjava.util.function.IntFunction<T[]>java.util.AbstractCollection<E>java.util.Set<E>java.util.function.ToDoubleFunctionjava.util.function.ToDoubleFunction<>java.util.Comparator<T>java.util.function.ToDoubleFunction<? super T>java.util.function.ToLongFunctionjava.util.function.ToLongFunction<>java.util.function.ToLongFunction<? super T>java.util.function.ToIntFunctionjava.util.function.ToIntFunction<>java.util.function.ToIntFunction<? super T>java.util.Ujava.lang.Comparable<? super U>java.util.function.Function<? super T,? extends U>java.util.Comparator<? super U>java.util.Comparator<? super T>java.lang.Comparable<? super T>java.lang.Comparable<Date>java.util.Enumeration<V>java.util.Enumeration<K>java.util.DoubleSummaryStatisticsjava.util.function.DoubleConsumerjava.util.AbstractSet<E>java.lang.Enum<E>java.util.EnumSet<>java.util.AbstractSet<>java.util.AbstractCollection<>java.util.EnumSet<E>java.lang.Enum<?>java.lang.Comparable<?>java.util.Dictionary<K,V>java.util.Hashtable<>java.util.Dictionary<>java.util.Hashtable<?,?>java.util.Dictionary<?,?>java.util.IntSummaryStatisticsjava.util.function.IntConsumerjava.util.InvalidPropertiesFormatExceptionjava.util.List<E>java.util.ListIteratorjava.util.ListIterator<>java.util.ListIterator<E>java.util.Comparator<? super E>java.util.function.UnaryOperatorjava.util.function.UnaryOperator<E>java.util.function.Function<E,E>java.util.Locale$Categoryjava.lang.Enum<Category>java.lang.Comparable<Category>java.lang.Class<Category>java.util.Locale$FilteringModejava.lang.Enum<FilteringMode>java.lang.Comparable<FilteringMode>java.lang.Class<FilteringMode>java.util.Locale$IsoCountryCodejava.lang.Enum<IsoCountryCode>java.lang.Comparable<IsoCountryCode>java.lang.Class<IsoCountryCode>java.util.Locale$LanguageRangejava.util.List<LanguageRange>java.util.Collection<LanguageRange>java.lang.Iterable<LanguageRange>java.util.List<Locale>java.util.MissingResourceExceptionsun.util.locale.LocaleExtensionssun.util.locale.BaseLocalejava.util.Set<Character>java.util.Collection<Character>java.lang.Iterable<Character>java.util.LongSummaryStatisticsjava.util.function.LongConsumerjava.util.Comparator<Entry<K,V>>java.util.Comparator<? super V>java.util.Comparator<? super K>java.lang.Comparable<? super V>java.lang.Comparable<? super K>java.util.Xjava.util.function.Supplier<? extends X>java.util.function.Supplier<? extends T>java.util.stream.Stream<T>java.util.stream.BaseStream<T,Stream<T>>java.util.Optional<? extends T>java.util.function.Supplier<? extends Optional<? extends T>>java.util.Optional<U>java.util.Optional<? extends U>java.util.function.Function<? super T,? extends Optional<? extends U>>java.util.function.Predicate<? super T>java.util.Optional<T>java.util.OptionalDoublejava.util.function.DoubleSupplierjava.util.stream.DoubleStreamjava.util.OptionalIntjava.util.function.IntSupplierjava.util.OptionalLongjava.util.function.LongSupplierjava.util.stream.LongStreamjava.util.PrimitiveIterator$OfDoublejava.util.PrimitiveIteratorjava.util.PrimitiveIterator<Double,DoubleConsumer>java.util.Iterator<Double>java.util.function.Consumer<? super Double>java.util.T_CONSjava.util.PrimitiveIterator$OfIntjava.util.PrimitiveIterator<Integer,IntConsumer>java.util.Iterator<Integer>java.util.function.Consumer<? super Integer>java.util.PrimitiveIterator$OfLongjava.util.PrimitiveIterator<Long,LongConsumer>java.util.Iterator<Long>java.util.function.Consumer<? super Long>java.util.Hashtable<Object,Object>java.util.Dictionary<Object,Object>java.util.Map<Object,Object>java.util.Map<? extends Object,? extends Object>java.util.function.BiFunction<? super Object,? super Object,?>java.util.function.Function<? super Object,?>java.util.Enumeration<?>java.util.Spliterator$OfDoublejava.util.Spliterator$OfPrimitivejava.util.Spliterator$OfPrimitive<Double,DoubleConsumer,OfDouble>java.util.Spliterator<Double>java.util.Comparator<? super Double>java.util.Spliterator$OfPrimitive<>java.util.T_SPLITRjava.util.Spliterator$OfIntjava.util.Spliterator$OfPrimitive<Integer,IntConsumer,OfInt>java.util.Spliterator<Integer>java.util.Comparator<? super Integer>java.util.Spliterator$OfLongjava.util.Spliterator$OfPrimitive<Long,LongConsumer,OfLong>java.util.Spliterator<Long>java.util.Comparator<? super Long>java.lang.ref.ReferenceQueue<? super Object>java.util.AbstractMap<K,V>java.util.concurrent.Callablejava.util.concurrent.Vjava.util.concurrent.ConcurrentHashMap$CollectionViewjava.util.concurrent.Ejava.util.concurrent.Kjava.util.concurrent.Tjava.util.concurrent.ConcurrentHashMap<K,V>java.util.concurrent.ConcurrentMap<K,V>java.util.concurrent.ConcurrentHashMap$KeySetViewjava.util.concurrent.ConcurrentHashMap$CollectionView<K,V,K>java.util.Spliterator<K>java.util.function.Consumer<? super K>java.util.Iterator<K>java.util.stream.Stream<K>java.util.stream.BaseStream<K,Stream<K>>java.util.function.Predicate<? super K>java.util.Collection<? extends K>java.lang.Iterable<? extends K>java.util.concurrent.ConcurrentHashMap$Nodejava.util.concurrent.ConcurrentHashMap$Node<>java.util.function.ToIntFunction<Entry<K,V>>java.util.function.IntBinaryOperatorjava.util.function.ToLongFunction<Entry<K,V>>java.util.function.LongBinaryOperatorjava.util.function.ToDoubleFunction<Entry<K,V>>java.util.function.DoubleBinaryOperatorjava.util.function.BiFunction<>java.util.concurrent.Ujava.util.function.Function<Entry<K,V>,? extends U>java.util.function.BiFunction<? super U,? super U,? extends U>java.util.function.BiFunction<Entry<K,V>,Entry<K,V>,? extends Entry<K,V>>java.util.function.Consumer<>java.util.function.Consumer<? super U>java.util.function.Consumer<? super Entry<K,V>>java.util.function.ToIntFunction<? super V>java.util.function.ToLongFunction<? super V>java.util.function.ToDoubleFunction<? super V>java.util.function.Function<? super V,? extends U>java.util.function.Consumer<? super V>java.util.function.ToIntFunction<? super K>java.util.function.ToLongFunction<? super K>java.util.function.ToDoubleFunction<? super K>java.util.function.Function<? super K,? extends U>java.util.function.BiFunction<? super K,? super K,? extends K>java.util.function.ToIntBiFunctionjava.util.function.ToIntBiFunction<? super K,? super V>java.util.function.ToLongBiFunctionjava.util.function.ToLongBiFunction<? super K,? super V>java.util.function.ToDoubleBiFunctionjava.util.function.ToDoubleBiFunction<? super K,? super V>java.util.function.BiFunction<? super K,? super V,? extends U>java.util.concurrent.ConcurrentHashMap$Node<K,V>java.util.concurrent.ConcurrentHashMap$KeySetView<>java.util.concurrent.ConcurrentHashMap$CollectionView<>java.util.concurrent.ConcurrentHashMap$KeySetView<K,V>java.util.concurrent.ConcurrentHashMap$KeySetView<K,Boolean>java.util.concurrent.ConcurrentHashMap$CollectionView<K,Boolean,K>java.util.function.Predicate<? super V>java.util.function.Predicate<? super Entry<K,V>>java.util.concurrent.ExecutionExceptionjava.util.concurrent.Executorjava.util.concurrent.Callable<T>java.util.Collection<? extends Callable<T>>java.lang.Iterable<? extends Callable<T>>java.util.concurrent.TimeoutExceptionjava.util.concurrent.Future<T>java.util.List<Future<T>>java.util.Collection<Future<T>>java.lang.Iterable<Future<T>>java.util.concurrent.Future<?>java.util.concurrent.Callable<>java.util.List<Runnable>java.util.Collection<Runnable>java.lang.Iterable<Runnable>java.lang.Enum<TimeUnit>java.lang.Comparable<TimeUnit>java.lang.Class<TimeUnit>java.util.function.Tjava.util.function.Ujava.util.function.BiConsumer<? super T,? super U>java.util.function.BiConsumer<>java.util.function.Rjava.util.function.Vjava.util.function.BiFunction<T,U,V>java.util.function.Function<? super R,? extends V>java.util.function.BinaryOperatorjava.util.function.BiFunction<T,T,T>java.util.function.BiFunction<T,T,V>java.util.function.Function<? super T,? extends V>java.util.function.BinaryOperator<>java.util.function.BinaryOperator<T>java.util.function.BooleanSupplierjava.util.function.DoubleFunctionjava.util.function.DoublePredicatejava.util.function.DoubleToIntFunctionjava.util.function.DoubleToLongFunctionjava.util.function.DoubleUnaryOperatorjava.util.function.Function<T,T>java.util.function.Function<T,V>java.util.function.Function<V,R>java.util.function.Function<? super V,? extends T>java.util.function.IntPredicatejava.util.function.IntToDoubleFunctionjava.util.function.IntToLongFunctionjava.util.function.IntUnaryOperatorjava.util.function.LongFunctionjava.util.function.LongPredicatejava.util.function.LongToDoubleFunctionjava.util.function.LongToIntFunctionjava.util.function.LongUnaryOperatorjava.util.function.ObjDoubleConsumerjava.util.function.ObjIntConsumerjava.util.function.ObjLongConsumerjava.util.function.Predicate<>java.util.function.Predicate<T>java.util.function.Function<V,T>java.util.function.UnaryOperator<>java.util.function.UnaryOperator<T>java.util.stream.Tjava.util.stream.Sjava.util.stream.Collector$Characteristicsjava.lang.Enum<Characteristics>java.lang.Comparable<Characteristics>java.lang.Class<Characteristics>java.util.stream.Collectorjava.util.stream.Ajava.util.stream.Rjava.util.stream.Collector<>java.util.stream.Collector<T,A,R>java.util.function.Supplier<A>java.util.function.BiConsumer<A,T>java.util.function.BinaryOperator<A>java.util.function.BiFunction<A,A,A>java.util.function.Function<A,R>java.util.stream.Collector<T,R,R>java.util.function.Supplier<R>java.util.function.BiConsumer<R,T>java.util.function.BinaryOperator<R>java.util.function.BiFunction<R,R,R>java.util.Set<Characteristics>java.util.Collection<Characteristics>java.lang.Iterable<Characteristics>java.util.stream.DoubleStream$Builderjava.util.stream.BaseStream<Double,DoubleStream>java.util.stream.Stream<Double>java.util.stream.BaseStream<Double,Stream<Double>>java.util.function.ObjDoubleConsumer<>java.util.function.ObjDoubleConsumer<R>java.util.function.BiConsumer<R,R>java.util.function.DoubleFunction<? extends DoubleStream>java.util.function.DoubleFunction<>java.util.stream.Ujava.util.stream.Stream<U>java.util.stream.BaseStream<U,Stream<U>>java.util.function.DoubleFunction<? extends U>java.util.stream.IntStream$Builderjava.util.stream.BaseStream<Integer,IntStream>java.util.stream.Stream<Integer>java.util.stream.BaseStream<Integer,Stream<Integer>>java.util.function.ObjIntConsumer<>java.util.function.ObjIntConsumer<R>java.util.function.IntFunction<? extends IntStream>java.util.function.IntFunction<? extends U>java.util.stream.LongStream$Builderjava.util.stream.BaseStream<Long,LongStream>java.util.stream.Stream<Long>java.util.stream.BaseStream<Long,Stream<Long>>java.util.function.ObjLongConsumer<>java.util.function.ObjLongConsumer<R>java.util.function.LongFunction<? extends LongStream>java.util.function.LongFunction<>java.util.function.LongFunction<? extends U>java.util.stream.Stream$Builderjava.util.function.Consumer<T>java.util.stream.Stream$Builder<>java.util.stream.BaseStream<T,Stream>java.util.stream.Stream<? extends T>java.util.stream.BaseStream<? extends T,Stream<? extends T>>java.util.stream.Stream$Builder<T>java.util.stream.Collector<? super T,A,R>java.util.function.BiConsumer<R,? super T>java.util.function.BiFunction<U,? super T,U>java.util.function.BinaryOperator<U>java.util.function.BiFunction<U,U,U>java.util.function.IntFunction<A[]>java.util.function.Function<? super T,? extends DoubleStream>java.util.function.Function<? super T,? extends LongStream>java.util.function.Function<? super T,? extends IntStream>java.util.stream.Stream<R>java.util.stream.BaseStream<R,Stream<R>>java.util.stream.Stream<? extends R>java.util.stream.BaseStream<? extends R,Stream<? extends R>>java.util.function.Function<? super T,? extends Stream<? extends R>>java.util.function.Function<? super T,? extends R>javax.security.auth.Tjava.util.Set<T>java.util.Collection<T>java.util.Set<Principal>java.util.Collection<Principal>java.lang.Iterable<Principal>java.security.PrivilegedExceptionAction<>java.security.PrivilegedExceptionAction<T>java.security.PrivilegedAction<>java.security.PrivilegedAction<T>java.util.Set<? extends Principal>java.util.Collection<? extends Principal>java.lang.Iterable<? extends Principal>java.util.Set<?>jdk.internal.module.ServicesCatalog$ServiceProviderjava.util.List<ServiceProvider>java.util.Collection<ServiceProvider>java.lang.Iterable<ServiceProvider>java.util.function.Function<Cleaner,CleanerImpl>jdk.internal.ref.SoftCleanablejdk.internal.ref.SoftCleanable<?>java.lang.ref.SoftReference<?>java.lang.ref.Reference<?>jdk.internal.ref.WeakCleanablejdk.internal.ref.WeakCleanable<?>java.lang.ref.WeakReference<?>jdk.internal.ref.PhantomCleanable<?>java.lang.ref.PhantomReference<?>jdk.internal.ref.Tjava.lang.ref.PhantomReference<T>java.lang.ref.SoftReference<T>java.lang.ref.WeakReference<T>jdk.internal.reflect.ConstantPool$Tagjava.lang.Enum<Tag>java.lang.Comparable<Tag>java.lang.Class<Tag>jdk.internal.reflect.FieldAccessorjdk.internal.reflect.LangReflectAccessjdk.internal.reflect.Tjava.lang.reflect.Constructor<OptionalDataException>org.apiguardian.api.API$Statusorg.apiguardian.api.APIorg.junit.jupiter.api.function.ThrowingSupplierorg.junit.jupiter.api.function.ThrowingSupplier<>org.junit.jupiter.api.Torg.junit.jupiter.api.function.ThrowingSupplier<T>java.util.function.Supplier<String>org.junit.jupiter.api.function.Executablejava.util.stream.Stream<Executable>java.util.stream.BaseStream<Executable,Stream<Executable>>org.opentest4j.MultipleFailuresErrorjava.util.Collection<Executable>java.lang.Iterable<Executable>org.junit.jupiter.api.Vorg.junit.platform.commons.annotation.Testableorg.junit.jupiter.api.function.Tjava.util.List<Throwable>java.util.Collection<Throwable>java.lang.Iterable<Throwable>java.util.List<? extends Throwable>java.util.Collection<? extends Throwable>java.lang.Iterable<? extends Throwable>java.lang.Enum<Wrapper>java.lang.Comparable<Wrapper>java.lang.Class<Wrapper>sun.invoke.util.Tjava.util.Map<String,Method>java.util.Map<String,Class<?>>sun.reflect.generics.factory.GenericsFactorysun.reflect.generics.tree.FieldTypeSignaturesun.reflect.generics.repository.AbstractRepositorysun.reflect.generics.repository.Tsun.reflect.generics.tree.Treesun.reflect.generics.visitor.Reifiersun.reflect.generics.repository.GenericDeclRepositorysun.reflect.generics.tree.MethodTypeSignaturesun.reflect.generics.repository.GenericDeclRepository<MethodTypeSignature>sun.reflect.generics.repository.AbstractRepository<MethodTypeSignature>sun.reflect.generics.repository.Ssun.reflect.generics.repository.AbstractRepository<S>sun.reflect.generics.tree.Signaturesun.reflect.generics.tree.ArrayTypeSignaturesun.reflect.generics.visitor.TypeTreeVisitorsun.reflect.generics.visitor.TypeTreeVisitor<?>sun.reflect.generics.tree.TypeSignaturesun.reflect.generics.tree.BaseTypesun.reflect.generics.tree.BooleanSignaturesun.reflect.generics.tree.BottomSignaturesun.reflect.generics.tree.ByteSignaturesun.reflect.generics.tree.CharSignaturesun.reflect.generics.tree.ClassSignaturesun.reflect.generics.visitor.Visitorsun.reflect.generics.visitor.Visitor<?>sun.reflect.generics.tree.ClassTypeSignaturesun.reflect.generics.tree.FormalTypeParametersun.reflect.generics.tree.SimpleClassTypeSignaturejava.util.List<SimpleClassTypeSignature>java.util.Collection<SimpleClassTypeSignature>java.lang.Iterable<SimpleClassTypeSignature>sun.reflect.generics.tree.DoubleSignaturesun.reflect.generics.tree.TypeArgumentsun.reflect.generics.tree.FloatSignaturesun.reflect.generics.tree.TypeTreesun.reflect.generics.tree.IntSignaturesun.reflect.generics.tree.LongSignaturesun.reflect.generics.tree.ReturnTypesun.reflect.generics.tree.ShortSignaturesun.reflect.generics.tree.TypeVariableSignaturesun.reflect.generics.tree.VoidDescriptorsun.reflect.generics.tree.Wildcardsun.reflect.generics.visitor.TypeTreeVisitor<Type>sun.reflect.generics.visitor.Tsun.reflect.generics.visitor.TypeTreeVisitor<T>sun.util.locale.Extensionsun.util.locale.InternalLocaleBuilder$CaseInsensitiveCharsun.util.locale.InternalLocaleBuildersun.util.locale.InternalLocaleBuilder$CaseInsensitiveStringsun.util.locale.LocaleSyntaxExceptionsun.util.locale.LanguageTagsun.util.locale.ParseStatusjava.util.Map<CaseInsensitiveChar,String>java.util.Set<CaseInsensitiveString>java.util.Collection<CaseInsensitiveString>java.lang.Iterable<CaseInsensitiveString>java.util.Map<CaseInsensitiveString,String>junit.frameworkTestCaseorg.testng.annotationsorg.junit.runnerorg.junit.jupiter.paramsjavax.ws.rsjakarta.ws.rsjavax\.ws\.rs(\..*)?jakarta\.ws\.rs(\..*)? of MapKeyMapValueElementArrayElementSyntheticField\[([.a-zA-Z0-9]+)\]Argument\[([-0-9]+)\]Argument\[([-0-9]+)\.\.([0-9]+)\]-1765101213141516171819Parameter\[([-0-9]+)\]Parameter\[([-0-9]+)\.\.([0-9]+)\]^Field\[(.*)\.([^.]+)\.([^.]+)\]$PUTHEADPOSTDELETEOPTIONSbyte|charorg.apache.commons.codec.binaryorg.springframework.stereotypeisNullOrEmptyRandomUtilsMathdoInBackgroundArgumentBroadcastReceiveronReceiveRemoteMessageBodyReaderSourceCodeAnalysis                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 